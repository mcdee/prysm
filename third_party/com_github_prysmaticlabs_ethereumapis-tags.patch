diff --git a/eth/v1alpha1/BUILD.bazel b/eth/v1alpha1/BUILD.bazel
index c0fbe31..1211829 100644
--- a/eth/v1alpha1/BUILD.bazel
+++ b/eth/v1alpha1/BUILD.bazel
@@ -4,6 +4,7 @@
 
 load("@rules_proto//proto:defs.bzl", "proto_library")
 load("@rules_java//java:defs.bzl", "java_proto_library")
+load("@prysm//tools:ssz.bzl", "SSZ_DEPS", "ssz_gen_marshal")
 
 ##############################################################################
 # Go
@@ -25,7 +26,6 @@ proto_library(
         "beacon_chain.proto",
         "node.proto",
         "validator.proto",
-        ":generated_swagger_proto",
     ],
     visibility = ["//visibility:public"],
     deps = [
@@ -33,6 +33,7 @@ proto_library(
         "@com_google_protobuf//:any_proto",
         "@com_google_protobuf//:timestamp_proto",
         "@go_googleapis//google/api:annotations_proto",
+        "@gogo_special_proto//github.com/gogo/protobuf/gogoproto",
         "@grpc_ecosystem_grpc_gateway//protoc-gen-swagger/options:options_proto",
     ],
 )
@@ -48,11 +49,46 @@ java_proto_library(
 
 go_proto_library(
     name = "go_proto",
-    compilers = ["@io_bazel_rules_go//proto:go_grpc"],
+    compilers = ["@prysm//:grpc_proto_compiler"],
     importpath = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1",
     proto = ":proto",
     visibility = ["//visibility:public"],
     deps = [
+        "@com_github_prysmaticlabs_go_bitfield//:go_default_library",
+        "@go_googleapis//google/api:annotations_go_proto",
+    ],
+)
+
+ssz_gen_marshal(
+    name = "ssz_generated_files",
+    go_proto = ":go_proto",
+    objs = [
+        "Attestation",
+        "BeaconBlock",
+        "SignedBeaconBlock",
+        "Validator",
+        "BeaconBlockHeader",
+        "AttesterSlashing",
+        "VoluntaryExit",
+        "Deposit",
+        "ProposerSlashing",
+    ],
+)
+
+go_proto_library(
+    name = "go_grpc_gateway_library",
+    compilers = [
+        "@prysm//:grpc_nogogo_proto_compiler",
+        "@grpc_ecosystem_grpc_gateway//protoc-gen-grpc-gateway:go_gen_grpc_gateway",
+    ],
+    importpath = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1_gateway",
+    proto = ":proto",
+    visibility = ["//visibility:public"],
+    deps = [
+        "@com_github_gogo_protobuf//gogoproto:go_default_library",
+        "@com_github_golang_protobuf//descriptor:go_default_library",
+        "@com_github_golang_protobuf//ptypes/empty:go_default_library",
+        "@com_github_prysmaticlabs_go_bitfield//:go_default_library",
         "@go_googleapis//google/api:annotations_go_proto",
         "@grpc_ecosystem_grpc_gateway//protoc-gen-swagger/options:options_go_proto",
     ],
@@ -60,9 +96,11 @@ go_proto_library(
 
 go_library(
     name = "go_default_library",
+    srcs = [":ssz_generated_files"],
     embed = [":go_proto"],
     importpath = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1",
     visibility = ["//visibility:public"],
+    deps = SSZ_DEPS,
 )
 
 protoc_gen_swagger(
diff --git a/eth/v1alpha1/attestation.proto b/eth/v1alpha1/attestation.proto
index 3eee6f2..afbca04 100644
--- a/eth/v1alpha1/attestation.proto
+++ b/eth/v1alpha1/attestation.proto
@@ -15,6 +15,8 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
+
 option csharp_namespace = "Ethereum.Eth.v1alpha1";
 option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth";
 option java_multiple_files = true;
@@ -25,12 +27,12 @@ option php_namespace = "Ethereum\\Eth\\v1alpha1";
 message Attestation {
     // A bitfield representation of validator indices that have voted exactly
     // the same vote and have been aggregated into this attestation.
-    bytes aggregation_bits = 1;
+    bytes aggregation_bits = 1 [(gogoproto.moretags) = "ssz-max:\"2048\"", (gogoproto.casttype) = "github.com/prysmaticlabs/go-bitfield.Bitlist"];
 
     AttestationData data = 2;
 
     // 96 byte BLS aggregate signature.
-    bytes signature = 3;
+    bytes signature = 3 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message AggregateAttestationAndProof {
@@ -41,7 +43,7 @@ message AggregateAttestationAndProof {
     Attestation aggregate = 3;
 
     // 96 byte selection proof signed by the aggregator, which is the signature of the slot to aggregate.
-    bytes selection_proof = 2;
+    bytes selection_proof = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message SignedAggregateAttestationAndProof {
@@ -49,7 +51,7 @@ message SignedAggregateAttestationAndProof {
     AggregateAttestationAndProof message = 1;
 
     // 96 byte BLS aggregate signature signed by the aggregator over the message.
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message AttestationData {
@@ -63,7 +65,7 @@ message AttestationData {
     uint64 committee_index = 2;
 
     // 32 byte root of the LMD GHOST block vote.
-    bytes beacon_block_root = 3;
+    bytes beacon_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The most recent justified checkpoint in the beacon state
     Checkpoint source = 4;
@@ -99,5 +101,5 @@ message Checkpoint {
     uint64 epoch = 1;
 
     // Block root of the checkpoint references.
-    bytes root = 2;
+    bytes root = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
diff --git a/eth/v1alpha1/beacon_block.proto b/eth/v1alpha1/beacon_block.proto
index ece6613..f396a77 100644
--- a/eth/v1alpha1/beacon_block.proto
+++ b/eth/v1alpha1/beacon_block.proto
@@ -15,6 +15,7 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "eth/v1alpha1/attestation.proto";
 
 option csharp_namespace = "Ethereum.Eth.v1alpha1";
@@ -33,10 +34,10 @@ message BeaconBlock {
     uint64 proposer_index = 2;
 
     // 32 byte root of the parent block.
-    bytes parent_root = 3;
+    bytes parent_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte root of the resulting state after processing this block.
-    bytes state_root = 4;
+    bytes state_root = 4 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The block body itself.
     BeaconBlockBody body = 5;
@@ -48,38 +49,38 @@ message SignedBeaconBlock {
     BeaconBlock block = 1;
 
     // 96 byte BLS signature from the validator that produced this block.
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 // The block body of an Ethereum 2.0 beacon block.
 message BeaconBlockBody {
     // The validators RANDAO reveal 96 byte value.
-    bytes randao_reveal = 1;
+    bytes randao_reveal = 1 [(gogoproto.moretags) = "ssz-size:\"96\""];
 
     // A reference to the Ethereum 1.x chain.
     Eth1Data eth1_data = 2;
 
     // 32 byte field of arbitrary data. This field may contain any data and
     // is not used for anything other than a fun message.
-    bytes graffiti = 3;
+    bytes graffiti = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Block operations
     // Refer to spec constants at https://github.com/ethereum/eth2.0-specs/blob/dev/specs/core/0_beacon-chain.md#max-operations-per-block
 
     // At most MAX_PROPOSER_SLASHINGS.
-    repeated ProposerSlashing proposer_slashings = 4;
+    repeated ProposerSlashing proposer_slashings = 4 [(gogoproto.moretags) = "ssz-max:\"16\""];
 
     // At most MAX_ATTESTER_SLASHINGS.
-    repeated AttesterSlashing attester_slashings = 5;
+    repeated AttesterSlashing attester_slashings = 5 [(gogoproto.moretags) = "ssz-max:\"1\""];
 
     // At most MAX_ATTESTATIONS.
-    repeated Attestation attestations = 6;
+    repeated Attestation attestations = 6 [(gogoproto.moretags) = "ssz-max:\"128\""];
 
     // At most MAX_DEPOSITS.
-    repeated Deposit deposits = 7;
+    repeated Deposit deposits = 7 [(gogoproto.moretags) = "ssz-max:\"16\""];
 
     // At most MAX_VOLUNTARY_EXITS.
-    repeated SignedVoluntaryExit voluntary_exits = 8;
+    repeated SignedVoluntaryExit voluntary_exits = 8 [(gogoproto.moretags) = "ssz-max:\"16\""];
 }
 
 // Proposer slashings are proofs that a slashable offense has been committed by
@@ -106,20 +107,20 @@ message AttesterSlashing {
 message Deposit {
     message Data {
         // 48 byte BLS public key of the validator.
-        bytes public_key = 1;
+        bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\" spec-name:\"pubkey\""];
 
         // A 32 byte hash of the withdrawal address public key.
-        bytes withdrawal_credentials = 2;
+        bytes withdrawal_credentials = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
         // Deposit amount in gwei.
         uint64 amount = 3;
 
         // 96 byte signature from the validators public key.
-        bytes signature = 4;
+        bytes signature = 4 [(gogoproto.moretags) = "ssz-size:\"96\""];
     }
 
     // 32 byte roots in the deposit tree branch.
-    repeated bytes proof = 1;
+    repeated bytes proof = 1 [(gogoproto.moretags) = "ssz-size:\"33,32\""];
 
     Data data = 2;
 }
@@ -141,14 +142,14 @@ message SignedVoluntaryExit {
     VoluntaryExit exit = 1;
 
     // Validator's 96 byte signature
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 // Eth1Data represents references to the Ethereum 1.x deposit contract.
 message Eth1Data {
     // The 32 byte deposit tree root for the last deposit included in this
     // block.
-    bytes deposit_root = 1;
+    bytes deposit_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The total number of deposits included in the beacon chain since genesis
     // including the deposits in this block.
@@ -156,7 +157,7 @@ message Eth1Data {
 
     // The 32 byte block hash of the Ethereum 1.x block considered for deposit
     // inclusion.
-    bytes block_hash = 3;
+    bytes block_hash = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 // A beacon block header is essentially a beacon block with only a reference to
@@ -171,13 +172,13 @@ message BeaconBlockHeader {
     uint64 proposer_index = 2;
 
     // 32 byte merkle tree root of the parent ssz encoded block.
-    bytes parent_root = 3;
+    bytes parent_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte merkle tree root of the resulting ssz encoded state after processing this block.
-    bytes state_root = 4;
+    bytes state_root = 4 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // 32 byte merkle tree root of the ssz encoded block body.
-    bytes body_root = 5;
+    bytes body_root = 5 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message SignedBeaconBlockHeader {
@@ -185,14 +186,14 @@ message SignedBeaconBlockHeader {
     BeaconBlockHeader header = 1;
 
     // 96 byte BLS signature from the validator that produced this block header.
-    bytes signature = 2;
+    bytes signature = 2 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message IndexedAttestation {
-    repeated uint64 attesting_indices = 1;
+    repeated uint64 attesting_indices = 1 [(gogoproto.moretags) = "ssz-max:\"2048\""];
 
     AttestationData data = 2;
 
     // 96 bytes aggregate signature.
-    bytes signature = 3;
+    bytes signature = 3 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
diff --git a/eth/v1alpha1/beacon_chain.pb.go b/eth/v1alpha1/beacon_chain.pb.go
index dac8146..a5e8924 100755
--- a/eth/v1alpha1/beacon_chain.pb.go
+++ b/eth/v1alpha1/beacon_chain.pb.go
@@ -7,8 +7,8 @@ import (
 	context "context"
 	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
-	_ "github.com/golang/protobuf/ptypes/any"
 	empty "github.com/golang/protobuf/ptypes/empty"
+	timestamp "github.com/golang/protobuf/ptypes/timestamp"
 	_ "google.golang.org/genproto/googleapis/api/annotations"
 	grpc "google.golang.org/grpc"
 	math "math"
@@ -53,6 +53,276 @@ func (SetAction) EnumDescriptor() ([]byte, []int) {
 	return fileDescriptor_e33ad64d6ced77c1, []int{0}
 }
 
+type ChainInfo struct {
+	GenesisTime                      *timestamp.Timestamp `protobuf:"bytes,1001,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
+	DepositContractAddress           []byte               `protobuf:"bytes,1002,opt,name=deposit_contract_address,json=depositContractAddress,proto3" json:"deposit_contract_address,omitempty"`
+	SecondsPerSlot                   uint64               `protobuf:"varint,2001,opt,name=seconds_per_slot,json=secondsPerSlot,proto3" json:"seconds_per_slot,omitempty"`
+	SlotsPerEpoch                    uint64               `protobuf:"varint,2002,opt,name=slots_per_epoch,json=slotsPerEpoch,proto3" json:"slots_per_epoch,omitempty"`
+	MaxSeedLookahead                 uint64               `protobuf:"varint,2003,opt,name=max_seed_lookahead,json=maxSeedLookahead,proto3" json:"max_seed_lookahead,omitempty"`
+	MinValidatorWithdrawabilityDelay uint64               `protobuf:"varint,2004,opt,name=min_validator_withdrawability_delay,json=minValidatorWithdrawabilityDelay,proto3" json:"min_validator_withdrawability_delay,omitempty"`
+	PersistentCommitteePeriod        uint64               `protobuf:"varint,2005,opt,name=persistent_committee_period,json=persistentCommitteePeriod,proto3" json:"persistent_committee_period,omitempty"`
+	MinEpochsToInactivityPenalty     uint64               `protobuf:"varint,2006,opt,name=min_epochs_to_inactivity_penalty,json=minEpochsToInactivityPenalty,proto3" json:"min_epochs_to_inactivity_penalty,omitempty"`
+	Eth1FollowDistance               uint64               `protobuf:"varint,2007,opt,name=eth1_follow_distance,json=eth1FollowDistance,proto3" json:"eth1_follow_distance,omitempty"`
+	FarFutureEpoch                   uint64               `protobuf:"varint,2008,opt,name=far_future_epoch,json=farFutureEpoch,proto3" json:"far_future_epoch,omitempty"`
+	GenesisForkVersion               []byte               `protobuf:"bytes,2009,opt,name=genesis_fork_version,json=genesisForkVersion,proto3" json:"genesis_fork_version,omitempty"`
+	GenesisValidatorsRoot            []byte               `protobuf:"bytes,2010,opt,name=genesis_validators_root,json=genesisValidatorsRoot,proto3" json:"genesis_validators_root,omitempty"`
+	MinimumDepositAmount             uint64               `protobuf:"varint,2011,opt,name=minimum_deposit_amount,json=minimumDepositAmount,proto3" json:"minimum_deposit_amount,omitempty"`
+	MaximumEffectiveBalance          uint64               `protobuf:"varint,2012,opt,name=maximum_effective_balance,json=maximumEffectiveBalance,proto3" json:"maximum_effective_balance,omitempty"`
+	EffectiveBalanceIncrement        uint64               `protobuf:"varint,2013,opt,name=effective_balance_increment,json=effectiveBalanceIncrement,proto3" json:"effective_balance_increment,omitempty"`
+	EjectionBalance                  uint64               `protobuf:"varint,2014,opt,name=ejection_balance,json=ejectionBalance,proto3" json:"ejection_balance,omitempty"`
+	BlsWithdrawalPrefix              []byte               `protobuf:"bytes,2015,opt,name=bls_withdrawal_prefix,json=blsWithdrawalPrefix,proto3" json:"bls_withdrawal_prefix,omitempty"`
+	PreviousForkVersion              []byte               `protobuf:"bytes,3001,opt,name=previous_fork_version,json=previousForkVersion,proto3" json:"previous_fork_version,omitempty"`
+	CurrentForkVersion               []byte               `protobuf:"bytes,3002,opt,name=current_fork_version,json=currentForkVersion,proto3" json:"current_fork_version,omitempty"`
+	CurrentForkEpoch                 uint64               `protobuf:"varint,3003,opt,name=current_fork_epoch,json=currentForkEpoch,proto3" json:"current_fork_epoch,omitempty"`
+	NextForkVersion                  []byte               `protobuf:"bytes,3004,opt,name=next_fork_version,json=nextForkVersion,proto3" json:"next_fork_version,omitempty"`
+	NextForkEpoch                    uint64               `protobuf:"varint,3005,opt,name=next_fork_epoch,json=nextForkEpoch,proto3" json:"next_fork_epoch,omitempty"`
+	CurrentEpoch                     uint64               `protobuf:"varint,3006,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
+	ForkVersionSchedule              []*Fork              `protobuf:"bytes,3007,rep,name=fork_version_schedule,json=forkVersionSchedule,proto3" json:"fork_version_schedule,omitempty"`
+	XXX_NoUnkeyedLiteral             struct{}             `json:"-"`
+	XXX_unrecognized                 []byte               `json:"-"`
+	XXX_sizecache                    int32                `json:"-"`
+}
+
+func (m *ChainInfo) Reset()         { *m = ChainInfo{} }
+func (m *ChainInfo) String() string { return proto.CompactTextString(m) }
+func (*ChainInfo) ProtoMessage()    {}
+func (*ChainInfo) Descriptor() ([]byte, []int) {
+	return fileDescriptor_e33ad64d6ced77c1, []int{0}
+}
+
+func (m *ChainInfo) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_ChainInfo.Unmarshal(m, b)
+}
+func (m *ChainInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_ChainInfo.Marshal(b, m, deterministic)
+}
+func (m *ChainInfo) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_ChainInfo.Merge(m, src)
+}
+func (m *ChainInfo) XXX_Size() int {
+	return xxx_messageInfo_ChainInfo.Size(m)
+}
+func (m *ChainInfo) XXX_DiscardUnknown() {
+	xxx_messageInfo_ChainInfo.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_ChainInfo proto.InternalMessageInfo
+
+func (m *ChainInfo) GetGenesisTime() *timestamp.Timestamp {
+	if m != nil {
+		return m.GenesisTime
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetDepositContractAddress() []byte {
+	if m != nil {
+		return m.DepositContractAddress
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetSecondsPerSlot() uint64 {
+	if m != nil {
+		return m.SecondsPerSlot
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetSlotsPerEpoch() uint64 {
+	if m != nil {
+		return m.SlotsPerEpoch
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetMaxSeedLookahead() uint64 {
+	if m != nil {
+		return m.MaxSeedLookahead
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetMinValidatorWithdrawabilityDelay() uint64 {
+	if m != nil {
+		return m.MinValidatorWithdrawabilityDelay
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetPersistentCommitteePeriod() uint64 {
+	if m != nil {
+		return m.PersistentCommitteePeriod
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetMinEpochsToInactivityPenalty() uint64 {
+	if m != nil {
+		return m.MinEpochsToInactivityPenalty
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetEth1FollowDistance() uint64 {
+	if m != nil {
+		return m.Eth1FollowDistance
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetFarFutureEpoch() uint64 {
+	if m != nil {
+		return m.FarFutureEpoch
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetGenesisForkVersion() []byte {
+	if m != nil {
+		return m.GenesisForkVersion
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetGenesisValidatorsRoot() []byte {
+	if m != nil {
+		return m.GenesisValidatorsRoot
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetMinimumDepositAmount() uint64 {
+	if m != nil {
+		return m.MinimumDepositAmount
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetMaximumEffectiveBalance() uint64 {
+	if m != nil {
+		return m.MaximumEffectiveBalance
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetEffectiveBalanceIncrement() uint64 {
+	if m != nil {
+		return m.EffectiveBalanceIncrement
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetEjectionBalance() uint64 {
+	if m != nil {
+		return m.EjectionBalance
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetBlsWithdrawalPrefix() []byte {
+	if m != nil {
+		return m.BlsWithdrawalPrefix
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetPreviousForkVersion() []byte {
+	if m != nil {
+		return m.PreviousForkVersion
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetCurrentForkVersion() []byte {
+	if m != nil {
+		return m.CurrentForkVersion
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetCurrentForkEpoch() uint64 {
+	if m != nil {
+		return m.CurrentForkEpoch
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetNextForkVersion() []byte {
+	if m != nil {
+		return m.NextForkVersion
+	}
+	return nil
+}
+
+func (m *ChainInfo) GetNextForkEpoch() uint64 {
+	if m != nil {
+		return m.NextForkEpoch
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetCurrentEpoch() uint64 {
+	if m != nil {
+		return m.CurrentEpoch
+	}
+	return 0
+}
+
+func (m *ChainInfo) GetForkVersionSchedule() []*Fork {
+	if m != nil {
+		return m.ForkVersionSchedule
+	}
+	return nil
+}
+
+type Fork struct {
+	Epoch                uint64   `protobuf:"varint,1,opt,name=epoch,proto3" json:"epoch,omitempty"`
+	Version              []byte   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *Fork) Reset()         { *m = Fork{} }
+func (m *Fork) String() string { return proto.CompactTextString(m) }
+func (*Fork) ProtoMessage()    {}
+func (*Fork) Descriptor() ([]byte, []int) {
+	return fileDescriptor_e33ad64d6ced77c1, []int{1}
+}
+
+func (m *Fork) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_Fork.Unmarshal(m, b)
+}
+func (m *Fork) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_Fork.Marshal(b, m, deterministic)
+}
+func (m *Fork) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_Fork.Merge(m, src)
+}
+func (m *Fork) XXX_Size() int {
+	return xxx_messageInfo_Fork.Size(m)
+}
+func (m *Fork) XXX_DiscardUnknown() {
+	xxx_messageInfo_Fork.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_Fork proto.InternalMessageInfo
+
+func (m *Fork) GetEpoch() uint64 {
+	if m != nil {
+		return m.Epoch
+	}
+	return 0
+}
+
+func (m *Fork) GetVersion() []byte {
+	if m != nil {
+		return m.Version
+	}
+	return nil
+}
+
 type ValidatorChangeSet struct {
 	Action               SetAction `protobuf:"varint,1,opt,name=action,proto3,enum=ethereum.eth.v1alpha1.SetAction" json:"action,omitempty"`
 	PublicKeys           [][]byte  `protobuf:"bytes,2,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
@@ -65,7 +335,7 @@ func (m *ValidatorChangeSet) Reset()         { *m = ValidatorChangeSet{} }
 func (m *ValidatorChangeSet) String() string { return proto.CompactTextString(m) }
 func (*ValidatorChangeSet) ProtoMessage()    {}
 func (*ValidatorChangeSet) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{0}
+	return fileDescriptor_e33ad64d6ced77c1, []int{2}
 }
 
 func (m *ValidatorChangeSet) XXX_Unmarshal(b []byte) error {
@@ -116,7 +386,7 @@ func (m *ListIndexedAttestationsRequest) Reset()         { *m = ListIndexedAttes
 func (m *ListIndexedAttestationsRequest) String() string { return proto.CompactTextString(m) }
 func (*ListIndexedAttestationsRequest) ProtoMessage()    {}
 func (*ListIndexedAttestationsRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{1}
+	return fileDescriptor_e33ad64d6ced77c1, []int{3}
 }
 
 func (m *ListIndexedAttestationsRequest) XXX_Unmarshal(b []byte) error {
@@ -212,7 +482,7 @@ func (m *ListAttestationsRequest) Reset()         { *m = ListAttestationsRequest
 func (m *ListAttestationsRequest) String() string { return proto.CompactTextString(m) }
 func (*ListAttestationsRequest) ProtoMessage()    {}
 func (*ListAttestationsRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{2}
+	return fileDescriptor_e33ad64d6ced77c1, []int{4}
 }
 
 func (m *ListAttestationsRequest) XXX_Unmarshal(b []byte) error {
@@ -305,7 +575,7 @@ func (m *ListAttestationsResponse) Reset()         { *m = ListAttestationsRespon
 func (m *ListAttestationsResponse) String() string { return proto.CompactTextString(m) }
 func (*ListAttestationsResponse) ProtoMessage()    {}
 func (*ListAttestationsResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{3}
+	return fileDescriptor_e33ad64d6ced77c1, []int{5}
 }
 
 func (m *ListAttestationsResponse) XXX_Unmarshal(b []byte) error {
@@ -360,7 +630,7 @@ func (m *ListIndexedAttestationsResponse) Reset()         { *m = ListIndexedAtte
 func (m *ListIndexedAttestationsResponse) String() string { return proto.CompactTextString(m) }
 func (*ListIndexedAttestationsResponse) ProtoMessage()    {}
 func (*ListIndexedAttestationsResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{4}
+	return fileDescriptor_e33ad64d6ced77c1, []int{6}
 }
 
 func (m *ListIndexedAttestationsResponse) XXX_Unmarshal(b []byte) error {
@@ -420,7 +690,7 @@ func (m *ListBlocksRequest) Reset()         { *m = ListBlocksRequest{} }
 func (m *ListBlocksRequest) String() string { return proto.CompactTextString(m) }
 func (*ListBlocksRequest) ProtoMessage()    {}
 func (*ListBlocksRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{5}
+	return fileDescriptor_e33ad64d6ced77c1, []int{7}
 }
 
 func (m *ListBlocksRequest) XXX_Unmarshal(b []byte) error {
@@ -541,7 +811,7 @@ func (m *ListBlocksResponse) Reset()         { *m = ListBlocksResponse{} }
 func (m *ListBlocksResponse) String() string { return proto.CompactTextString(m) }
 func (*ListBlocksResponse) ProtoMessage()    {}
 func (*ListBlocksResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{6}
+	return fileDescriptor_e33ad64d6ced77c1, []int{8}
 }
 
 func (m *ListBlocksResponse) XXX_Unmarshal(b []byte) error {
@@ -595,7 +865,7 @@ func (m *BeaconBlockContainer) Reset()         { *m = BeaconBlockContainer{} }
 func (m *BeaconBlockContainer) String() string { return proto.CompactTextString(m) }
 func (*BeaconBlockContainer) ProtoMessage()    {}
 func (*BeaconBlockContainer) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{7}
+	return fileDescriptor_e33ad64d6ced77c1, []int{9}
 }
 
 func (m *BeaconBlockContainer) XXX_Unmarshal(b []byte) error {
@@ -652,7 +922,7 @@ func (m *ChainHead) Reset()         { *m = ChainHead{} }
 func (m *ChainHead) String() string { return proto.CompactTextString(m) }
 func (*ChainHead) ProtoMessage()    {}
 func (*ChainHead) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{8}
+	return fileDescriptor_e33ad64d6ced77c1, []int{10}
 }
 
 func (m *ChainHead) XXX_Unmarshal(b []byte) error {
@@ -771,7 +1041,7 @@ func (m *ListCommitteesRequest) Reset()         { *m = ListCommitteesRequest{} }
 func (m *ListCommitteesRequest) String() string { return proto.CompactTextString(m) }
 func (*ListCommitteesRequest) ProtoMessage()    {}
 func (*ListCommitteesRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{9}
+	return fileDescriptor_e33ad64d6ced77c1, []int{11}
 }
 
 func (m *ListCommitteesRequest) XXX_Unmarshal(b []byte) error {
@@ -850,7 +1120,7 @@ func (m *BeaconCommittees) Reset()         { *m = BeaconCommittees{} }
 func (m *BeaconCommittees) String() string { return proto.CompactTextString(m) }
 func (*BeaconCommittees) ProtoMessage()    {}
 func (*BeaconCommittees) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{10}
+	return fileDescriptor_e33ad64d6ced77c1, []int{12}
 }
 
 func (m *BeaconCommittees) XXX_Unmarshal(b []byte) error {
@@ -903,7 +1173,7 @@ func (m *BeaconCommittees_CommitteeItem) Reset()         { *m = BeaconCommittees
 func (m *BeaconCommittees_CommitteeItem) String() string { return proto.CompactTextString(m) }
 func (*BeaconCommittees_CommitteeItem) ProtoMessage()    {}
 func (*BeaconCommittees_CommitteeItem) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{10, 0}
+	return fileDescriptor_e33ad64d6ced77c1, []int{12, 0}
 }
 
 func (m *BeaconCommittees_CommitteeItem) XXX_Unmarshal(b []byte) error {
@@ -942,7 +1212,7 @@ func (m *BeaconCommittees_CommitteesList) Reset()         { *m = BeaconCommittee
 func (m *BeaconCommittees_CommitteesList) String() string { return proto.CompactTextString(m) }
 func (*BeaconCommittees_CommitteesList) ProtoMessage()    {}
 func (*BeaconCommittees_CommitteesList) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{10, 1}
+	return fileDescriptor_e33ad64d6ced77c1, []int{12, 1}
 }
 
 func (m *BeaconCommittees_CommitteesList) XXX_Unmarshal(b []byte) error {
@@ -988,7 +1258,7 @@ func (m *ListValidatorBalancesRequest) Reset()         { *m = ListValidatorBalan
 func (m *ListValidatorBalancesRequest) String() string { return proto.CompactTextString(m) }
 func (*ListValidatorBalancesRequest) ProtoMessage()    {}
 func (*ListValidatorBalancesRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{11}
+	return fileDescriptor_e33ad64d6ced77c1, []int{13}
 }
 
 func (m *ListValidatorBalancesRequest) XXX_Unmarshal(b []byte) error {
@@ -1096,7 +1366,7 @@ func (m *ValidatorBalances) Reset()         { *m = ValidatorBalances{} }
 func (m *ValidatorBalances) String() string { return proto.CompactTextString(m) }
 func (*ValidatorBalances) ProtoMessage()    {}
 func (*ValidatorBalances) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{12}
+	return fileDescriptor_e33ad64d6ced77c1, []int{14}
 }
 
 func (m *ValidatorBalances) XXX_Unmarshal(b []byte) error {
@@ -1158,7 +1428,7 @@ func (m *ValidatorBalances_Balance) Reset()         { *m = ValidatorBalances_Bal
 func (m *ValidatorBalances_Balance) String() string { return proto.CompactTextString(m) }
 func (*ValidatorBalances_Balance) ProtoMessage()    {}
 func (*ValidatorBalances_Balance) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{12, 0}
+	return fileDescriptor_e33ad64d6ced77c1, []int{14, 0}
 }
 
 func (m *ValidatorBalances_Balance) XXX_Unmarshal(b []byte) error {
@@ -1219,7 +1489,7 @@ func (m *ListValidatorsRequest) Reset()         { *m = ListValidatorsRequest{} }
 func (m *ListValidatorsRequest) String() string { return proto.CompactTextString(m) }
 func (*ListValidatorsRequest) ProtoMessage()    {}
 func (*ListValidatorsRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{13}
+	return fileDescriptor_e33ad64d6ced77c1, []int{15}
 }
 
 func (m *ListValidatorsRequest) XXX_Unmarshal(b []byte) error {
@@ -1334,7 +1604,7 @@ func (m *GetValidatorRequest) Reset()         { *m = GetValidatorRequest{} }
 func (m *GetValidatorRequest) String() string { return proto.CompactTextString(m) }
 func (*GetValidatorRequest) ProtoMessage()    {}
 func (*GetValidatorRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{14}
+	return fileDescriptor_e33ad64d6ced77c1, []int{16}
 }
 
 func (m *GetValidatorRequest) XXX_Unmarshal(b []byte) error {
@@ -1414,7 +1684,7 @@ func (m *Validators) Reset()         { *m = Validators{} }
 func (m *Validators) String() string { return proto.CompactTextString(m) }
 func (*Validators) ProtoMessage()    {}
 func (*Validators) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{15}
+	return fileDescriptor_e33ad64d6ced77c1, []int{17}
 }
 
 func (m *Validators) XXX_Unmarshal(b []byte) error {
@@ -1475,7 +1745,7 @@ func (m *Validators_ValidatorContainer) Reset()         { *m = Validators_Valida
 func (m *Validators_ValidatorContainer) String() string { return proto.CompactTextString(m) }
 func (*Validators_ValidatorContainer) ProtoMessage()    {}
 func (*Validators_ValidatorContainer) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{15, 0}
+	return fileDescriptor_e33ad64d6ced77c1, []int{17, 0}
 }
 
 func (m *Validators_ValidatorContainer) XXX_Unmarshal(b []byte) error {
@@ -1524,7 +1794,7 @@ func (m *GetValidatorActiveSetChangesRequest) Reset()         { *m = GetValidato
 func (m *GetValidatorActiveSetChangesRequest) String() string { return proto.CompactTextString(m) }
 func (*GetValidatorActiveSetChangesRequest) ProtoMessage()    {}
 func (*GetValidatorActiveSetChangesRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{16}
+	return fileDescriptor_e33ad64d6ced77c1, []int{18}
 }
 
 func (m *GetValidatorActiveSetChangesRequest) XXX_Unmarshal(b []byte) error {
@@ -1611,7 +1881,7 @@ func (m *ActiveSetChanges) Reset()         { *m = ActiveSetChanges{} }
 func (m *ActiveSetChanges) String() string { return proto.CompactTextString(m) }
 func (*ActiveSetChanges) ProtoMessage()    {}
 func (*ActiveSetChanges) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{17}
+	return fileDescriptor_e33ad64d6ced77c1, []int{19}
 }
 
 func (m *ActiveSetChanges) XXX_Unmarshal(b []byte) error {
@@ -1706,7 +1976,7 @@ func (m *ValidatorPerformanceRequest) Reset()         { *m = ValidatorPerformanc
 func (m *ValidatorPerformanceRequest) String() string { return proto.CompactTextString(m) }
 func (*ValidatorPerformanceRequest) ProtoMessage()    {}
 func (*ValidatorPerformanceRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{18}
+	return fileDescriptor_e33ad64d6ced77c1, []int{20}
 }
 
 func (m *ValidatorPerformanceRequest) XXX_Unmarshal(b []byte) error {
@@ -1754,7 +2024,7 @@ func (m *ValidatorPerformanceResponse) Reset()         { *m = ValidatorPerforman
 func (m *ValidatorPerformanceResponse) String() string { return proto.CompactTextString(m) }
 func (*ValidatorPerformanceResponse) ProtoMessage()    {}
 func (*ValidatorPerformanceResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{19}
+	return fileDescriptor_e33ad64d6ced77c1, []int{21}
 }
 
 func (m *ValidatorPerformanceResponse) XXX_Unmarshal(b []byte) error {
@@ -1858,7 +2128,7 @@ func (m *ValidatorQueue) Reset()         { *m = ValidatorQueue{} }
 func (m *ValidatorQueue) String() string { return proto.CompactTextString(m) }
 func (*ValidatorQueue) ProtoMessage()    {}
 func (*ValidatorQueue) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{20}
+	return fileDescriptor_e33ad64d6ced77c1, []int{22}
 }
 
 func (m *ValidatorQueue) XXX_Unmarshal(b []byte) error {
@@ -1918,7 +2188,7 @@ func (m *ListValidatorAssignmentsRequest) Reset()         { *m = ListValidatorAs
 func (m *ListValidatorAssignmentsRequest) String() string { return proto.CompactTextString(m) }
 func (*ListValidatorAssignmentsRequest) ProtoMessage()    {}
 func (*ListValidatorAssignmentsRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{21}
+	return fileDescriptor_e33ad64d6ced77c1, []int{23}
 }
 
 func (m *ListValidatorAssignmentsRequest) XXX_Unmarshal(b []byte) error {
@@ -2026,7 +2296,7 @@ func (m *ValidatorAssignments) Reset()         { *m = ValidatorAssignments{} }
 func (m *ValidatorAssignments) String() string { return proto.CompactTextString(m) }
 func (*ValidatorAssignments) ProtoMessage()    {}
 func (*ValidatorAssignments) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{22}
+	return fileDescriptor_e33ad64d6ced77c1, []int{24}
 }
 
 func (m *ValidatorAssignments) XXX_Unmarshal(b []byte) error {
@@ -2092,7 +2362,7 @@ func (m *ValidatorAssignments_CommitteeAssignment) Reset() {
 func (m *ValidatorAssignments_CommitteeAssignment) String() string { return proto.CompactTextString(m) }
 func (*ValidatorAssignments_CommitteeAssignment) ProtoMessage()    {}
 func (*ValidatorAssignments_CommitteeAssignment) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{22, 0}
+	return fileDescriptor_e33ad64d6ced77c1, []int{24, 0}
 }
 
 func (m *ValidatorAssignments_CommitteeAssignment) XXX_Unmarshal(b []byte) error {
@@ -2162,7 +2432,7 @@ func (m *GetValidatorParticipationRequest) Reset()         { *m = GetValidatorPa
 func (m *GetValidatorParticipationRequest) String() string { return proto.CompactTextString(m) }
 func (*GetValidatorParticipationRequest) ProtoMessage()    {}
 func (*GetValidatorParticipationRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{23}
+	return fileDescriptor_e33ad64d6ced77c1, []int{25}
 }
 
 func (m *GetValidatorParticipationRequest) XXX_Unmarshal(b []byte) error {
@@ -2241,7 +2511,7 @@ func (m *ValidatorParticipationResponse) Reset()         { *m = ValidatorPartici
 func (m *ValidatorParticipationResponse) String() string { return proto.CompactTextString(m) }
 func (*ValidatorParticipationResponse) ProtoMessage()    {}
 func (*ValidatorParticipationResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{24}
+	return fileDescriptor_e33ad64d6ced77c1, []int{26}
 }
 
 func (m *ValidatorParticipationResponse) XXX_Unmarshal(b []byte) error {
@@ -2295,7 +2565,7 @@ func (m *AttestationPoolRequest) Reset()         { *m = AttestationPoolRequest{}
 func (m *AttestationPoolRequest) String() string { return proto.CompactTextString(m) }
 func (*AttestationPoolRequest) ProtoMessage()    {}
 func (*AttestationPoolRequest) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{25}
+	return fileDescriptor_e33ad64d6ced77c1, []int{27}
 }
 
 func (m *AttestationPoolRequest) XXX_Unmarshal(b []byte) error {
@@ -2343,7 +2613,7 @@ func (m *AttestationPoolResponse) Reset()         { *m = AttestationPoolResponse
 func (m *AttestationPoolResponse) String() string { return proto.CompactTextString(m) }
 func (*AttestationPoolResponse) ProtoMessage()    {}
 func (*AttestationPoolResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{26}
+	return fileDescriptor_e33ad64d6ced77c1, []int{28}
 }
 
 func (m *AttestationPoolResponse) XXX_Unmarshal(b []byte) error {
@@ -2396,7 +2666,7 @@ func (m *BeaconConfig) Reset()         { *m = BeaconConfig{} }
 func (m *BeaconConfig) String() string { return proto.CompactTextString(m) }
 func (*BeaconConfig) ProtoMessage()    {}
 func (*BeaconConfig) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{27}
+	return fileDescriptor_e33ad64d6ced77c1, []int{29}
 }
 
 func (m *BeaconConfig) XXX_Unmarshal(b []byte) error {
@@ -2435,7 +2705,7 @@ func (m *SubmitSlashingResponse) Reset()         { *m = SubmitSlashingResponse{}
 func (m *SubmitSlashingResponse) String() string { return proto.CompactTextString(m) }
 func (*SubmitSlashingResponse) ProtoMessage()    {}
 func (*SubmitSlashingResponse) Descriptor() ([]byte, []int) {
-	return fileDescriptor_e33ad64d6ced77c1, []int{28}
+	return fileDescriptor_e33ad64d6ced77c1, []int{30}
 }
 
 func (m *SubmitSlashingResponse) XXX_Unmarshal(b []byte) error {
@@ -2465,6 +2735,8 @@ func (m *SubmitSlashingResponse) GetSlashedIndices() []uint64 {
 
 func init() {
 	proto.RegisterEnum("ethereum.eth.v1alpha1.SetAction", SetAction_name, SetAction_value)
+	proto.RegisterType((*ChainInfo)(nil), "ethereum.eth.v1alpha1.ChainInfo")
+	proto.RegisterType((*Fork)(nil), "ethereum.eth.v1alpha1.Fork")
 	proto.RegisterType((*ValidatorChangeSet)(nil), "ethereum.eth.v1alpha1.ValidatorChangeSet")
 	proto.RegisterType((*ListIndexedAttestationsRequest)(nil), "ethereum.eth.v1alpha1.ListIndexedAttestationsRequest")
 	proto.RegisterType((*ListAttestationsRequest)(nil), "ethereum.eth.v1alpha1.ListAttestationsRequest")
@@ -2506,177 +2778,215 @@ func init() {
 func init() { proto.RegisterFile("eth/v1alpha1/beacon_chain.proto", fileDescriptor_e33ad64d6ced77c1) }
 
 var fileDescriptor_e33ad64d6ced77c1 = []byte{
-	// 2706 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0x4b, 0x6f, 0x1b, 0xc9,
-	0x11, 0xf6, 0x90, 0x94, 0x2c, 0x96, 0xa8, 0x57, 0x8b, 0x92, 0xa5, 0xb1, 0x64, 0x71, 0x47, 0xb6,
-	0x45, 0x5b, 0x36, 0x29, 0xcb, 0x6b, 0xad, 0xb3, 0x59, 0x38, 0x90, 0x6c, 0x46, 0x76, 0xd6, 0xc1,
-	0x2a, 0x43, 0xad, 0xf3, 0x58, 0x23, 0xc4, 0x90, 0x6a, 0x92, 0x63, 0x93, 0x33, 0xf4, 0x4c, 0x53,
-	0xb0, 0x8c, 0x24, 0x87, 0x24, 0xc8, 0x39, 0x0f, 0x20, 0x09, 0x72, 0x08, 0x12, 0x20, 0x07, 0x6f,
-	0x82, 0x05, 0x82, 0x3d, 0xe4, 0xb2, 0x87, 0xdc, 0x72, 0xc8, 0x35, 0xc9, 0x21, 0x40, 0x8e, 0x39,
-	0xe5, 0x57, 0x04, 0xfd, 0x98, 0xf7, 0x0c, 0x49, 0xc1, 0x0a, 0xb0, 0xc8, 0x49, 0x9c, 0xaa, 0xea,
-	0xaa, 0xaf, 0xab, 0xab, 0xbb, 0xab, 0xaa, 0x05, 0x6b, 0x98, 0xb4, 0xcb, 0xc7, 0xb7, 0xb4, 0x4e,
-	0xaf, 0xad, 0xdd, 0x2a, 0xd7, 0xb1, 0xd6, 0x30, 0x8d, 0x5a, 0xa3, 0xad, 0xe9, 0x46, 0xa9, 0x67,
-	0x99, 0xc4, 0x44, 0x0b, 0x98, 0xb4, 0xb1, 0x85, 0xfb, 0xdd, 0x12, 0x26, 0xed, 0x92, 0x23, 0x29,
-	0xaf, 0xb4, 0x4c, 0xb3, 0xd5, 0xc1, 0x65, 0xad, 0xa7, 0x97, 0x35, 0xc3, 0x30, 0x89, 0x46, 0x74,
-	0xd3, 0xb0, 0xf9, 0x20, 0xf9, 0xa2, 0xe0, 0xb2, 0xaf, 0x7a, 0xbf, 0x59, 0xc6, 0xdd, 0x1e, 0x39,
-	0x11, 0xcc, 0xe5, 0x30, 0x53, 0x33, 0x1c, 0xd6, 0xa5, 0x00, 0x1a, 0x8d, 0x10, 0x6c, 0x73, 0xc5,
-	0x82, 0x1f, 0x8b, 0xb6, 0xde, 0x31, 0x1b, 0xcf, 0x85, 0xc0, 0x4a, 0x40, 0xe0, 0x58, 0xeb, 0xe8,
-	0x47, 0x1a, 0x31, 0x2d, 0xce, 0x55, 0x4c, 0x40, 0x4f, 0x1c, 0xd2, 0xfd, 0xb6, 0x66, 0xb4, 0x70,
-	0x15, 0x13, 0x74, 0x17, 0xc6, 0xb5, 0x06, 0x35, 0xb2, 0x24, 0x15, 0xa4, 0xe2, 0xf4, 0x76, 0xa1,
-	0x14, 0x3b, 0xe5, 0x52, 0x15, 0x93, 0x5d, 0x26, 0xa7, 0x0a, 0x79, 0xb4, 0x06, 0x93, 0xbd, 0x7e,
-	0xbd, 0xa3, 0x37, 0x6a, 0xcf, 0xf1, 0x89, 0xbd, 0x94, 0x2a, 0xa4, 0x8b, 0x39, 0x15, 0x38, 0xe9,
-	0x7d, 0x7c, 0x62, 0x2b, 0x7f, 0x90, 0xe0, 0xd2, 0x63, 0xdd, 0x26, 0x8f, 0x8c, 0x23, 0xfc, 0x12,
-	0x1f, 0xed, 0x7a, 0x13, 0xb2, 0x55, 0xfc, 0xa2, 0x8f, 0x6d, 0x82, 0x16, 0x61, 0x0c, 0xf7, 0xcc,
-	0x46, 0x9b, 0x19, 0xcf, 0x3c, 0x3c, 0xa7, 0xf2, 0x4f, 0x74, 0x05, 0xa6, 0x5a, 0xd8, 0xc0, 0xb6,
-	0x6e, 0xd7, 0x38, 0x3f, 0x55, 0x90, 0x8a, 0x13, 0x0f, 0xcf, 0xa9, 0x39, 0x41, 0xae, 0x30, 0xb1,
-	0x8b, 0x90, 0xed, 0x69, 0x2d, 0x5c, 0xb3, 0xf5, 0x57, 0x78, 0x29, 0x5d, 0x90, 0x8a, 0x63, 0xea,
-	0x04, 0x25, 0x54, 0xf5, 0x57, 0x18, 0xad, 0x02, 0x30, 0x26, 0x31, 0x9f, 0x63, 0x63, 0x29, 0x53,
-	0x90, 0x8a, 0x59, 0x95, 0x89, 0x1f, 0x52, 0xc2, 0xde, 0x34, 0xe4, 0x5e, 0xf4, 0xb1, 0x75, 0x52,
-	0x6b, 0xea, 0x1d, 0x82, 0x2d, 0xe5, 0x77, 0x12, 0x5c, 0xa0, 0x68, 0x3f, 0xe7, 0x30, 0x3f, 0x96,
-	0x60, 0x29, 0x0a, 0xd3, 0xee, 0x99, 0x86, 0x8d, 0xd1, 0x97, 0x21, 0xe7, 0x0b, 0x1b, 0x7b, 0x49,
-	0x2a, 0xa4, 0x8b, 0x93, 0xdb, 0x4a, 0xc2, 0x92, 0xfa, 0x54, 0xa8, 0x81, 0x71, 0xe8, 0x2a, 0xcc,
-	0x18, 0xf8, 0x25, 0xa9, 0xf9, 0x80, 0xa5, 0x18, 0xb0, 0x29, 0x4a, 0x3e, 0x70, 0xc0, 0x51, 0xec,
-	0xc4, 0x24, 0x5a, 0xc7, 0x3f, 0xb3, 0x2c, 0xa3, 0xd0, 0xa9, 0x29, 0x7f, 0x91, 0x60, 0x2d, 0x31,
-	0x00, 0x04, 0xe4, 0xa7, 0x90, 0xd7, 0x39, 0xbb, 0x16, 0x03, 0xfd, 0x5a, 0x02, 0xf4, 0xa8, 0x46,
-	0x75, 0x5e, 0x8f, 0x5a, 0x39, 0xab, 0x89, 0xfc, 0x59, 0x82, 0x39, 0x3a, 0x91, 0x3d, 0xba, 0xd9,
-	0xdc, 0xa8, 0xc8, 0x43, 0xc6, 0x32, 0x4d, 0xc2, 0x82, 0x22, 0xf7, 0xf0, 0x9c, 0xca, 0xbe, 0x28,
-	0xd5, 0xee, 0x98, 0x84, 0xd9, 0xa1, 0xa1, 0xc2, 0xbe, 0xbc, 0x08, 0x4a, 0x07, 0x23, 0x48, 0x86,
-	0xf3, 0x22, 0x54, 0xd8, 0xd2, 0xd3, 0xd8, 0x71, 0x08, 0xc1, 0xb0, 0x19, 0x1b, 0x18, 0x36, 0xe3,
-	0xc3, 0xc2, 0xe6, 0x53, 0x09, 0x90, 0x7f, 0x06, 0xc2, 0xfb, 0x1f, 0xc2, 0x0c, 0x3b, 0x40, 0xee,
-	0x9b, 0x06, 0xd1, 0x74, 0x03, 0x5b, 0x8e, 0xe3, 0x37, 0x13, 0x1c, 0xbf, 0xc7, 0x4e, 0x9d, 0xbd,
-	0xc0, 0x18, 0x35, 0xac, 0xe3, 0xac, 0xdc, 0xde, 0x87, 0x7c, 0x9c, 0x3d, 0x74, 0x0f, 0xc6, 0x98,
-	0x45, 0xe6, 0xf9, 0xc9, 0xed, 0x62, 0xd2, 0x91, 0xa5, 0xb7, 0x0c, 0x7c, 0xe4, 0xd3, 0xa0, 0xf2,
-	0x61, 0xd4, 0x2c, 0xfb, 0x51, 0x63, 0xcb, 0x47, 0x91, 0xe5, 0xd4, 0x2c, 0xa3, 0xa8, 0xa6, 0x49,
-	0x94, 0xd7, 0x19, 0xc8, 0xde, 0xa7, 0x97, 0xc0, 0x43, 0xac, 0x1d, 0xd1, 0x55, 0x68, 0x63, 0xed,
-	0xa8, 0xc6, 0x16, 0x95, 0xed, 0x7f, 0x75, 0x82, 0x12, 0xaa, 0x74, 0x59, 0x57, 0x01, 0x18, 0xd3,
-	0xdb, 0xfd, 0x19, 0x95, 0x89, 0xf3, 0x8d, 0x7f, 0x15, 0x66, 0x18, 0xdb, 0x67, 0x2d, 0xcd, 0xac,
-	0x4d, 0x51, 0xf2, 0x9e, 0x63, 0x11, 0x5d, 0x81, 0xe9, 0xa6, 0x6e, 0x68, 0x1d, 0xfd, 0x15, 0x16,
-	0x86, 0x32, 0x4c, 0xd5, 0x94, 0x4b, 0x65, 0xd6, 0x36, 0x60, 0xc6, 0x13, 0xe3, 0x26, 0xc7, 0x98,
-	0x9c, 0x37, 0x9a, 0xdb, 0xdd, 0x82, 0xbc, 0x27, 0xe8, 0x33, 0x3e, 0xce, 0x8c, 0x23, 0x97, 0x17,
-	0x40, 0xf0, 0xac, 0x6f, 0x13, 0xbd, 0xa9, 0x3b, 0x08, 0xce, 0x73, 0x04, 0x2e, 0xd5, 0x41, 0xe0,
-	0x89, 0x71, 0x04, 0x13, 0x1c, 0x81, 0x4b, 0x76, 0x11, 0x78, 0x82, 0x3e, 0x04, 0x59, 0x8e, 0xc0,
-	0xe5, 0x79, 0x08, 0x76, 0xe0, 0x42, 0xcf, 0xc2, 0xc7, 0xba, 0xd9, 0xb7, 0x6b, 0x21, 0x28, 0xc0,
-	0x4c, 0x2c, 0x38, 0xec, 0xaf, 0x04, 0x20, 0xdd, 0x85, 0xa5, 0x98, 0x71, 0x1c, 0xdb, 0x24, 0x1b,
-	0xb8, 0x18, 0x19, 0xc8, 0x31, 0xee, 0xc2, 0x6a, 0xcc, 0x48, 0x1f, 0xd8, 0x1c, 0x03, 0x2b, 0x47,
-	0x86, 0xbb, 0xa0, 0x95, 0x8f, 0x60, 0x81, 0xee, 0xaa, 0xfb, 0x66, 0xb7, 0xab, 0x13, 0x82, 0xf1,
-	0xd0, 0x1b, 0xc3, 0xb7, 0xdf, 0x53, 0xa1, 0xfd, 0x1e, 0xd9, 0xb3, 0xff, 0x48, 0xc3, 0x2c, 0x8f,
-	0x5e, 0x4f, 0x3f, 0xca, 0x07, 0x14, 0x3b, 0x6a, 0xbf, 0x0e, 0xd0, 0x70, 0x65, 0xd8, 0x55, 0x3c,
-	0xb9, 0xfd, 0xce, 0xc0, 0x2d, 0xec, 0xa9, 0x2c, 0x79, 0x3f, 0x2b, 0x06, 0xb1, 0x4e, 0x54, 0x9f,
-	0x2a, 0xf4, 0x36, 0x2c, 0xd2, 0xeb, 0xfe, 0x18, 0xd7, 0xdc, 0x74, 0xa2, 0xd6, 0x30, 0xfb, 0x06,
-	0x0f, 0xe4, 0x8c, 0x9a, 0xe7, 0x5c, 0x2f, 0xb1, 0xa0, 0x3c, 0xf9, 0x3d, 0x98, 0x72, 0x95, 0x3e,
-	0x22, 0xb8, 0x8b, 0x36, 0x61, 0xce, 0x1b, 0xaf, 0x1b, 0x47, 0x7a, 0x03, 0xf3, 0x93, 0x26, 0xa3,
-	0xce, 0xba, 0x8c, 0x47, 0x9c, 0x2e, 0xb7, 0x60, 0xda, 0x83, 0x44, 0xdd, 0x8b, 0x3e, 0x0c, 0x4c,
-	0x8f, 0x9f, 0x50, 0x77, 0x4e, 0x3d, 0x3d, 0x8a, 0xc4, 0x3f, 0x39, 0xb9, 0x0f, 0x33, 0xa1, 0xb9,
-	0xa3, 0x59, 0x48, 0x3f, 0xc7, 0x27, 0xc2, 0xb9, 0xf4, 0x27, 0x7a, 0x0c, 0x63, 0xc7, 0x5a, 0xa7,
-	0x8f, 0xd9, 0x7a, 0x4d, 0x6e, 0xef, 0x9c, 0xde, 0xab, 0x74, 0x0a, 0x2a, 0x57, 0xf2, 0x6e, 0xea,
-	0xae, 0xa4, 0xfc, 0x53, 0x82, 0x15, 0x4a, 0x73, 0x9d, 0xb6, 0xa7, 0x75, 0x34, 0xa3, 0xf1, 0x46,
-	0xc1, 0x13, 0xce, 0xc6, 0xd2, 0xe1, 0x6c, 0x0c, 0x2d, 0xc1, 0x79, 0xc7, 0xf1, 0x19, 0xe6, 0x78,
-	0xe7, 0xf3, 0x4c, 0xef, 0x99, 0x5f, 0xa6, 0x60, 0x2e, 0x32, 0xaf, 0x84, 0xa0, 0x7d, 0x0c, 0x13,
-	0x75, 0x21, 0x21, 0x42, 0x76, 0x2b, 0xc1, 0xb9, 0x11, 0x8d, 0x25, 0xf1, 0x43, 0x75, 0x35, 0xc4,
-	0xdd, 0x39, 0xe9, 0xe1, 0x77, 0x4e, 0x26, 0x74, 0xe7, 0xc8, 0xdf, 0x80, 0xf3, 0x42, 0x37, 0x9b,
-	0xba, 0xeb, 0x52, 0x7e, 0xcb, 0xab, 0x59, 0xd7, 0xa3, 0x74, 0x52, 0x2c, 0xe5, 0x10, 0xc7, 0x3e,
-	0xff, 0xa0, 0x6e, 0x16, 0x90, 0xc4, 0x0e, 0x71, 0x3e, 0x95, 0xff, 0x48, 0xfc, 0xb0, 0x70, 0x27,
-	0xf3, 0x46, 0xeb, 0xbd, 0xc8, 0xf3, 0xf6, 0x63, 0x6e, 0x66, 0x42, 0x15, 0x5f, 0xc1, 0xc5, 0xcc,
-	0x0c, 0x5c, 0xcc, 0xb1, 0xd0, 0x62, 0x86, 0x63, 0x68, 0x7c, 0x50, 0x0c, 0x9d, 0x0f, 0xc4, 0x50,
-	0x24, 0x0e, 0xbe, 0x0d, 0xf3, 0xfb, 0xd8, 0x9b, 0xaa, 0x6f, 0xa6, 0xdc, 0x67, 0xee, 0x4c, 0xb9,
-	0xd7, 0xd6, 0x02, 0xae, 0x4e, 0x89, 0x84, 0xca, 0x73, 0x76, 0x34, 0x9f, 0x49, 0x01, 0x78, 0x8e,
-	0x4c, 0x08, 0xb0, 0x8f, 0x60, 0xda, 0x3b, 0x75, 0x3a, 0xba, 0x4d, 0x44, 0x98, 0xbd, 0x3d, 0x2c,
-	0xcc, 0xec, 0x92, 0xef, 0x40, 0x73, 0xb2, 0x9c, 0x29, 0x57, 0x17, 0x3b, 0x93, 0xce, 0x28, 0xde,
-	0x9e, 0xf9, 0xab, 0x32, 0x37, 0xc3, 0xc9, 0x07, 0xfc, 0xe4, 0x78, 0xe9, 0x1e, 0x64, 0x5d, 0x0c,
-	0xe2, 0x38, 0x2a, 0x0c, 0x9b, 0x8a, 0xea, 0x0d, 0x51, 0x74, 0x58, 0xf7, 0x2f, 0xca, 0x2e, 0x8b,
-	0x98, 0x2a, 0x26, 0xbc, 0x1a, 0x3c, 0xd3, 0xbb, 0xeb, 0xc7, 0x69, 0x98, 0x0d, 0xeb, 0x4f, 0x58,
-	0xa5, 0x6d, 0x58, 0x60, 0xb1, 0xab, 0x11, 0x7c, 0x54, 0x8b, 0x56, 0x94, 0xf3, 0x2e, 0xf3, 0xc0,
-	0x0b, 0xc4, 0x4d, 0x98, 0xf3, 0xc6, 0x38, 0x21, 0x99, 0xe6, 0xf7, 0x89, 0xcb, 0x10, 0xf7, 0x09,
-	0xba, 0x01, 0x08, 0xbf, 0xd4, 0xc3, 0xda, 0x33, 0x4c, 0xfb, 0x2c, 0xe7, 0xf8, 0x54, 0x5f, 0x81,
-	0x69, 0x21, 0xed, 0xe8, 0x1d, 0x63, 0x7a, 0xa7, 0x38, 0xd5, 0x51, 0x5a, 0x82, 0x79, 0xbb, 0xa3,
-	0xd9, 0xed, 0x90, 0x56, 0xbe, 0x67, 0xe6, 0x04, 0xcb, 0xa7, 0x76, 0x03, 0x66, 0x1c, 0xf9, 0xe0,
-	0x16, 0x9a, 0x16, 0x64, 0x9f, 0x62, 0xfc, 0x0c, 0x37, 0xc2, 0x70, 0x27, 0xb8, 0x62, 0xc1, 0x0a,
-	0x2a, 0x76, 0xe4, 0x1d, 0xc5, 0x59, 0xae, 0x58, 0x90, 0x85, 0x62, 0xe5, 0x1e, 0x5c, 0x74, 0x97,
-	0xfe, 0x00, 0x5b, 0x4d, 0xd3, 0xea, 0xb2, 0x23, 0x54, 0xac, 0x7a, 0x68, 0xf3, 0x4b, 0x91, 0x72,
-	0xfe, 0x5f, 0x19, 0x58, 0x89, 0x57, 0x20, 0x8a, 0x89, 0xf7, 0x40, 0x6e, 0xf4, 0x2d, 0x0b, 0x1b,
-	0xa4, 0x86, 0x9b, 0x4d, 0xcc, 0xd3, 0x06, 0xf7, 0x84, 0xe7, 0xb7, 0xfd, 0x92, 0x90, 0xa8, 0x38,
-	0x02, 0xee, 0x1d, 0xb1, 0x01, 0x33, 0xba, 0xd1, 0xe8, 0xf4, 0x6d, 0xdd, 0x34, 0x58, 0xda, 0xc7,
-	0x03, 0x20, 0xa3, 0x4e, 0xbb, 0x64, 0x9a, 0xef, 0xd9, 0xa8, 0x0c, 0xf3, 0x9e, 0xe0, 0x91, 0x6e,
-	0x13, 0xae, 0x9f, 0xaf, 0x3e, 0x72, 0x59, 0x0f, 0x1c, 0x0e, 0xcd, 0x61, 0x1a, 0xa6, 0x65, 0xe1,
-	0x06, 0xe9, 0x9c, 0xd4, 0x8e, 0x4d, 0xea, 0x29, 0xdb, 0xec, 0x5b, 0x0d, 0xcc, 0x62, 0x60, 0x42,
-	0xcd, 0xbb, 0xdc, 0x27, 0x94, 0x59, 0x65, 0xbc, 0xb8, 0x51, 0x44, 0xb3, 0x5a, 0x98, 0xb0, 0x78,
-	0x88, 0x8c, 0x3a, 0x64, 0x3c, 0x9a, 0xf7, 0x86, 0x47, 0xd1, 0x54, 0x9f, 0xc5, 0xc5, 0x84, 0x8a,
-	0x82, 0x63, 0x58, 0x7d, 0xb1, 0x0f, 0x05, 0xc7, 0x47, 0xb5, 0x3a, 0x6e, 0x9a, 0x16, 0xe6, 0xc9,
-	0x6b, 0x8d, 0x58, 0x9a, 0x61, 0xeb, 0xac, 0x35, 0xc3, 0x23, 0x65, 0xd5, 0x91, 0xdb, 0x63, 0x62,
-	0x2c, 0x89, 0x3d, 0x74, 0x85, 0x50, 0x05, 0xd6, 0x5c, 0x45, 0x5a, 0x93, 0x60, 0x2b, 0xaa, 0x67,
-	0x82, 0xe9, 0x59, 0x71, 0xc4, 0x76, 0xa9, 0x54, 0x58, 0xcd, 0x4d, 0x40, 0x5d, 0xdd, 0xb6, 0x75,
-	0xa3, 0xe5, 0xa5, 0x7c, 0x3c, 0xa4, 0x72, 0xea, 0x9c, 0xe0, 0xf8, 0x4e, 0xde, 0x7d, 0x28, 0x68,
-	0xc7, 0xd8, 0xa2, 0x87, 0x60, 0x24, 0x51, 0x74, 0x2e, 0x42, 0x9a, 0xbf, 0xa7, 0xd4, 0x55, 0x21,
-	0xb7, 0x1b, 0xcc, 0x18, 0x45, 0x00, 0x28, 0x3f, 0x91, 0x60, 0xda, 0x25, 0x7e, 0xad, 0x8f, 0xfb,
-	0x98, 0x86, 0x64, 0xa3, 0xdd, 0xb7, 0x8c, 0x5a, 0x47, 0xef, 0xea, 0x4e, 0xf1, 0x05, 0x8c, 0xf4,
-	0x98, 0x52, 0xdc, 0xec, 0x94, 0x55, 0xfb, 0x31, 0x67, 0x47, 0xde, 0xe3, 0xfa, 0x76, 0x4c, 0x11,
-	0xd8, 0xae, 0xaf, 0x45, 0xf3, 0x25, 0xb6, 0xf3, 0x0f, 0x7c, 0x21, 0x2f, 0x1a, 0x18, 0xde, 0x91,
-	0x69, 0xdb, 0x7a, 0xcb, 0xe8, 0x62, 0x83, 0xfc, 0x3f, 0x24, 0x6b, 0x9f, 0xa4, 0x21, 0x1f, 0x37,
-	0xb5, 0x84, 0x83, 0x5a, 0x83, 0x49, 0xcd, 0x13, 0x12, 0x77, 0xe9, 0x97, 0x86, 0x5d, 0x40, 0x3e,
-	0xbd, 0x5e, 0x4e, 0xec, 0x11, 0x55, 0xbf, 0xce, 0xb3, 0xba, 0x54, 0xff, 0x2e, 0xc1, 0x7c, 0x8c,
-	0x2d, 0x7a, 0x6d, 0x38, 0x4d, 0xde, 0x60, 0x39, 0x91, 0x51, 0x67, 0xeb, 0xe1, 0x4a, 0x6b, 0x03,
-	0x66, 0x5c, 0xa9, 0x9a, 0x3f, 0xd3, 0x9b, 0x76, 0xc9, 0xac, 0x0d, 0x85, 0xd6, 0x61, 0x8a, 0xb7,
-	0xae, 0xb0, 0xc5, 0xeb, 0x55, 0x9e, 0xf8, 0xe5, 0x1c, 0x22, 0x2b, 0x53, 0xd7, 0x61, 0xaa, 0x67,
-	0x99, 0x3d, 0xd3, 0x76, 0x84, 0x78, 0x85, 0x9f, 0x73, 0x88, 0x4e, 0x3b, 0xc1, 0x97, 0x06, 0x8d,
-	0x85, 0x32, 0x4e, 0xa5, 0x09, 0x05, 0xff, 0xfd, 0x7d, 0xa0, 0x59, 0x44, 0x6f, 0xe8, 0x3d, 0xde,
-	0xff, 0x3a, 0xc3, 0xcb, 0xfb, 0x63, 0x09, 0x2e, 0x25, 0x59, 0x11, 0x67, 0x7d, 0x7c, 0x84, 0xac,
-	0x40, 0xd6, 0xed, 0x2d, 0x70, 0x33, 0xaa, 0x47, 0x40, 0x55, 0x98, 0xea, 0xf9, 0x95, 0x31, 0x3f,
-	0x4d, 0x6e, 0xdf, 0x1c, 0x16, 0x41, 0x41, 0x04, 0x41, 0x1d, 0xca, 0x21, 0x2c, 0xfa, 0x3a, 0x7e,
-	0x07, 0xa6, 0xd9, 0x71, 0x3c, 0x11, 0xd8, 0x29, 0xd2, 0xc0, 0x9d, 0x92, 0x0a, 0xed, 0x14, 0xe5,
-	0xb5, 0x04, 0x17, 0x22, 0x6a, 0x3f, 0x9f, 0x4d, 0xd6, 0x9f, 0x4a, 0x90, 0x73, 0x8a, 0x4f, 0xa3,
-	0xa9, 0xb7, 0xd0, 0x3e, 0x8c, 0x37, 0xd8, 0x2f, 0x81, 0xac, 0x3c, 0xa4, 0x62, 0xa5, 0xa2, 0x25,
-	0xfe, 0x87, 0xd7, 0xff, 0x62, 0xb8, 0xfc, 0x05, 0x98, 0xf4, 0x91, 0xfd, 0xa5, 0x71, 0x96, 0x97,
-	0xc6, 0x79, 0x7f, 0x69, 0x9c, 0xf5, 0x97, 0xb8, 0xbb, 0xb0, 0x58, 0xed, 0xd7, 0xbb, 0x3a, 0xa9,
-	0xd2, 0xe4, 0x46, 0x37, 0x5a, 0xae, 0xf7, 0x62, 0xf2, 0x20, 0x29, 0x2e, 0x0f, 0xba, 0xfe, 0x04,
-	0xb2, 0xee, 0x9b, 0x03, 0x5a, 0x04, 0xb4, 0xfb, 0xe0, 0x41, 0xed, 0xc9, 0xee, 0xe3, 0x47, 0x0f,
-	0x76, 0x0f, 0x3f, 0x50, 0x6b, 0xef, 0x57, 0xbe, 0x59, 0x9d, 0x3d, 0x87, 0x96, 0x61, 0x41, 0xad,
-	0x7c, 0xf5, 0x83, 0x27, 0x95, 0x30, 0x4b, 0xa2, 0x43, 0xaa, 0x95, 0xc3, 0x30, 0x3d, 0xb5, 0xfd,
-	0xa9, 0x0c, 0x93, 0x62, 0xea, 0x6d, 0x4d, 0x37, 0xd0, 0xaf, 0x25, 0x98, 0x0d, 0x37, 0xd4, 0x51,
-	0x29, 0xc1, 0x67, 0x09, 0x0f, 0x04, 0x72, 0x79, 0x64, 0x79, 0xee, 0x06, 0xe5, 0xda, 0xf7, 0xff,
-	0xf6, 0xef, 0x9f, 0xa5, 0xd6, 0xd1, 0x5b, 0xe5, 0x98, 0x47, 0x9d, 0x72, 0x20, 0x4e, 0x3e, 0x13,
-	0x0f, 0x13, 0x31, 0x5d, 0x74, 0x74, 0x67, 0x80, 0xdd, 0xe4, 0x67, 0x17, 0x79, 0xe7, 0xb4, 0xc3,
-	0x04, 0xea, 0x5b, 0x0c, 0xf5, 0x26, 0xba, 0x36, 0x14, 0x75, 0x59, 0x74, 0xe3, 0xd1, 0x0f, 0x25,
-	0x40, 0x55, 0x62, 0x61, 0xad, 0x1b, 0x00, 0xbe, 0x58, 0xe2, 0xef, 0x60, 0x25, 0xe7, 0x1d, 0xac,
-	0x54, 0xe9, 0xf6, 0xc8, 0x89, 0x3c, 0xc2, 0x36, 0x52, 0xb6, 0x18, 0x8a, 0xeb, 0xa8, 0x38, 0x1c,
-	0x85, 0xcd, 0x2c, 0x6f, 0x49, 0xe8, 0x57, 0x12, 0x2c, 0x73, 0x18, 0x71, 0x6e, 0x4c, 0x42, 0x33,
-	0xfa, 0xf3, 0x83, 0x72, 0x97, 0x81, 0xda, 0x46, 0x5b, 0x23, 0xbb, 0xc6, 0x03, 0xf7, 0x1b, 0x09,
-	0x66, 0x42, 0xa7, 0x0d, 0xba, 0x39, 0xdc, 0x11, 0xbe, 0xc3, 0x4e, 0x2e, 0x8d, 0x2a, 0x2e, 0x56,
-	0xb2, 0xc4, 0xe0, 0x16, 0xd1, 0xd5, 0xe1, 0x70, 0x7b, 0x14, 0xce, 0x8f, 0x24, 0x00, 0xef, 0xfd,
-	0x00, 0x15, 0x07, 0x04, 0x50, 0xe0, 0x91, 0x24, 0xd1, 0x85, 0xd1, 0xc7, 0x08, 0x65, 0x9d, 0x61,
-	0x5a, 0x45, 0x17, 0x63, 0x31, 0xd5, 0xb9, 0xe5, 0xef, 0x41, 0x8e, 0xaf, 0xa3, 0x40, 0x92, 0xb4,
-	0x74, 0x23, 0x3f, 0x0a, 0x28, 0xd7, 0x99, 0xd9, 0xcb, 0x48, 0x19, 0x60, 0xd6, 0x5b, 0xab, 0xef,
-	0xc0, 0x0c, 0xb7, 0xef, 0xbd, 0x10, 0x24, 0x41, 0x48, 0xaa, 0xcd, 0xdd, 0x91, 0xca, 0x4d, 0x66,
-	0x7a, 0x03, 0x5d, 0x89, 0x35, 0xcd, 0x1e, 0xa2, 0x69, 0xf5, 0xe0, 0x59, 0xef, 0x41, 0x6e, 0x9f,
-	0xd5, 0xd3, 0x6f, 0x6c, 0xfa, 0x2a, 0x33, 0x5d, 0x40, 0x97, 0x06, 0x9b, 0x46, 0x3f, 0x97, 0x20,
-	0xcf, 0xd6, 0x2a, 0x9c, 0x1e, 0xdd, 0x18, 0xb0, 0xb0, 0x91, 0x7e, 0xb8, 0xbc, 0x31, 0x62, 0xdb,
-	0x54, 0xd9, 0x60, 0xb8, 0xde, 0x42, 0x6b, 0xf1, 0xb8, 0x3c, 0xfb, 0xbf, 0x0d, 0xb7, 0xd3, 0xdc,
-	0x4a, 0xf2, 0xf6, 0x00, 0x64, 0x49, 0x3d, 0xd7, 0xc4, 0x78, 0x89, 0x0c, 0x48, 0x3a, 0xba, 0xbd,
-	0x62, 0xa9, 0xec, 0xf6, 0x24, 0x7f, 0x20, 0xc1, 0x74, 0xb0, 0xe5, 0x37, 0xd0, 0x6d, 0x91, 0xce,
-	0xa0, 0xfc, 0xd6, 0xd0, 0x4e, 0x95, 0x52, 0x60, 0x70, 0x64, 0xb4, 0x94, 0x04, 0x07, 0x7d, 0x97,
-	0x05, 0x8d, 0x3b, 0x04, 0x5d, 0x4f, 0x50, 0x1a, 0xd3, 0xb0, 0x93, 0x87, 0xf6, 0x97, 0x94, 0x35,
-	0x66, 0x7f, 0x19, 0x5d, 0x48, 0xb0, 0x8f, 0xfe, 0x24, 0xc1, 0xca, 0xa0, 0xb6, 0x13, 0x7a, 0x77,
-	0x04, 0x3c, 0x09, 0xbd, 0xaa, 0xc4, 0xb8, 0x0a, 0xcb, 0x27, 0x5d, 0x5d, 0xbe, 0x55, 0xe3, 0xe5,
-	0xab, 0x8d, 0x49, 0x43, 0xe0, 0x7a, 0x05, 0x73, 0x7e, 0x08, 0xbc, 0x26, 0x4d, 0xda, 0x71, 0x57,
-	0x86, 0x39, 0x8a, 0x0d, 0x4f, 0xda, 0x76, 0x3e, 0x18, 0x2f, 0x98, 0x99, 0x3f, 0x4a, 0x70, 0x21,
-	0x90, 0xeb, 0x7b, 0xfd, 0x16, 0xb4, 0x3d, 0x34, 0x61, 0x8e, 0x74, 0x77, 0xe4, 0xdb, 0xa7, 0x1a,
-	0x23, 0x0e, 0xe4, 0x1b, 0x0c, 0xec, 0x55, 0x74, 0x39, 0x11, 0x6c, 0xcf, 0x07, 0xeb, 0x13, 0xf1,
-	0x9f, 0x09, 0xb1, 0x15, 0xe5, 0xce, 0x28, 0x61, 0x1f, 0xad, 0xae, 0xe5, 0xcd, 0x53, 0x94, 0x97,
-	0x23, 0xe0, 0xf5, 0xd7, 0x9a, 0x9f, 0x49, 0xb0, 0x9c, 0x58, 0x4e, 0xa1, 0x77, 0x46, 0x08, 0xca,
-	0xb8, 0x02, 0x4c, 0xbe, 0x73, 0xba, 0x72, 0x66, 0xc8, 0x85, 0xec, 0xf7, 0x75, 0x00, 0x9f, 0x0d,
-	0x33, 0xfb, 0x98, 0x04, 0x12, 0xff, 0xa4, 0xd0, 0x5c, 0x1f, 0xa1, 0x00, 0x18, 0x72, 0xf9, 0xf2,
-	0x8a, 0x80, 0x26, 0x2a, 0x79, 0x7e, 0xfb, 0x79, 0x07, 0xd0, 0x23, 0xa3, 0x69, 0xa2, 0x6b, 0xc3,
-	0x26, 0xed, 0xfe, 0xc3, 0x91, 0x7c, 0x79, 0x98, 0x28, 0x55, 0xa8, 0xdc, 0x66, 0x70, 0x6e, 0xa2,
-	0xcd, 0x58, 0x38, 0x3e, 0xaf, 0xe8, 0x46, 0xd3, 0x14, 0xf7, 0x63, 0x51, 0xda, 0x92, 0xd0, 0x6b,
-	0xc9, 0x29, 0x3d, 0x76, 0xdd, 0xf2, 0x9b, 0x97, 0x20, 0x68, 0x63, 0x60, 0x8e, 0xe4, 0x09, 0xca,
-	0x49, 0xb9, 0x57, 0x7c, 0x49, 0xa3, 0xec, 0x30, 0xac, 0x5b, 0xa8, 0x14, 0x8b, 0xd5, 0x16, 0xe2,
-	0x76, 0xd9, 0xe9, 0x07, 0x94, 0x6d, 0xa6, 0xc7, 0x07, 0xf5, 0xc0, 0x6d, 0x02, 0x0c, 0x81, 0x1a,
-	0x16, 0xfc, 0x5f, 0x41, 0x75, 0xba, 0x12, 0x02, 0xea, 0xde, 0x2f, 0x24, 0x58, 0x36, 0xad, 0x56,
-	0xbc, 0xb1, 0xbd, 0x59, 0x5f, 0x3d, 0x75, 0x40, 0x63, 0xef, 0x40, 0xfa, 0xd6, 0x4e, 0x4b, 0x27,
-	0xed, 0x7e, 0xbd, 0xd4, 0x30, 0xbb, 0xe5, 0x9e, 0x75, 0x62, 0x77, 0x35, 0xa2, 0x37, 0x3a, 0x5a,
-	0xdd, 0x2e, 0x3b, 0x3a, 0xb4, 0x9e, 0x6e, 0x07, 0x60, 0x7c, 0x11, 0x93, 0xf6, 0xef, 0x53, 0x0b,
-	0x15, 0xc7, 0x46, 0xc5, 0x67, 0xe3, 0xaf, 0x1e, 0xfd, 0x69, 0x85, 0xb4, 0x9f, 0x3a, 0xf4, 0xfa,
-	0x38, 0x0b, 0xf6, 0xdb, 0xff, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xd6, 0x04, 0xff, 0x40, 0xcb, 0x27,
-	0x00, 0x00,
+	// 3319 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x5a, 0xcb, 0x73, 0x1c, 0x57,
+	0xd5, 0x77, 0x4b, 0x23, 0x5b, 0x3a, 0x7a, 0xfa, 0x6a, 0x24, 0x8d, 0x46, 0xb2, 0x25, 0xb7, 0x5f,
+	0xb2, 0x1d, 0xcf, 0xd8, 0x72, 0xec, 0x38, 0x8f, 0x72, 0x4a, 0xb2, 0xe5, 0xc7, 0x17, 0x7f, 0x5f,
+	0xe6, 0x6b, 0x29, 0x0e, 0x90, 0x14, 0x5d, 0x3d, 0x33, 0x77, 0x34, 0x37, 0xea, 0xe9, 0x9e, 0x74,
+	0xdf, 0x51, 0x2c, 0x17, 0xb0, 0x00, 0x8a, 0x35, 0x8f, 0x2a, 0xa0, 0x58, 0xf0, 0xa8, 0x62, 0xe1,
+	0x40, 0xa5, 0x8a, 0x62, 0x41, 0x15, 0x04, 0xc8, 0x8e, 0x05, 0x3b, 0x48, 0x02, 0x04, 0x02, 0x6c,
+	0xd8, 0x90, 0xbf, 0x82, 0xba, 0xaf, 0x7e, 0x4d, 0xf7, 0x8c, 0x4c, 0x4c, 0x55, 0x8a, 0x95, 0x35,
+	0xe7, 0xf9, 0xbb, 0xe7, 0x9e, 0x7b, 0xef, 0x39, 0xa7, 0x0d, 0x4b, 0x98, 0x36, 0xcb, 0xbb, 0x17,
+	0x2d, 0xbb, 0xdd, 0xb4, 0x2e, 0x96, 0xab, 0xd8, 0xaa, 0xb9, 0x8e, 0x59, 0x6b, 0x5a, 0xc4, 0x29,
+	0xb5, 0x3d, 0x97, 0xba, 0x68, 0x06, 0xd3, 0x26, 0xf6, 0x70, 0xa7, 0x55, 0xc2, 0xb4, 0x59, 0x52,
+	0x92, 0xc5, 0xc5, 0x6d, 0xd7, 0xdd, 0xb6, 0x71, 0xd9, 0x6a, 0x93, 0xb2, 0xe5, 0x38, 0x2e, 0xb5,
+	0x28, 0x71, 0x1d, 0x5f, 0x28, 0x15, 0x17, 0x24, 0x97, 0xff, 0xaa, 0x76, 0x1a, 0x65, 0xdc, 0x6a,
+	0xd3, 0x3d, 0xc9, 0x5c, 0x4a, 0x32, 0x29, 0x69, 0x61, 0x9f, 0x5a, 0xad, 0xb6, 0x14, 0x38, 0x1a,
+	0xc3, 0x64, 0x51, 0xca, 0xb8, 0xcc, 0xbc, 0x32, 0x90, 0x86, 0xb9, 0x6a, 0xbb, 0xb5, 0x1d, 0x29,
+	0xb0, 0x18, 0x13, 0xd8, 0xb5, 0x6c, 0x52, 0xb7, 0xa8, 0xeb, 0x09, 0xae, 0xfe, 0x10, 0x60, 0xe4,
+	0x3a, 0x5b, 0xe1, 0x1d, 0xa7, 0xe1, 0xa2, 0x6b, 0x30, 0xb6, 0x8d, 0x1d, 0xec, 0x13, 0xdf, 0x64,
+	0x38, 0x0a, 0xff, 0x3c, 0xb4, 0xac, 0xad, 0x8c, 0xae, 0x16, 0x4b, 0x02, 0x65, 0x49, 0xa1, 0x2c,
+	0x6d, 0x29, 0x94, 0xc6, 0xa8, 0x54, 0x60, 0x14, 0xf4, 0x34, 0x14, 0xea, 0xb8, 0xed, 0xfa, 0x84,
+	0x9a, 0x35, 0xd7, 0xa1, 0x9e, 0x55, 0xa3, 0xa6, 0x55, 0xaf, 0x7b, 0xd8, 0xf7, 0x0b, 0x1f, 0x31,
+	0x5b, 0x63, 0xc6, 0xac, 0x14, 0xb8, 0x2e, 0xf9, 0x6b, 0x82, 0x8d, 0xce, 0xc0, 0x94, 0x8f, 0x6b,
+	0xae, 0x53, 0xf7, 0xcd, 0x36, 0xf6, 0x4c, 0xdf, 0x76, 0x69, 0xe1, 0x77, 0x93, 0xcb, 0xda, 0x4a,
+	0xce, 0x98, 0x90, 0x8c, 0x0a, 0xf6, 0x36, 0x6d, 0x97, 0xa2, 0xd3, 0x30, 0xc9, 0xd8, 0x42, 0x10,
+	0xb7, 0xdd, 0x5a, 0xb3, 0xf0, 0x7b, 0x21, 0x39, 0xce, 0xe9, 0x15, 0xec, 0x6d, 0x30, 0x2a, 0x3a,
+	0x0f, 0xa8, 0x65, 0xdd, 0x37, 0x7d, 0x8c, 0xeb, 0xa6, 0xed, 0xba, 0x3b, 0x56, 0x13, 0x5b, 0xf5,
+	0xc2, 0xbb, 0x42, 0x76, 0xaa, 0x65, 0xdd, 0xdf, 0xc4, 0xb8, 0x7e, 0x57, 0x31, 0xd0, 0xff, 0xc1,
+	0xf1, 0x16, 0x71, 0xcc, 0x20, 0x44, 0xe6, 0x1b, 0x84, 0x36, 0xeb, 0x9e, 0xf5, 0x86, 0x55, 0x25,
+	0x36, 0xa1, 0x7b, 0x66, 0x1d, 0xdb, 0xd6, 0x5e, 0xe1, 0x3d, 0xa1, 0xbf, 0xdc, 0x22, 0xce, 0x3d,
+	0x25, 0xfa, 0x72, 0x5c, 0xf2, 0x06, 0x13, 0x44, 0xcf, 0xc3, 0x42, 0x1b, 0x7b, 0x3e, 0xf1, 0x29,
+	0x76, 0x58, 0x40, 0x5a, 0x2d, 0x42, 0x29, 0xc6, 0x0c, 0x36, 0x71, 0xeb, 0x85, 0xf7, 0x85, 0x9d,
+	0xf9, 0x50, 0xe6, 0xba, 0x12, 0xa9, 0x70, 0x09, 0x74, 0x0b, 0x98, 0x13, 0xb1, 0x44, 0xdf, 0xa4,
+	0xae, 0x49, 0x1c, 0xab, 0x46, 0xc9, 0x2e, 0xc3, 0xd2, 0xc6, 0x8e, 0x65, 0xd3, 0xbd, 0xc2, 0x1f,
+	0x84, 0x95, 0xc5, 0x16, 0x71, 0xf8, 0xa2, 0xfd, 0x2d, 0xf7, 0x4e, 0x20, 0x55, 0x11, 0x42, 0xe8,
+	0x22, 0xe4, 0x31, 0x6d, 0x5e, 0x34, 0x1b, 0xae, 0x6d, 0xbb, 0x6f, 0x98, 0x75, 0xe2, 0x53, 0xcb,
+	0xa9, 0xe1, 0xc2, 0x1f, 0x85, 0x32, 0x62, 0xcc, 0x9b, 0x9c, 0x77, 0x43, 0xb2, 0xd8, 0x7e, 0x34,
+	0x2c, 0xcf, 0x6c, 0x74, 0x68, 0xc7, 0xc3, 0x32, 0xca, 0x7f, 0x92, 0xfb, 0xd1, 0xb0, 0xbc, 0x9b,
+	0x9c, 0x2e, 0xc2, 0x7c, 0x11, 0xf2, 0x2a, 0x6b, 0x1a, 0xae, 0xb7, 0x63, 0xee, 0xb2, 0x05, 0xb9,
+	0x4e, 0xe1, 0x83, 0x49, 0xbe, 0xe3, 0x48, 0x32, 0x6f, 0xba, 0xde, 0xce, 0x3d, 0xc1, 0x42, 0x4f,
+	0xc1, 0x9c, 0x52, 0x09, 0xc2, 0xed, 0x9b, 0x9e, 0xeb, 0xd2, 0xc2, 0x9f, 0x85, 0xd6, 0x8c, 0xe4,
+	0x07, 0x21, 0xf6, 0x0d, 0xd7, 0xa5, 0xe8, 0x32, 0xcc, 0xb6, 0x88, 0x43, 0x5a, 0x9d, 0x96, 0xa9,
+	0x32, 0xcd, 0x6a, 0xb9, 0x1d, 0x87, 0x16, 0xfe, 0x22, 0xc0, 0xe5, 0x25, 0xfb, 0x86, 0xe0, 0xae,
+	0x71, 0x26, 0x7a, 0x16, 0xe6, 0x5b, 0xd6, 0x7d, 0xae, 0x86, 0x1b, 0x0d, 0xcc, 0xc2, 0x83, 0xcd,
+	0xaa, 0x65, 0xf3, 0x28, 0x7c, 0x28, 0x34, 0xe7, 0xa4, 0xc4, 0x86, 0x12, 0x58, 0x17, 0x7c, 0xb6,
+	0x8f, 0x5d, 0x4a, 0x26, 0x71, 0x6a, 0x1e, 0x6e, 0x61, 0x87, 0x16, 0xfe, 0x2a, 0xf7, 0x11, 0x27,
+	0xf4, 0xee, 0x28, 0x09, 0x74, 0x16, 0xa6, 0xf0, 0x6b, 0x8c, 0xc7, 0x8e, 0xa6, 0x74, 0xfa, 0x37,
+	0xa1, 0x35, 0xa9, 0x18, 0xca, 0xd9, 0x25, 0x98, 0xa9, 0xda, 0x7e, 0x98, 0x7a, 0xb6, 0xd9, 0xf6,
+	0x70, 0x83, 0xdc, 0x2f, 0xfc, 0x5d, 0xc4, 0x65, 0xba, 0x6a, 0xfb, 0x41, 0xb6, 0xd9, 0x15, 0xce,
+	0x63, 0x4a, 0x6d, 0x0f, 0xef, 0x12, 0xb7, 0x93, 0xd8, 0x82, 0x9f, 0xcf, 0x09, 0x25, 0xc5, 0x8d,
+	0xee, 0xc1, 0x45, 0xc8, 0xd7, 0x3a, 0x9e, 0xc7, 0x72, 0x33, 0xa6, 0xf3, 0x0b, 0xa1, 0x83, 0x24,
+	0x33, 0xaa, 0x72, 0x1e, 0x50, 0x4c, 0x45, 0xa4, 0xc5, 0xdb, 0x73, 0xe2, 0x40, 0x45, 0x14, 0x44,
+	0x62, 0x9c, 0x83, 0xc3, 0x0e, 0xbe, 0x9f, 0x30, 0xff, 0x4b, 0x61, 0x7e, 0x92, 0x71, 0xa2, 0xb6,
+	0x4f, 0xc3, 0x64, 0x28, 0x2c, 0x0c, 0xff, 0x4a, 0x18, 0x1e, 0x57, 0xa2, 0xc2, 0xea, 0x09, 0x18,
+	0x57, 0x20, 0x84, 0xd8, 0xaf, 0x85, 0xd8, 0x98, 0xa4, 0x0a, 0xa9, 0x0a, 0xcc, 0x44, 0xdd, 0x9a,
+	0x7e, 0xad, 0x89, 0xeb, 0x1d, 0x1b, 0x17, 0xde, 0x99, 0x5b, 0x1e, 0x5c, 0x19, 0x5d, 0x5d, 0x28,
+	0xa5, 0xde, 0xe5, 0x25, 0xe6, 0xc7, 0x98, 0x6e, 0x84, 0xc0, 0x36, 0xa5, 0xa2, 0x7e, 0x05, 0x72,
+	0x8c, 0x89, 0xf2, 0x30, 0x24, 0xfc, 0x6a, 0xdc, 0xad, 0xf8, 0x81, 0x0a, 0x70, 0x48, 0xad, 0x70,
+	0x80, 0x2f, 0x50, 0xfd, 0xd4, 0x5d, 0x40, 0x41, 0x12, 0x5f, 0x6f, 0x5a, 0xce, 0x36, 0xde, 0xc4,
+	0x14, 0x5d, 0x85, 0x83, 0x16, 0xdf, 0x78, 0x6e, 0x66, 0x62, 0x75, 0x39, 0x03, 0xcf, 0x26, 0xa6,
+	0x6b, 0x5c, 0xce, 0x90, 0xf2, 0x68, 0x09, 0x46, 0xdb, 0x9d, 0xaa, 0x4d, 0x6a, 0xe6, 0x0e, 0xde,
+	0xf3, 0x0b, 0x03, 0xcb, 0x83, 0x2b, 0x63, 0x06, 0x08, 0xd2, 0x0b, 0x78, 0xcf, 0xd7, 0x7f, 0xac,
+	0xc1, 0xd1, 0xbb, 0xc4, 0xa7, 0x77, 0x9c, 0x3a, 0xbe, 0x8f, 0xeb, 0x6b, 0xe1, 0x9b, 0xe1, 0x1b,
+	0xf8, 0xf5, 0x0e, 0xf6, 0x29, 0x9a, 0x8d, 0xad, 0xe1, 0xf6, 0x01, 0xb5, 0x8a, 0x93, 0x30, 0xae,
+	0xce, 0xa5, 0xe0, 0xb3, 0xb5, 0x0c, 0xdf, 0x3e, 0x60, 0xa8, 0x77, 0x41, 0x04, 0x77, 0x01, 0x46,
+	0xda, 0xd6, 0x36, 0x36, 0x7d, 0xf2, 0x00, 0x17, 0x06, 0x97, 0xb5, 0x95, 0x21, 0x63, 0x98, 0x11,
+	0x36, 0xc9, 0x03, 0x8c, 0x8e, 0x00, 0x70, 0x26, 0x75, 0x77, 0xb0, 0x53, 0xc8, 0x2d, 0x6b, 0x2b,
+	0x23, 0x06, 0x17, 0xdf, 0x62, 0x84, 0xf5, 0x09, 0x18, 0x7b, 0xbd, 0x83, 0xbd, 0x3d, 0xb3, 0x41,
+	0x6c, 0x8a, 0x3d, 0xfd, 0x87, 0x1a, 0xcc, 0x31, 0xb4, 0x9f, 0x70, 0x98, 0x6f, 0x6a, 0x50, 0xe8,
+	0x86, 0xe9, 0xb7, 0x5d, 0xc7, 0xc7, 0xe8, 0x26, 0x8c, 0x45, 0x5e, 0x66, 0xbf, 0xa0, 0xf1, 0x14,
+	0xd3, 0x33, 0xb6, 0x34, 0x62, 0xc2, 0x88, 0xe9, 0xa1, 0x53, 0xf2, 0x0c, 0x44, 0x80, 0x0d, 0x70,
+	0x60, 0xfc, 0x08, 0x54, 0x14, 0x38, 0x86, 0x9d, 0xba, 0xd4, 0xb2, 0xa3, 0x2b, 0x1b, 0xe1, 0x14,
+	0xb6, 0x34, 0xfd, 0x37, 0x1a, 0x2c, 0x65, 0x26, 0x80, 0x84, 0xfc, 0x2a, 0xe4, 0x89, 0x60, 0x9b,
+	0x29, 0xd0, 0xcf, 0x64, 0x40, 0xef, 0xb6, 0x68, 0x4c, 0x93, 0x6e, 0x2f, 0x8f, 0x6b, 0x21, 0xef,
+	0x68, 0x70, 0x98, 0x2d, 0x64, 0x9d, 0xd5, 0x33, 0x41, 0x56, 0xe4, 0x21, 0xc7, 0x5f, 0x0a, 0x96,
+	0x14, 0x63, 0xb7, 0x0f, 0x18, 0xfc, 0x17, 0xa3, 0xf2, 0xa2, 0x61, 0x40, 0xa6, 0x0a, 0xff, 0x15,
+	0x66, 0xd0, 0x60, 0x3c, 0x83, 0x8a, 0x70, 0x48, 0xa6, 0x0a, 0xdf, 0x7a, 0x96, 0x3b, 0x8a, 0x10,
+	0x4f, 0x9b, 0xa1, 0x9e, 0x69, 0x73, 0xb0, 0x5f, 0xda, 0xfc, 0x54, 0x03, 0x14, 0x5d, 0x81, 0x8c,
+	0xfe, 0x4b, 0x30, 0xc9, 0x6b, 0x34, 0x56, 0x05, 0x59, 0xc4, 0xc1, 0x9e, 0x0a, 0xfc, 0xb9, 0x8c,
+	0xc0, 0xaf, 0xf3, 0xc2, 0x6e, 0x3d, 0xa6, 0x63, 0x24, 0x6d, 0x3c, 0xae, 0xb0, 0x77, 0x20, 0x9f,
+	0xe6, 0x0f, 0x5d, 0x83, 0x21, 0xee, 0x91, 0x47, 0x7e, 0x74, 0x75, 0x25, 0xeb, 0xca, 0x22, 0xdb,
+	0x0e, 0xae, 0x47, 0x2c, 0x18, 0x42, 0x8d, 0xb9, 0xe5, 0x7f, 0x88, 0x87, 0x5e, 0x5c, 0x93, 0x23,
+	0x9c, 0xc2, 0xde, 0x76, 0xfd, 0x61, 0x4e, 0xd6, 0xa2, 0xb7, 0x59, 0x35, 0xb6, 0x00, 0x23, 0xac,
+	0x2a, 0x13, 0x95, 0xa0, 0xb8, 0x6a, 0x87, 0x19, 0x81, 0x97, 0x80, 0x47, 0x00, 0x38, 0x33, 0x3c,
+	0xfd, 0x39, 0x83, 0x8b, 0x8b, 0x83, 0x7f, 0x0a, 0x26, 0x39, 0x3b, 0xe2, 0x6d, 0x90, 0x7b, 0x1b,
+	0x67, 0xe4, 0x75, 0xe5, 0x11, 0x9d, 0x84, 0x89, 0x06, 0x71, 0x2c, 0x9b, 0x3c, 0xc0, 0xd2, 0x51,
+	0x4e, 0xbc, 0x38, 0x01, 0x55, 0x15, 0x9c, 0xa1, 0x98, 0x70, 0x39, 0x24, 0x2b, 0x21, 0x45, 0x16,
+	0x7e, 0x2f, 0x40, 0x3e, 0x14, 0x8c, 0x38, 0x3f, 0x28, 0x5e, 0xd4, 0x80, 0x17, 0x43, 0xf0, 0x5a,
+	0xc7, 0xa7, 0xa4, 0x41, 0x14, 0x82, 0x43, 0x02, 0x41, 0x40, 0x55, 0x08, 0x42, 0x31, 0x81, 0x60,
+	0x58, 0x20, 0x08, 0xc8, 0x01, 0x82, 0x50, 0x30, 0x82, 0x60, 0x44, 0x20, 0x08, 0x78, 0x21, 0x82,
+	0x2b, 0x30, 0x17, 0xd4, 0x0e, 0x09, 0x28, 0xc0, 0x5d, 0x04, 0xa5, 0xc5, 0xff, 0xc4, 0x20, 0x5d,
+	0x85, 0x42, 0x8a, 0x9e, 0xc0, 0x36, 0xca, 0x15, 0x67, 0xbb, 0x14, 0x05, 0xc6, 0x35, 0x38, 0x92,
+	0xa2, 0x19, 0x01, 0x3b, 0xc6, 0xc1, 0x16, 0xbb, 0xd4, 0x03, 0xd0, 0xfa, 0x2b, 0x30, 0xc3, 0x4e,
+	0x55, 0x50, 0x30, 0xf7, 0x7d, 0x31, 0x22, 0xe7, 0x7d, 0x20, 0x71, 0xde, 0xbb, 0xce, 0xec, 0xfb,
+	0x83, 0x30, 0x25, 0xb2, 0x37, 0xb4, 0x9f, 0xf1, 0xea, 0xbf, 0x0c, 0x10, 0xd4, 0xf5, 0xe2, 0x29,
+	0x1e, 0x5d, 0x7d, 0xaa, 0xe7, 0x11, 0x0e, 0x4d, 0x96, 0xc2, 0x3f, 0x37, 0x1c, 0xea, 0xed, 0x19,
+	0x11, 0x53, 0xe8, 0x49, 0x98, 0xb5, 0x44, 0xc1, 0x19, 0xb6, 0x23, 0x35, 0x5e, 0xe7, 0x0e, 0x8a,
+	0x32, 0x57, 0x70, 0xc3, 0xc2, 0x82, 0xf1, 0x8a, 0xcf, 0xc1, 0x78, 0x60, 0xf4, 0x0e, 0xc5, 0x2d,
+	0x56, 0x81, 0x85, 0xfa, 0xc4, 0xa9, 0x93, 0x1a, 0x16, 0x37, 0x4d, 0xce, 0x98, 0x0a, 0x18, 0x77,
+	0x04, 0xbd, 0xb8, 0x0d, 0x13, 0x21, 0x24, 0x16, 0x5e, 0xf4, 0x52, 0x6c, 0x79, 0xe2, 0x86, 0xba,
+	0xfc, 0xc8, 0xcb, 0x63, 0x48, 0xa2, 0x8b, 0x2b, 0x76, 0x60, 0x32, 0xb1, 0x76, 0x34, 0x05, 0x83,
+	0x3b, 0x78, 0x4f, 0x06, 0x97, 0xfd, 0x89, 0xee, 0xc2, 0xd0, 0xae, 0x65, 0x77, 0x30, 0xdf, 0xaf,
+	0xd1, 0xd5, 0x2b, 0x8f, 0x1e, 0x55, 0xb6, 0x04, 0x43, 0x18, 0x79, 0x66, 0xe0, 0xaa, 0xa6, 0x7f,
+	0xa0, 0xc1, 0x22, 0xa3, 0x05, 0x41, 0x93, 0x35, 0xf7, 0xc7, 0x49, 0x9e, 0x64, 0x35, 0x36, 0x98,
+	0xac, 0xc6, 0x58, 0x61, 0xa8, 0x02, 0x9f, 0xe3, 0x81, 0x57, 0x3f, 0x1f, 0xeb, 0x3b, 0xf3, 0xed,
+	0x01, 0x38, 0xdc, 0xb5, 0xae, 0x8c, 0xa4, 0xbd, 0x0b, 0xc3, 0xb2, 0x0b, 0x51, 0x29, 0x7b, 0x21,
+	0x23, 0xb8, 0x5d, 0x16, 0x4b, 0xf2, 0x0f, 0x23, 0xb0, 0x90, 0xf6, 0xe6, 0x0c, 0xf6, 0x7f, 0x73,
+	0x72, 0x89, 0x37, 0xa7, 0xf8, 0x29, 0x38, 0xa4, 0x5a, 0x20, 0xb6, 0xf4, 0x20, 0xa4, 0xe2, 0x95,
+	0x37, 0x46, 0x82, 0x88, 0xb2, 0x45, 0xf1, 0x92, 0x43, 0x5e, 0xfb, 0xe2, 0x07, 0x0b, 0xb3, 0x6a,
+	0xad, 0xc4, 0x09, 0x51, 0x3f, 0xf5, 0x8f, 0x34, 0x71, 0x59, 0x44, 0x3a, 0xc9, 0x8f, 0xb1, 0xdf,
+	0xb3, 0xa2, 0x6e, 0xdf, 0x15, 0x6e, 0x86, 0x0d, 0xf9, 0x2b, 0xbe, 0x99, 0xb9, 0x9e, 0x9b, 0x39,
+	0x94, 0xd8, 0xcc, 0x64, 0x0e, 0x1d, 0xec, 0x95, 0x43, 0x87, 0x62, 0x39, 0xd4, 0x95, 0x07, 0x9f,
+	0x85, 0xe9, 0x5b, 0x38, 0x5c, 0x6a, 0x64, 0xa5, 0x22, 0x66, 0xc1, 0x4a, 0x45, 0xd4, 0x96, 0x62,
+	0xa1, 0x1e, 0x90, 0x05, 0x55, 0x18, 0xec, 0xee, 0x7a, 0x66, 0x00, 0x20, 0x0c, 0x64, 0x46, 0x82,
+	0xbd, 0x02, 0x13, 0xe1, 0xad, 0x63, 0x13, 0x9f, 0xca, 0x34, 0x7b, 0xb2, 0x5f, 0x9a, 0xf9, 0xa5,
+	0xc8, 0x85, 0xa6, 0xaa, 0x9c, 0xf1, 0xc0, 0x16, 0xbf, 0x93, 0x1e, 0x53, 0xbe, 0xbd, 0x16, 0xed,
+	0xca, 0x82, 0x0a, 0x27, 0x1f, 0x8b, 0x93, 0x8a, 0xd2, 0x35, 0x18, 0x09, 0x30, 0xc8, 0xeb, 0x68,
+	0xb9, 0xdf, 0x52, 0x8c, 0x50, 0x45, 0x27, 0x70, 0x3c, 0xba, 0x29, 0x6b, 0x3c, 0x63, 0x36, 0x31,
+	0x15, 0xdd, 0xe0, 0x63, 0x7d, 0xbb, 0xbe, 0x3a, 0x08, 0x53, 0x49, 0xfb, 0x19, 0xbb, 0xb4, 0x0a,
+	0x33, 0x3c, 0x77, 0x2d, 0x8a, 0xeb, 0x66, 0x77, 0x47, 0x39, 0x1d, 0x30, 0x2b, 0x61, 0x22, 0x9e,
+	0x83, 0xc3, 0xa1, 0x8e, 0x4a, 0xc9, 0x41, 0xf1, 0x9e, 0x04, 0x0c, 0xf9, 0x9e, 0xa0, 0x27, 0x00,
+	0xe1, 0xfb, 0x24, 0x69, 0x3d, 0xc7, 0xad, 0x4f, 0x09, 0x4e, 0xc4, 0xf4, 0x49, 0x98, 0x90, 0xd2,
+	0xca, 0xee, 0x10, 0xb7, 0x3b, 0x2e, 0xa8, 0xca, 0x68, 0x09, 0xa6, 0x7d, 0xdb, 0xf2, 0x9b, 0x09,
+	0xab, 0xe2, 0xcc, 0x1c, 0x96, 0xac, 0x88, 0x59, 0x3e, 0x2c, 0x14, 0xf2, 0xf1, 0x23, 0x34, 0x21,
+	0xc9, 0x11, 0xc3, 0x7c, 0x16, 0x93, 0x30, 0x3c, 0x2c, 0x0c, 0x4b, 0x56, 0xdc, 0xb0, 0x92, 0x57,
+	0x86, 0x47, 0x84, 0x61, 0x49, 0x96, 0x86, 0xf5, 0x6b, 0xb0, 0x10, 0x6c, 0x7d, 0x05, 0x7b, 0x0d,
+	0xd7, 0x6b, 0xf1, 0x2b, 0x54, 0xee, 0x7a, 0xe2, 0xf0, 0x6b, 0x5d, 0xed, 0xfc, 0x87, 0x39, 0x58,
+	0x4c, 0x37, 0x20, 0x9b, 0x89, 0xe7, 0xa0, 0x18, 0x0c, 0x44, 0x92, 0x73, 0x2a, 0xf5, 0xda, 0x17,
+	0xd4, 0x70, 0x24, 0x31, 0xa4, 0xe2, 0xeb, 0x20, 0x4e, 0xcd, 0xee, 0x88, 0x29, 0x89, 0xed, 0x52,
+	0x91, 0x00, 0x39, 0x63, 0x22, 0x20, 0xb3, 0x7a, 0xcf, 0x47, 0x65, 0x98, 0x0e, 0x05, 0xd5, 0x08,
+	0x51, 0xed, 0x3e, 0x0a, 0x58, 0x6a, 0x82, 0xc8, 0x6b, 0x98, 0x9a, 0xeb, 0x79, 0xb8, 0x46, 0xed,
+	0x3d, 0x73, 0xd7, 0x65, 0x91, 0xf2, 0xdd, 0x8e, 0x57, 0xc3, 0x3c, 0x07, 0x86, 0x8d, 0x7c, 0xc0,
+	0xbd, 0xc7, 0x98, 0x9b, 0x9c, 0x97, 0xa6, 0x45, 0x2d, 0x6f, 0x1b, 0x53, 0x9e, 0x0f, 0x5d, 0x5a,
+	0x5b, 0x9c, 0xc7, 0xea, 0xde, 0xa4, 0x16, 0x1f, 0xf6, 0x1e, 0xe4, 0x3a, 0x28, 0xae, 0xc3, 0xfb,
+	0x8b, 0x5b, 0xb0, 0xac, 0x62, 0x64, 0x56, 0x71, 0xc3, 0x55, 0x53, 0x4e, 0x93, 0x7a, 0x96, 0xe3,
+	0x13, 0x3e, 0x9a, 0x11, 0x99, 0x72, 0x44, 0xc9, 0xad, 0x73, 0x31, 0x5e, 0xc4, 0x6e, 0x05, 0x42,
+	0x68, 0x03, 0x96, 0x02, 0x43, 0x56, 0x83, 0xaa, 0x99, 0x74, 0xd4, 0xce, 0x30, 0xb7, 0xb3, 0xa8,
+	0xc4, 0xd6, 0x98, 0x54, 0xd2, 0xcc, 0x79, 0x40, 0x2d, 0xe2, 0xfb, 0xc4, 0xd9, 0x8e, 0x8c, 0x44,
+	0x79, 0x4a, 0x8d, 0x19, 0x87, 0x25, 0x27, 0x72, 0xf3, 0xde, 0x82, 0x65, 0x6b, 0x17, 0x7b, 0xec,
+	0x12, 0xec, 0x2a, 0x14, 0xd5, 0x43, 0xc8, 0xea, 0xf7, 0x01, 0xe3, 0x88, 0x94, 0x5b, 0x8b, 0x57,
+	0x8c, 0x32, 0x01, 0xf4, 0xaf, 0x69, 0x30, 0x11, 0x10, 0xff, 0xbf, 0x83, 0x3b, 0x98, 0xa5, 0x64,
+	0xad, 0xd9, 0xf1, 0x1c, 0xd3, 0x26, 0x2d, 0xa2, 0x9a, 0x2f, 0xe0, 0xa4, 0xbb, 0x8c, 0x12, 0x54,
+	0xa7, 0xbc, 0xdb, 0x4f, 0xb9, 0x3b, 0xf2, 0x21, 0x37, 0x72, 0x62, 0x56, 0x80, 0x9f, 0x7a, 0xb3,
+	0xbb, 0x5e, 0xe2, 0x27, 0xbf, 0x12, 0x49, 0x79, 0x39, 0xc0, 0x08, 0xaf, 0x4c, 0xdf, 0x27, 0xdb,
+	0x4e, 0x0b, 0x3b, 0xf4, 0xbf, 0xa1, 0x58, 0x7b, 0x6b, 0x10, 0xf2, 0x69, 0x4b, 0xcb, 0xb8, 0xa8,
+	0x2d, 0x18, 0xb5, 0x42, 0x21, 0xf9, 0x96, 0x3e, 0xdf, 0xef, 0x01, 0x8a, 0xd8, 0x0d, 0x6b, 0xe2,
+	0x90, 0x68, 0x44, 0x6d, 0x3e, 0xae, 0x47, 0xf5, 0x3d, 0x0d, 0xa6, 0x53, 0x7c, 0xb1, 0x67, 0x43,
+	0x7d, 0x4d, 0x8b, 0xb7, 0x13, 0x39, 0x63, 0xaa, 0x9a, 0xec, 0xb4, 0x4e, 0xc3, 0x64, 0xf8, 0xad,
+	0x24, 0x5a, 0xe9, 0x4d, 0x04, 0x64, 0x3e, 0x86, 0x42, 0xc7, 0x61, 0x5c, 0x8c, 0xae, 0xd4, 0xf7,
+	0x22, 0x51, 0xf8, 0x8d, 0x29, 0x22, 0x6f, 0x53, 0x8f, 0xc3, 0x78, 0xdb, 0x73, 0xdb, 0xae, 0xaf,
+	0x84, 0x44, 0x87, 0x3f, 0xa6, 0x88, 0x6a, 0x9c, 0x10, 0x29, 0x83, 0x86, 0x12, 0x15, 0xa7, 0xde,
+	0x80, 0xe5, 0xe8, 0xfb, 0x5d, 0xb1, 0x3c, 0x4a, 0x6a, 0xa4, 0x2d, 0xe6, 0x5f, 0x8f, 0xf1, 0xf1,
+	0x7e, 0x53, 0x83, 0xa3, 0x59, 0x5e, 0xe4, 0x5d, 0x9f, 0x9e, 0x21, 0x8b, 0x30, 0x12, 0xcc, 0x16,
+	0x84, 0x1b, 0x23, 0x24, 0xa0, 0x4d, 0x18, 0x6f, 0x47, 0x8d, 0xf1, 0x38, 0x8d, 0xae, 0x9e, 0xef,
+	0x97, 0x41, 0x71, 0x04, 0x71, 0x1b, 0xfa, 0x16, 0xcc, 0x46, 0x26, 0x7e, 0x15, 0xd7, 0xb5, 0x55,
+	0x24, 0x62, 0x27, 0x45, 0xeb, 0x79, 0x52, 0x06, 0x12, 0x27, 0x45, 0x7f, 0xa8, 0xc1, 0x5c, 0x97,
+	0xd9, 0x4f, 0xe6, 0x90, 0xf5, 0xeb, 0x1a, 0x8c, 0xa9, 0xe6, 0xd3, 0x69, 0x90, 0x6d, 0x74, 0x0b,
+	0x0e, 0xd6, 0xf8, 0x5f, 0x12, 0x59, 0xb9, 0x4f, 0xc7, 0xca, 0x44, 0x4b, 0xe2, 0x1f, 0xd1, 0xff,
+	0x4b, 0xf5, 0xe2, 0xd3, 0x30, 0x1a, 0x21, 0x47, 0x5b, 0xe3, 0x11, 0xd1, 0x1a, 0xe7, 0xa3, 0xad,
+	0xf1, 0x48, 0xb4, 0xc5, 0x5d, 0x83, 0xd9, 0xcd, 0x4e, 0xb5, 0x45, 0xe8, 0x26, 0x2b, 0x6e, 0x88,
+	0xb3, 0x1d, 0x44, 0x2f, 0xa5, 0x0e, 0xd2, 0xd2, 0xea, 0xa0, 0xb3, 0xf7, 0x60, 0x24, 0xf8, 0xe6,
+	0x80, 0x66, 0x01, 0xad, 0xdd, 0xb8, 0x61, 0xde, 0x5b, 0xbb, 0x7b, 0xe7, 0xc6, 0xda, 0xd6, 0x8b,
+	0x86, 0xf9, 0xc2, 0xc6, 0xa7, 0x37, 0xa7, 0x0e, 0xa0, 0x79, 0x98, 0x31, 0x36, 0xfe, 0xf7, 0xc5,
+	0x7b, 0x1b, 0x49, 0x96, 0xc6, 0x54, 0x36, 0x37, 0xb6, 0x92, 0xf4, 0x81, 0xd5, 0xef, 0x2d, 0xc0,
+	0xa8, 0x5c, 0x7a, 0xd3, 0x22, 0x0e, 0xda, 0x81, 0xb1, 0x5b, 0xbc, 0x44, 0x95, 0xdf, 0x9e, 0x67,
+	0xbb, 0x3e, 0x32, 0x6f, 0xb4, 0xda, 0x74, 0xaf, 0x98, 0x55, 0x69, 0x07, 0x9a, 0xfa, 0xb1, 0x2f,
+	0xbe, 0xfb, 0x8f, 0x6f, 0x0c, 0x2c, 0xa0, 0xf9, 0x72, 0xca, 0xb7, 0xf0, 0x32, 0x61, 0xc6, 0xbf,
+	0xab, 0xc1, 0x54, 0x72, 0x7a, 0x8f, 0x4a, 0x19, 0x96, 0x33, 0xbe, 0x46, 0x14, 0xcb, 0xfb, 0x96,
+	0x17, 0x31, 0xd7, 0xcf, 0x70, 0x60, 0xc7, 0xd1, 0xb1, 0x54, 0x60, 0xb1, 0xa4, 0x7c, 0x5b, 0x7e,
+	0x05, 0x49, 0x19, 0xd9, 0xa3, 0xcb, 0x3d, 0xfc, 0x66, 0x7f, 0xe3, 0x29, 0x5e, 0x79, 0x54, 0x35,
+	0x89, 0xfa, 0x22, 0x47, 0x7d, 0x0e, 0x9d, 0xe9, 0x8b, 0xba, 0x2c, 0x47, 0xff, 0xe8, 0xcb, 0x1a,
+	0xa0, 0x4d, 0xea, 0x61, 0xab, 0x15, 0x03, 0x9e, 0xb5, 0xa5, 0xfb, 0x38, 0xb3, 0xfa, 0x05, 0x8e,
+	0xe2, 0x2c, 0x5a, 0xe9, 0x8f, 0xc2, 0xe7, 0x9e, 0x2f, 0x68, 0xe8, 0x3b, 0x1a, 0xcc, 0x0b, 0x18,
+	0x69, 0x61, 0xcc, 0x42, 0xb3, 0xff, 0x6f, 0x1d, 0xfa, 0x55, 0x0e, 0x6a, 0x15, 0x5d, 0xd8, 0x77,
+	0x68, 0x42, 0x70, 0xdf, 0xd7, 0x60, 0x32, 0x71, 0xb5, 0xa1, 0xf3, 0xfd, 0x03, 0x11, 0xb9, 0x59,
+	0x8b, 0xa5, 0xfd, 0x8a, 0xcb, 0x9d, 0x2c, 0x71, 0xb8, 0x2b, 0xe8, 0x54, 0x7f, 0xb8, 0x6d, 0x06,
+	0xe7, 0x2b, 0x1a, 0x40, 0xf8, 0xb1, 0x02, 0xad, 0xf4, 0x48, 0xa0, 0xd8, 0x17, 0x99, 0xcc, 0x10,
+	0x76, 0x7f, 0xf9, 0xd0, 0x8f, 0x73, 0x4c, 0x47, 0xd0, 0x42, 0x2a, 0xa6, 0xaa, 0xf0, 0xfc, 0x05,
+	0x18, 0x13, 0xfb, 0x28, 0x91, 0x64, 0x6d, 0xdd, 0xbe, 0xbf, 0x40, 0xe8, 0x67, 0xb9, 0xdb, 0x13,
+	0x48, 0xef, 0xe1, 0x36, 0xdc, 0xab, 0xcf, 0xc1, 0xa4, 0xf0, 0x1f, 0x7e, 0x8e, 0xf8, 0xb7, 0xae,
+	0x27, 0xa6, 0xa9, 0x9f, 0xe7, 0xae, 0x4f, 0xa3, 0x93, 0xa9, 0xae, 0xf9, 0x7f, 0x2f, 0x62, 0xad,
+	0x4a, 0xe8, 0xbd, 0x1d, 0xde, 0x8c, 0x1f, 0xd3, 0xf5, 0x29, 0xee, 0x7a, 0x19, 0x1d, 0xed, 0xed,
+	0x1a, 0x7d, 0x53, 0x83, 0x3c, 0xdf, 0xab, 0x64, 0x2d, 0xf6, 0x44, 0x8f, 0x8d, 0xed, 0x1a, 0xbe,
+	0x17, 0x4f, 0xef, 0x73, 0x46, 0xab, 0x9f, 0xe6, 0xb8, 0x8e, 0xa1, 0xa5, 0x74, 0x5c, 0xa1, 0xff,
+	0x1f, 0x24, 0x67, 0x77, 0x41, 0xdb, 0x7a, 0xa9, 0x07, 0xb2, 0xac, 0x01, 0x6f, 0x66, 0xbe, 0x74,
+	0x29, 0x64, 0x5d, 0xdd, 0x61, 0x67, 0x56, 0x0e, 0x06, 0xa0, 0x5f, 0xd2, 0x60, 0x22, 0x3e, 0x5f,
+	0xec, 0x19, 0xb6, 0xae, 0x31, 0x64, 0xf1, 0x58, 0xdf, 0xb1, 0x98, 0xbe, 0xcc, 0xe1, 0x14, 0x51,
+	0x21, 0x0b, 0x0e, 0xfa, 0x3c, 0x4f, 0x9a, 0x40, 0x05, 0x9d, 0xcd, 0x30, 0x9a, 0x32, 0x1d, 0x2c,
+	0xf6, 0x1d, 0x66, 0xe9, 0x4b, 0xdc, 0xff, 0x3c, 0x9a, 0xcb, 0xf0, 0x8f, 0x7e, 0xa6, 0xc1, 0x62,
+	0xaf, 0x19, 0x17, 0x7a, 0x66, 0x1f, 0x78, 0x32, 0x06, 0x63, 0x99, 0x79, 0x95, 0x94, 0xcf, 0x7a,
+	0xba, 0x22, 0xbb, 0x26, 0x7a, 0x65, 0x1f, 0xd3, 0x9a, 0xc4, 0xf5, 0x00, 0x0e, 0x47, 0x21, 0x88,
+	0x06, 0x38, 0xeb, 0xc4, 0x9d, 0xec, 0x17, 0x28, 0xae, 0x9e, 0x75, 0xec, 0x22, 0x30, 0x5e, 0xe7,
+	0x6e, 0x7e, 0xa2, 0xc1, 0x5c, 0xac, 0xb1, 0x08, 0x87, 0x3b, 0x68, 0xb5, 0x6f, 0x75, 0xde, 0x35,
+	0x4a, 0x2a, 0x5e, 0x7a, 0x24, 0x1d, 0x79, 0x21, 0x3f, 0xc1, 0xc1, 0x9e, 0x42, 0x27, 0x32, 0xc1,
+	0xb6, 0x23, 0xb0, 0xde, 0x92, 0xff, 0x0d, 0x22, 0xb5, 0x7d, 0xbd, 0xb2, 0x9f, 0xb4, 0xef, 0x6e,
+	0xe5, 0x8b, 0xe7, 0x1e, 0xa1, 0x97, 0xdd, 0x07, 0xde, 0x68, 0x63, 0xfb, 0xb6, 0x06, 0xf3, 0x99,
+	0xbd, 0x1b, 0x7a, 0x6a, 0x1f, 0x49, 0x99, 0xd6, 0xed, 0x15, 0x2f, 0x3f, 0x5a, 0xef, 0xd4, 0xe7,
+	0x41, 0x8e, 0xc6, 0x3a, 0x86, 0xcf, 0x87, 0xc9, 0x5b, 0x98, 0xc6, 0xba, 0x8c, 0xac, 0xd4, 0x3c,
+	0xbe, 0x8f, 0x6e, 0xa3, 0xcf, 0xe3, 0x2b, 0xda, 0x0f, 0x56, 0xa8, 0xe4, 0xc5, 0xeb, 0x17, 0x5e,
+	0x40, 0xbc, 0x42, 0x3f, 0xd3, 0x6f, 0xd1, 0xc1, 0xff, 0x6e, 0x2a, 0x9e, 0xe8, 0x27, 0xca, 0x0b,
+	0xf7, 0x4b, 0x1c, 0xce, 0x79, 0x74, 0x2e, 0x15, 0x4e, 0x24, 0x2a, 0xac, 0x86, 0x97, 0xef, 0xe3,
+	0x8a, 0x76, 0x41, 0x43, 0x0f, 0x35, 0xd5, 0xe7, 0xac, 0x05, 0xbd, 0xbe, 0xe8, 0x77, 0xd0, 0xe9,
+	0x9e, 0x35, 0x52, 0x28, 0x58, 0xcc, 0xaa, 0xbd, 0xd2, 0xfb, 0x27, 0xfd, 0x0a, 0xc7, 0x7a, 0x01,
+	0x95, 0x52, 0xb1, 0xfa, 0x52, 0xdc, 0x2f, 0xab, 0xe1, 0x43, 0xd9, 0xe7, 0x76, 0x22, 0x50, 0x2b,
+	0xc1, 0xc4, 0xa1, 0x0f, 0xd4, 0xa4, 0xe0, 0x7f, 0x0a, 0xaa, 0x1a, 0x81, 0x48, 0xa8, 0xeb, 0xdf,
+	0xd2, 0x60, 0xde, 0xf5, 0xb6, 0xd3, 0x9d, 0xad, 0x4f, 0x45, 0x9a, 0xb7, 0x0a, 0xcb, 0xbd, 0x8a,
+	0xf6, 0x99, 0x2b, 0xdb, 0x84, 0x36, 0x3b, 0xd5, 0x52, 0xcd, 0x6d, 0x95, 0xdb, 0xde, 0x9e, 0xdf,
+	0xb2, 0x28, 0xa9, 0xd9, 0x56, 0xd5, 0x2f, 0x2b, 0x1b, 0x56, 0x9b, 0xf8, 0x31, 0x18, 0xcf, 0x62,
+	0xda, 0xfc, 0xd1, 0xc0, 0xcc, 0x86, 0xf2, 0xb1, 0x11, 0xf1, 0xf1, 0xdb, 0x90, 0xfe, 0xea, 0x06,
+	0x6d, 0xbe, 0xaa, 0xe8, 0xd5, 0x83, 0x3c, 0xd9, 0x2f, 0xfd, 0x2b, 0x00, 0x00, 0xff, 0xff, 0xd6,
+	0x36, 0xe9, 0x8e, 0xa1, 0x2d, 0x00, 0x00,
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -2691,6 +3001,7 @@ const _ = grpc.SupportPackageIsVersion4
 //
 // For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
 type BeaconChainClient interface {
+	GetChainInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ChainInfo, error)
 	ListAttestations(ctx context.Context, in *ListAttestationsRequest, opts ...grpc.CallOption) (*ListAttestationsResponse, error)
 	ListIndexedAttestations(ctx context.Context, in *ListIndexedAttestationsRequest, opts ...grpc.CallOption) (*ListIndexedAttestationsResponse, error)
 	StreamAttestations(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (BeaconChain_StreamAttestationsClient, error)
@@ -2723,6 +3034,15 @@ func NewBeaconChainClient(cc *grpc.ClientConn) BeaconChainClient {
 	return &beaconChainClient{cc}
 }
 
+func (c *beaconChainClient) GetChainInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ChainInfo, error) {
+	out := new(ChainInfo)
+	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.BeaconChain/GetChainInfo", in, out, opts...)
+	if err != nil {
+		return nil, err
+	}
+	return out, nil
+}
+
 func (c *beaconChainClient) ListAttestations(ctx context.Context, in *ListAttestationsRequest, opts ...grpc.CallOption) (*ListAttestationsResponse, error) {
 	out := new(ListAttestationsResponse)
 	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.BeaconChain/ListAttestations", in, out, opts...)
@@ -3037,6 +3357,7 @@ func (c *beaconChainClient) SubmitProposerSlashing(ctx context.Context, in *Prop
 
 // BeaconChainServer is the server API for BeaconChain service.
 type BeaconChainServer interface {
+	GetChainInfo(context.Context, *empty.Empty) (*ChainInfo, error)
 	ListAttestations(context.Context, *ListAttestationsRequest) (*ListAttestationsResponse, error)
 	ListIndexedAttestations(context.Context, *ListIndexedAttestationsRequest) (*ListIndexedAttestationsResponse, error)
 	StreamAttestations(*empty.Empty, BeaconChain_StreamAttestationsServer) error
@@ -3065,6 +3386,24 @@ func RegisterBeaconChainServer(s *grpc.Server, srv BeaconChainServer) {
 	s.RegisterService(&_BeaconChain_serviceDesc, srv)
 }
 
+func _BeaconChain_GetChainInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(empty.Empty)
+	if err := dec(in); err != nil {
+		return nil, err
+	}
+	if interceptor == nil {
+		return srv.(BeaconChainServer).GetChainInfo(ctx, in)
+	}
+	info := &grpc.UnaryServerInfo{
+		Server:     srv,
+		FullMethod: "/ethereum.eth.v1alpha1.BeaconChain/GetChainInfo",
+	}
+	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
+		return srv.(BeaconChainServer).GetChainInfo(ctx, req.(*empty.Empty))
+	}
+	return interceptor(ctx, in, info, handler)
+}
+
 func _BeaconChain_ListAttestations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
 	in := new(ListAttestationsRequest)
 	if err := dec(in); err != nil {
@@ -3485,6 +3824,10 @@ var _BeaconChain_serviceDesc = grpc.ServiceDesc{
 	ServiceName: "ethereum.eth.v1alpha1.BeaconChain",
 	HandlerType: (*BeaconChainServer)(nil),
 	Methods: []grpc.MethodDesc{
+		{
+			MethodName: "GetChainInfo",
+			Handler:    _BeaconChain_GetChainInfo_Handler,
+		},
 		{
 			MethodName: "ListAttestations",
 			Handler:    _BeaconChain_ListAttestations_Handler,
diff --git a/eth/v1alpha1/beacon_chain.proto b/eth/v1alpha1/beacon_chain.proto
index 8ee263b..00e1c1f 100644
--- a/eth/v1alpha1/beacon_chain.proto
+++ b/eth/v1alpha1/beacon_chain.proto
@@ -15,9 +15,10 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "google/api/annotations.proto";
 import "google/protobuf/empty.proto";
-import "google/protobuf/any.proto";
+import "google/protobuf/timestamp.proto";
 
 import "eth/v1alpha1/attestation.proto";
 import "eth/v1alpha1/beacon_block.proto";
@@ -37,6 +38,13 @@ option php_namespace = "Ethereum\\Eth\\v1alpha1";
 service BeaconChain {
     // TODO(preston): Batch requests?
 
+    // Retrieve information about the chain.
+	rpc GetChainInfo(google.protobuf.Empty) returns (ChainInfo) {
+        option (google.api.http) = {
+            get: "/eth/v1alpha1/beacon/info"
+        };
+    }
+
     // Retrieve attestations by block root, slot, or epoch. 
     // 
     // The server may return an empty list when no attestations match the given 
@@ -254,6 +262,69 @@ service BeaconChain {
     } 
 }
 
+message ChainInfo {
+    // Chain start [1001-2000]
+    // The time at which this chain started.
+    google.protobuf.Timestamp genesis_time = 1001;
+    // The address of the Ethereum 1 deposit contract.
+    bytes deposit_contract_address = 1002;
+
+    // Chain configuration [2001-3000]
+    // The number of seconds for each slot.
+    uint64 seconds_per_slot = 2001;
+    // The number of slots that make up an epoch.
+    uint64 slots_per_epoch = 2002;
+    // The maximum time in the future for a randao seed, in epochs.
+    uint64 max_seed_lookahead = 2003;
+    // The minimum amount of time an exited validator must wait until its funds can be withdrawn, in epochs.
+    uint64 min_validator_withdrawability_delay = 2004;
+    // The period of time for which a committee is formed, in epochs.
+    uint64 persistent_committee_period = 2005;
+    // The minimum time before validators are punished for inactivity, in epochs.
+    uint64 min_epochs_to_inactivity_penalty = 2006;
+    // The number of Ethereum 1 blocks before a deposit is considered finalized.
+    uint64 eth1_follow_distance = 2007;
+    // The far future epoch.
+    uint64 far_future_epoch = 2008;
+    // The genesis fork version.
+    bytes genesis_fork_version = 2009;
+    // The genesis validators root.
+    bytes genesis_validators_root = 2010;
+    // The minimum deposit amount, in GWei.
+    uint64 minimum_deposit_amount = 2011;
+    // The maximum effective balance, in GWei.
+    uint64 maximum_effective_balance = 2012;
+    // The increment in which effective balance can change, in GWei.
+    uint64 effective_balance_increment = 2013;
+    // The balance below which a validator will be ejected, in GWei.
+    uint64 ejection_balance = 2014;
+    // The prefix that identifies the encoding version for withdrawal credentials.
+    bytes bls_withdrawal_prefix = 2015;
+
+    // Fork data [3001-4000]
+    // The previous fork version.
+    bytes previous_fork_version = 3001;
+    // The current fork version.
+    bytes current_fork_version = 3002;
+    // The epoch at which the current fork took effect.
+    uint64 current_fork_epoch = 3003;
+    // The next fork version.
+    bytes next_fork_version = 3004;
+    // The epoch at which the next fork takes effect; far_future_epoch for no planned fork.
+    uint64 next_fork_epoch = 3005;
+    // The chain's current epoch.
+    uint64 current_epoch = 3006;
+    // The fork version schedule.
+    repeated ForkDefinition fork_version_schedule = 3007;
+}
+
+message ForkDefinition {
+    // Epoch is the epoch from which the fork takes effect.
+    uint64 epoch = 1;
+    // Version are the bytes that define the fork version.
+    bytes version = 2;
+}
+
 // SetAction defines the type of action that should be applied to the keys in a validator change set.
 enum SetAction {
     // ADD_VALIDATOR_KEYS adds to the existing keys.
@@ -398,7 +469,7 @@ message ChainHead {
     uint64 head_epoch = 2;
 
     // 32 byte merkle tree root of the canonical head block in the beacon node.
-    bytes head_block_root = 3;
+    bytes head_block_root = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the finalized block.
     uint64 finalized_slot = 4;
@@ -407,7 +478,7 @@ message ChainHead {
     uint64 finalized_epoch = 5;
     
     // Most recent 32 byte finalized block root.
-    bytes finalized_block_root = 6;
+    bytes finalized_block_root = 6 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the justified block.
     uint64 justified_slot = 7;
@@ -416,7 +487,7 @@ message ChainHead {
     uint64 justified_epoch = 8;
     
     // Most recent 32 byte justified block root.
-    bytes justified_block_root = 9;
+    bytes justified_block_root = 9 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // Most recent slot that contains the previous justified block.
     uint64 previous_justified_slot = 10;
@@ -425,7 +496,7 @@ message ChainHead {
     uint64 previous_justified_epoch = 11;
 
     // Previous 32 byte justified block root.
-    bytes previous_justified_block_root = 12;
+    bytes previous_justified_block_root = 12 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message ListCommitteesRequest {
@@ -470,7 +541,7 @@ message ListValidatorBalancesRequest {
 
     // Validator 48 byte BLS public keys to filter validators for the given
     // epoch.
-    repeated bytes public_keys = 3;
+    repeated bytes public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
         
     // Validator indices to filter validators for the given epoch.
     repeated uint64 indices = 4;
@@ -491,7 +562,7 @@ message ValidatorBalances {
 
     message Balance {
         // Validator's 48 byte BLS public key.
-        bytes public_key = 1;
+        bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
         // Validator's index in the validator set.
         uint64 index = 2;
@@ -548,7 +619,7 @@ message GetValidatorRequest {
         uint64 index = 1;
 
         // 48 byte validator public key.
-        bytes public_key = 2;
+        bytes public_key = 2 [(gogoproto.moretags) = "ssz-size:\"48\""];
     }
 }
 
@@ -590,26 +661,25 @@ message ActiveSetChanges {
     uint64 epoch = 1;
 
     // 48 byte validator public keys that have been activated in the given epoch.
-    repeated bytes activated_public_keys = 2;
+    repeated bytes activated_public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators activated in the given epoch.
     repeated uint64 activated_indices = 3;
 
-    // 48 byte validator public keys that have been voluntarily exited in this
-    // epoch.
-    repeated bytes exited_public_keys = 4;
+    // 48 byte validator public keys that have been voluntarily exited in the given epoch.
+    repeated bytes exited_public_keys = 4 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators exited in the given epoch.
     repeated uint64 exited_indices = 5;
 
-    // 48 byte validator public keys that have been slashed in this epoch.
-    repeated bytes slashed_public_keys = 6;
+    // 48 byte validator public keys that have been slashed in the given epoch.
+    repeated bytes slashed_public_keys = 6 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators slashed in the given epoch.
     repeated uint64 slashed_indices = 7;
 
     // 48 byte validator public keys that have been involuntarily ejected in this epoch.
-    repeated bytes ejected_public_keys = 8;
+    repeated bytes ejected_public_keys = 8 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Indices of validators ejected in the given epoch.
     repeated uint64 ejected_indices = 9;
@@ -659,11 +729,11 @@ message ValidatorQueue {
 
     // Ordered list of 48 byte public keys awaiting activation. 0th index is the
     // next key to be processed.
-    repeated bytes activation_public_keys = 2;
+    repeated bytes activation_public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 
     // Ordered list of public keys awaiting exit. 0th index is the next key to
     // be processed.
-    repeated bytes exit_public_keys = 3;
+    repeated bytes exit_public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message ListValidatorAssignmentsRequest {
@@ -675,7 +745,7 @@ message ListValidatorAssignmentsRequest {
         bool genesis = 2;
     }
     // 48 byte validator public keys to filter assignments for the given epoch.
-    repeated bytes public_keys = 3;
+    repeated bytes public_keys = 3 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
         
     // Validator indicies to filter assignments for the given epoch.
     repeated uint64 indices = 4;
@@ -710,7 +780,7 @@ message ValidatorAssignments {
         uint64 proposer_slot = 4;
 
         // 48 byte BLS public key.
-        bytes public_key = 5;
+        bytes public_key = 5 [(gogoproto.moretags) = "ssz-size:\"48\""];
     }
 
     // The epoch for which this set of validator assignments is valid.
diff --git a/eth/v1alpha1/node.pb.go b/eth/v1alpha1/node.pb.go
index d839621..82a90f8 100755
--- a/eth/v1alpha1/node.pb.go
+++ b/eth/v1alpha1/node.pb.go
@@ -8,7 +8,6 @@ import (
 	fmt "fmt"
 	proto "github.com/golang/protobuf/proto"
 	empty "github.com/golang/protobuf/ptypes/empty"
-	timestamp "github.com/golang/protobuf/ptypes/timestamp"
 	_ "google.golang.org/genproto/googleapis/api/annotations"
 	grpc "google.golang.org/grpc"
 	math "math"
@@ -25,6 +24,37 @@ var _ = math.Inf
 // proto package needs to be updated.
 const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package
 
+type SyncState int32
+
+const (
+	SyncState_SYNC_UNKNOWN  SyncState = 0
+	SyncState_SYNC_INACTIVE SyncState = 1
+	SyncState_SYNC_CATCHUP  SyncState = 2
+	SyncState_SYNC_FULL     SyncState = 3
+)
+
+var SyncState_name = map[int32]string{
+	0: "SYNC_UNKNOWN",
+	1: "SYNC_INACTIVE",
+	2: "SYNC_CATCHUP",
+	3: "SYNC_FULL",
+}
+
+var SyncState_value = map[string]int32{
+	"SYNC_UNKNOWN":  0,
+	"SYNC_INACTIVE": 1,
+	"SYNC_CATCHUP":  2,
+	"SYNC_FULL":     3,
+}
+
+func (x SyncState) String() string {
+	return proto.EnumName(SyncState_name, int32(x))
+}
+
+func (SyncState) EnumDescriptor() ([]byte, []int) {
+	return fileDescriptor_4d5c81e0a630f5ab, []int{0}
+}
+
 type PeerDirection int32
 
 const (
@@ -50,223 +80,180 @@ func (x PeerDirection) String() string {
 }
 
 func (PeerDirection) EnumDescriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{0}
-}
-
-type SyncStatus struct {
-	Syncing              bool     `protobuf:"varint,1,opt,name=syncing,proto3" json:"syncing,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+	return fileDescriptor_4d5c81e0a630f5ab, []int{1}
 }
 
-func (m *SyncStatus) Reset()         { *m = SyncStatus{} }
-func (m *SyncStatus) String() string { return proto.CompactTextString(m) }
-func (*SyncStatus) ProtoMessage()    {}
-func (*SyncStatus) Descriptor() ([]byte, []int) {
+type NodeInfo struct {
+	NodeId                     string    `protobuf:"bytes,1001,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
+	Version                    string    `protobuf:"bytes,1002,opt,name=version,proto3" json:"version,omitempty"`
+	Addresses                  []string  `protobuf:"bytes,2001,rep,name=addresses,proto3" json:"addresses,omitempty"`
+	Peers                      []*Peer   `protobuf:"bytes,2002,rep,name=peers,proto3" json:"peers,omitempty"`
+	SyncState                  SyncState `protobuf:"varint,3001,opt,name=sync_state,json=syncState,proto3,enum=ethereum.eth.v1alpha1.SyncState" json:"sync_state,omitempty"`
+	CurrentEpoch               uint64    `protobuf:"varint,3002,opt,name=current_epoch,json=currentEpoch,proto3" json:"current_epoch,omitempty"`
+	CurrentSlot                uint64    `protobuf:"varint,3003,opt,name=current_slot,json=currentSlot,proto3" json:"current_slot,omitempty"`
+	CurrentBlockRoot           uint64    `protobuf:"varint,3004,opt,name=current_block_root,json=currentBlockRoot,proto3" json:"current_block_root,omitempty"`
+	FinalizedEpoch             uint64    `protobuf:"varint,3005,opt,name=finalized_epoch,json=finalizedEpoch,proto3" json:"finalized_epoch,omitempty"`
+	FinalizedSlot              uint64    `protobuf:"varint,3006,opt,name=finalized_slot,json=finalizedSlot,proto3" json:"finalized_slot,omitempty"`
+	FinalizedBlockRoot         uint64    `protobuf:"varint,3007,opt,name=finalized_block_root,json=finalizedBlockRoot,proto3" json:"finalized_block_root,omitempty"`
+	JustifiedEpoch             uint64    `protobuf:"varint,3008,opt,name=justified_epoch,json=justifiedEpoch,proto3" json:"justified_epoch,omitempty"`
+	JustifiedSlot              uint64    `protobuf:"varint,3009,opt,name=justified_slot,json=justifiedSlot,proto3" json:"justified_slot,omitempty"`
+	JustifiedBlockRoot         uint64    `protobuf:"varint,3010,opt,name=justified_block_root,json=justifiedBlockRoot,proto3" json:"justified_block_root,omitempty"`
+	PreviousJustifiedEpoch     uint64    `protobuf:"varint,3011,opt,name=previous_justified_epoch,json=previousJustifiedEpoch,proto3" json:"previous_justified_epoch,omitempty"`
+	PreviousJustifiedSlot      uint64    `protobuf:"varint,3012,opt,name=previous_justified_slot,json=previousJustifiedSlot,proto3" json:"previous_justified_slot,omitempty"`
+	PreviousJustifiedBlockRoot uint64    `protobuf:"varint,3013,opt,name=previous_justified_block_root,json=previousJustifiedBlockRoot,proto3" json:"previous_justified_block_root,omitempty"`
+	XXX_NoUnkeyedLiteral       struct{}  `json:"-"`
+	XXX_unrecognized           []byte    `json:"-"`
+	XXX_sizecache              int32     `json:"-"`
+}
+
+func (m *NodeInfo) Reset()         { *m = NodeInfo{} }
+func (m *NodeInfo) String() string { return proto.CompactTextString(m) }
+func (*NodeInfo) ProtoMessage()    {}
+func (*NodeInfo) Descriptor() ([]byte, []int) {
 	return fileDescriptor_4d5c81e0a630f5ab, []int{0}
 }
 
-func (m *SyncStatus) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_SyncStatus.Unmarshal(m, b)
+func (m *NodeInfo) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_NodeInfo.Unmarshal(m, b)
 }
-func (m *SyncStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_SyncStatus.Marshal(b, m, deterministic)
+func (m *NodeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_NodeInfo.Marshal(b, m, deterministic)
 }
-func (m *SyncStatus) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_SyncStatus.Merge(m, src)
+func (m *NodeInfo) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_NodeInfo.Merge(m, src)
 }
-func (m *SyncStatus) XXX_Size() int {
-	return xxx_messageInfo_SyncStatus.Size(m)
+func (m *NodeInfo) XXX_Size() int {
+	return xxx_messageInfo_NodeInfo.Size(m)
 }
-func (m *SyncStatus) XXX_DiscardUnknown() {
-	xxx_messageInfo_SyncStatus.DiscardUnknown(m)
+func (m *NodeInfo) XXX_DiscardUnknown() {
+	xxx_messageInfo_NodeInfo.DiscardUnknown(m)
 }
 
-var xxx_messageInfo_SyncStatus proto.InternalMessageInfo
+var xxx_messageInfo_NodeInfo proto.InternalMessageInfo
 
-func (m *SyncStatus) GetSyncing() bool {
+func (m *NodeInfo) GetNodeId() string {
 	if m != nil {
-		return m.Syncing
+		return m.NodeId
 	}
-	return false
-}
-
-type Genesis struct {
-	GenesisTime            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=genesis_time,json=genesisTime,proto3" json:"genesis_time,omitempty"`
-	DepositContractAddress []byte               `protobuf:"bytes,2,opt,name=deposit_contract_address,json=depositContractAddress,proto3" json:"deposit_contract_address,omitempty"`
-	XXX_NoUnkeyedLiteral   struct{}             `json:"-"`
-	XXX_unrecognized       []byte               `json:"-"`
-	XXX_sizecache          int32                `json:"-"`
-}
-
-func (m *Genesis) Reset()         { *m = Genesis{} }
-func (m *Genesis) String() string { return proto.CompactTextString(m) }
-func (*Genesis) ProtoMessage()    {}
-func (*Genesis) Descriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{1}
+	return ""
 }
 
-func (m *Genesis) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Genesis.Unmarshal(m, b)
-}
-func (m *Genesis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Genesis.Marshal(b, m, deterministic)
-}
-func (m *Genesis) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Genesis.Merge(m, src)
-}
-func (m *Genesis) XXX_Size() int {
-	return xxx_messageInfo_Genesis.Size(m)
-}
-func (m *Genesis) XXX_DiscardUnknown() {
-	xxx_messageInfo_Genesis.DiscardUnknown(m)
+func (m *NodeInfo) GetVersion() string {
+	if m != nil {
+		return m.Version
+	}
+	return ""
 }
 
-var xxx_messageInfo_Genesis proto.InternalMessageInfo
-
-func (m *Genesis) GetGenesisTime() *timestamp.Timestamp {
+func (m *NodeInfo) GetAddresses() []string {
 	if m != nil {
-		return m.GenesisTime
+		return m.Addresses
 	}
 	return nil
 }
 
-func (m *Genesis) GetDepositContractAddress() []byte {
+func (m *NodeInfo) GetPeers() []*Peer {
 	if m != nil {
-		return m.DepositContractAddress
+		return m.Peers
 	}
 	return nil
 }
 
-type Version struct {
-	Version              string   `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
-	Metadata             string   `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+func (m *NodeInfo) GetSyncState() SyncState {
+	if m != nil {
+		return m.SyncState
+	}
+	return SyncState_SYNC_UNKNOWN
 }
 
-func (m *Version) Reset()         { *m = Version{} }
-func (m *Version) String() string { return proto.CompactTextString(m) }
-func (*Version) ProtoMessage()    {}
-func (*Version) Descriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{2}
+func (m *NodeInfo) GetCurrentEpoch() uint64 {
+	if m != nil {
+		return m.CurrentEpoch
+	}
+	return 0
 }
 
-func (m *Version) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Version.Unmarshal(m, b)
-}
-func (m *Version) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Version.Marshal(b, m, deterministic)
-}
-func (m *Version) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Version.Merge(m, src)
-}
-func (m *Version) XXX_Size() int {
-	return xxx_messageInfo_Version.Size(m)
-}
-func (m *Version) XXX_DiscardUnknown() {
-	xxx_messageInfo_Version.DiscardUnknown(m)
+func (m *NodeInfo) GetCurrentSlot() uint64 {
+	if m != nil {
+		return m.CurrentSlot
+	}
+	return 0
 }
 
-var xxx_messageInfo_Version proto.InternalMessageInfo
-
-func (m *Version) GetVersion() string {
+func (m *NodeInfo) GetCurrentBlockRoot() uint64 {
 	if m != nil {
-		return m.Version
+		return m.CurrentBlockRoot
 	}
-	return ""
+	return 0
 }
 
-func (m *Version) GetMetadata() string {
+func (m *NodeInfo) GetFinalizedEpoch() uint64 {
 	if m != nil {
-		return m.Metadata
+		return m.FinalizedEpoch
 	}
-	return ""
+	return 0
 }
 
-type ImplementedServices struct {
-	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+func (m *NodeInfo) GetFinalizedSlot() uint64 {
+	if m != nil {
+		return m.FinalizedSlot
+	}
+	return 0
 }
 
-func (m *ImplementedServices) Reset()         { *m = ImplementedServices{} }
-func (m *ImplementedServices) String() string { return proto.CompactTextString(m) }
-func (*ImplementedServices) ProtoMessage()    {}
-func (*ImplementedServices) Descriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{3}
+func (m *NodeInfo) GetFinalizedBlockRoot() uint64 {
+	if m != nil {
+		return m.FinalizedBlockRoot
+	}
+	return 0
 }
 
-func (m *ImplementedServices) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_ImplementedServices.Unmarshal(m, b)
-}
-func (m *ImplementedServices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_ImplementedServices.Marshal(b, m, deterministic)
-}
-func (m *ImplementedServices) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_ImplementedServices.Merge(m, src)
-}
-func (m *ImplementedServices) XXX_Size() int {
-	return xxx_messageInfo_ImplementedServices.Size(m)
-}
-func (m *ImplementedServices) XXX_DiscardUnknown() {
-	xxx_messageInfo_ImplementedServices.DiscardUnknown(m)
+func (m *NodeInfo) GetJustifiedEpoch() uint64 {
+	if m != nil {
+		return m.JustifiedEpoch
+	}
+	return 0
 }
 
-var xxx_messageInfo_ImplementedServices proto.InternalMessageInfo
-
-func (m *ImplementedServices) GetServices() []string {
+func (m *NodeInfo) GetJustifiedSlot() uint64 {
 	if m != nil {
-		return m.Services
+		return m.JustifiedSlot
 	}
-	return nil
+	return 0
 }
 
-type Peers struct {
-	Peers                []*Peer  `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
-	XXX_NoUnkeyedLiteral struct{} `json:"-"`
-	XXX_unrecognized     []byte   `json:"-"`
-	XXX_sizecache        int32    `json:"-"`
+func (m *NodeInfo) GetJustifiedBlockRoot() uint64 {
+	if m != nil {
+		return m.JustifiedBlockRoot
+	}
+	return 0
 }
 
-func (m *Peers) Reset()         { *m = Peers{} }
-func (m *Peers) String() string { return proto.CompactTextString(m) }
-func (*Peers) ProtoMessage()    {}
-func (*Peers) Descriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{4}
+func (m *NodeInfo) GetPreviousJustifiedEpoch() uint64 {
+	if m != nil {
+		return m.PreviousJustifiedEpoch
+	}
+	return 0
 }
 
-func (m *Peers) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_Peers.Unmarshal(m, b)
-}
-func (m *Peers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_Peers.Marshal(b, m, deterministic)
-}
-func (m *Peers) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_Peers.Merge(m, src)
-}
-func (m *Peers) XXX_Size() int {
-	return xxx_messageInfo_Peers.Size(m)
-}
-func (m *Peers) XXX_DiscardUnknown() {
-	xxx_messageInfo_Peers.DiscardUnknown(m)
+func (m *NodeInfo) GetPreviousJustifiedSlot() uint64 {
+	if m != nil {
+		return m.PreviousJustifiedSlot
+	}
+	return 0
 }
 
-var xxx_messageInfo_Peers proto.InternalMessageInfo
-
-func (m *Peers) GetPeers() []*Peer {
+func (m *NodeInfo) GetPreviousJustifiedBlockRoot() uint64 {
 	if m != nil {
-		return m.Peers
+		return m.PreviousJustifiedBlockRoot
 	}
-	return nil
+	return 0
 }
 
 type Peer struct {
-	Address              string        `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
-	Direction            PeerDirection `protobuf:"varint,2,opt,name=direction,proto3,enum=ethereum.eth.v1alpha1.PeerDirection" json:"direction,omitempty"`
+	Enr                  string        `protobuf:"bytes,1,opt,name=enr,proto3" json:"enr,omitempty"`
+	Address              string        `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
+	Direction            PeerDirection `protobuf:"varint,3,opt,name=direction,proto3,enum=ethereum.eth.v1alpha1.PeerDirection" json:"direction,omitempty"`
 	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
 	XXX_unrecognized     []byte        `json:"-"`
 	XXX_sizecache        int32         `json:"-"`
@@ -276,7 +263,7 @@ func (m *Peer) Reset()         { *m = Peer{} }
 func (m *Peer) String() string { return proto.CompactTextString(m) }
 func (*Peer) ProtoMessage()    {}
 func (*Peer) Descriptor() ([]byte, []int) {
-	return fileDescriptor_4d5c81e0a630f5ab, []int{5}
+	return fileDescriptor_4d5c81e0a630f5ab, []int{1}
 }
 
 func (m *Peer) XXX_Unmarshal(b []byte) error {
@@ -297,6 +284,13 @@ func (m *Peer) XXX_DiscardUnknown() {
 
 var xxx_messageInfo_Peer proto.InternalMessageInfo
 
+func (m *Peer) GetEnr() string {
+	if m != nil {
+		return m.Enr
+	}
+	return ""
+}
+
 func (m *Peer) GetAddress() string {
 	if m != nil {
 		return m.Address
@@ -311,58 +305,106 @@ func (m *Peer) GetDirection() PeerDirection {
 	return PeerDirection_UNKNOWN
 }
 
+type ImplementedServices struct {
+	Services             []string `protobuf:"bytes,1,rep,name=services,proto3" json:"services,omitempty"`
+	XXX_NoUnkeyedLiteral struct{} `json:"-"`
+	XXX_unrecognized     []byte   `json:"-"`
+	XXX_sizecache        int32    `json:"-"`
+}
+
+func (m *ImplementedServices) Reset()         { *m = ImplementedServices{} }
+func (m *ImplementedServices) String() string { return proto.CompactTextString(m) }
+func (*ImplementedServices) ProtoMessage()    {}
+func (*ImplementedServices) Descriptor() ([]byte, []int) {
+	return fileDescriptor_4d5c81e0a630f5ab, []int{2}
+}
+
+func (m *ImplementedServices) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_ImplementedServices.Unmarshal(m, b)
+}
+func (m *ImplementedServices) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_ImplementedServices.Marshal(b, m, deterministic)
+}
+func (m *ImplementedServices) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_ImplementedServices.Merge(m, src)
+}
+func (m *ImplementedServices) XXX_Size() int {
+	return xxx_messageInfo_ImplementedServices.Size(m)
+}
+func (m *ImplementedServices) XXX_DiscardUnknown() {
+	xxx_messageInfo_ImplementedServices.DiscardUnknown(m)
+}
+
+var xxx_messageInfo_ImplementedServices proto.InternalMessageInfo
+
+func (m *ImplementedServices) GetServices() []string {
+	if m != nil {
+		return m.Services
+	}
+	return nil
+}
+
 func init() {
+	proto.RegisterEnum("ethereum.eth.v1alpha1.SyncState", SyncState_name, SyncState_value)
 	proto.RegisterEnum("ethereum.eth.v1alpha1.PeerDirection", PeerDirection_name, PeerDirection_value)
-	proto.RegisterType((*SyncStatus)(nil), "ethereum.eth.v1alpha1.SyncStatus")
-	proto.RegisterType((*Genesis)(nil), "ethereum.eth.v1alpha1.Genesis")
-	proto.RegisterType((*Version)(nil), "ethereum.eth.v1alpha1.Version")
-	proto.RegisterType((*ImplementedServices)(nil), "ethereum.eth.v1alpha1.ImplementedServices")
-	proto.RegisterType((*Peers)(nil), "ethereum.eth.v1alpha1.Peers")
+	proto.RegisterType((*NodeInfo)(nil), "ethereum.eth.v1alpha1.NodeInfo")
 	proto.RegisterType((*Peer)(nil), "ethereum.eth.v1alpha1.Peer")
+	proto.RegisterType((*ImplementedServices)(nil), "ethereum.eth.v1alpha1.ImplementedServices")
 }
 
 func init() { proto.RegisterFile("eth/v1alpha1/node.proto", fileDescriptor_4d5c81e0a630f5ab) }
 
 var fileDescriptor_4d5c81e0a630f5ab = []byte{
-	// 606 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xd1, 0x6a, 0x13, 0x41,
-	0x14, 0x86, 0xdd, 0xd8, 0x9a, 0x66, 0xd2, 0x4a, 0x19, 0x69, 0x1b, 0xb7, 0x55, 0xe3, 0x2a, 0x52,
-	0x7a, 0xb1, 0x4b, 0x22, 0xa8, 0x28, 0x22, 0xc6, 0x86, 0x52, 0x94, 0xb4, 0x6c, 0x5b, 0x05, 0x29,
-	0x94, 0xc9, 0xee, 0x31, 0x3b, 0x90, 0x9d, 0x59, 0x76, 0x4e, 0x0a, 0xb9, 0xed, 0x13, 0x08, 0xbe,
-	0x85, 0xd7, 0x3e, 0x85, 0xb7, 0xbe, 0x82, 0x0f, 0x22, 0xb3, 0x3b, 0x63, 0x5a, 0x9b, 0x04, 0xbc,
-	0x9b, 0x7f, 0xce, 0xf9, 0xcf, 0x77, 0x76, 0xe7, 0x27, 0x1b, 0x80, 0x49, 0x70, 0xde, 0x62, 0xc3,
-	0x2c, 0x61, 0xad, 0x40, 0xc8, 0x18, 0xfc, 0x2c, 0x97, 0x28, 0xe9, 0x1a, 0x60, 0x02, 0x39, 0x8c,
-	0x52, 0x1f, 0x30, 0xf1, 0x6d, 0x87, 0xbb, 0x35, 0x90, 0x72, 0x30, 0x84, 0x80, 0x65, 0x3c, 0x60,
-	0x42, 0x48, 0x64, 0xc8, 0xa5, 0x50, 0xa5, 0xc9, 0xdd, 0x34, 0xd5, 0x42, 0xf5, 0x47, 0x5f, 0x02,
-	0x48, 0x33, 0x1c, 0x9b, 0xe2, 0x83, 0x7f, 0x8b, 0xc8, 0x53, 0x50, 0xc8, 0xd2, 0xac, 0x6c, 0xf0,
-	0x9e, 0x10, 0x72, 0x34, 0x16, 0xd1, 0x11, 0x32, 0x1c, 0x29, 0xda, 0x20, 0x55, 0x35, 0x16, 0x11,
-	0x17, 0x83, 0x86, 0xd3, 0x74, 0xb6, 0x97, 0x42, 0x2b, 0xbd, 0x0b, 0x87, 0x54, 0xf7, 0x40, 0x80,
-	0xe2, 0x8a, 0xbe, 0x26, 0xcb, 0x83, 0xf2, 0x78, 0xa6, 0xc7, 0x15, 0xad, 0xf5, 0xb6, 0xeb, 0x97,
-	0x2c, 0xdf, 0xb2, 0xfc, 0x63, 0xcb, 0x0a, 0xeb, 0xa6, 0x5f, 0xdf, 0xd0, 0x17, 0xa4, 0x11, 0x43,
-	0x26, 0x15, 0xc7, 0xb3, 0x48, 0x0a, 0xcc, 0x59, 0x84, 0x67, 0x2c, 0x8e, 0x73, 0x50, 0xaa, 0x51,
-	0x69, 0x3a, 0xdb, 0xcb, 0xe1, 0xba, 0xa9, 0xbf, 0x33, 0xe5, 0xb7, 0x65, 0xd5, 0x7b, 0x43, 0xaa,
-	0x1f, 0x21, 0x57, 0x5c, 0x0a, 0xbd, 0xe9, 0x79, 0x79, 0x2c, 0xf0, 0xb5, 0xd0, 0x4a, 0xea, 0x92,
-	0xa5, 0x14, 0x90, 0xc5, 0x0c, 0x59, 0x31, 0xae, 0x16, 0xfe, 0xd5, 0x5e, 0x8b, 0xdc, 0xd9, 0x4f,
-	0xb3, 0x21, 0xa4, 0x20, 0x10, 0xe2, 0x23, 0xc8, 0xcf, 0x79, 0x04, 0x4a, 0x5b, 0x94, 0x39, 0x37,
-	0x9c, 0xe6, 0x4d, 0x6d, 0xb1, 0xda, 0x7b, 0x49, 0x16, 0x0f, 0x01, 0x72, 0x45, 0x5b, 0x64, 0x31,
-	0xd3, 0x87, 0xa2, 0xa3, 0xde, 0xde, 0xf4, 0xa7, 0x3e, 0x96, 0xaf, 0x9b, 0xc3, 0xb2, 0xd3, 0x8b,
-	0xc9, 0x82, 0x96, 0x7a, 0x59, 0xfb, 0x81, 0x66, 0x59, 0x23, 0x69, 0x87, 0xd4, 0x62, 0x9e, 0x43,
-	0xa4, 0x1f, 0xb4, 0xd8, 0xf6, 0x76, 0xfb, 0xf1, 0x9c, 0xc1, 0xbb, 0xb6, 0x37, 0x9c, 0xd8, 0x76,
-	0x9e, 0x93, 0x95, 0x2b, 0x35, 0x5a, 0x27, 0xd5, 0x93, 0xde, 0xfb, 0xde, 0xc1, 0xa7, 0xde, 0xea,
-	0x0d, 0x2d, 0xf6, 0x7b, 0x9d, 0x83, 0x93, 0xde, 0xee, 0xaa, 0x43, 0x97, 0xc9, 0xd2, 0xc1, 0xc9,
-	0x71, 0xa9, 0x2a, 0xed, 0x1f, 0x0b, 0x64, 0xa1, 0x27, 0x63, 0xa0, 0x82, 0xac, 0xec, 0x01, 0x5e,
-	0xca, 0xc1, 0xfa, 0xb5, 0xb7, 0xec, 0xea, 0x50, 0xb9, 0x0f, 0x67, 0xec, 0x36, 0xb1, 0x7a, 0xde,
-	0xc5, 0xaf, 0xdf, 0xdf, 0x2a, 0x5b, 0xd4, 0x0d, 0xae, 0xa5, 0x3c, 0x30, 0x61, 0xa2, 0x09, 0x21,
-	0x7b, 0x80, 0x36, 0x4e, 0xb3, 0x60, 0xf7, 0x67, 0xc0, 0x8c, 0x6f, 0x2e, 0xc9, 0xe4, 0xcd, 0x90,
-	0x6c, 0x68, 0xfe, 0x97, 0x64, 0x7c, 0x73, 0x49, 0x36, 0x76, 0x17, 0x0e, 0xd9, 0xf8, 0xc0, 0x15,
-	0x4e, 0xcb, 0xd7, 0x2c, 0xee, 0xce, 0x0c, 0xee, 0x94, 0x19, 0xde, 0xa3, 0x62, 0x87, 0x7b, 0x74,
-	0x73, 0xda, 0x7f, 0xb5, 0xa0, 0x88, 0xd4, 0xf4, 0x0e, 0x65, 0x60, 0x67, 0x51, 0xb7, 0xe6, 0x04,
-	0x4c, 0x79, 0xcd, 0x82, 0xe3, 0xd2, 0xc6, 0x14, 0x4e, 0x91, 0xea, 0xce, 0x57, 0x87, 0xdc, 0x95,
-	0xf9, 0x60, 0xfa, 0x94, 0x4e, 0x4d, 0x27, 0xea, 0x50, 0x13, 0x0f, 0x9d, 0xcf, 0xcf, 0x06, 0x1c,
-	0x93, 0x51, 0xdf, 0x8f, 0x64, 0x1a, 0x64, 0xf9, 0x58, 0xa5, 0x0c, 0x79, 0x34, 0x64, 0x7d, 0x15,
-	0x58, 0x33, 0xcb, 0xb8, 0xba, 0x42, 0x7a, 0x05, 0x98, 0x7c, 0xaf, 0xac, 0x75, 0xed, 0xf0, 0xee,
-	0xa5, 0xe1, 0x3f, 0x27, 0xf7, 0xa7, 0x5d, 0x4c, 0x4e, 0xed, 0x7d, 0xff, 0x56, 0xf1, 0x89, 0x4f,
-	0xff, 0x04, 0x00, 0x00, 0xff, 0xff, 0xc2, 0xc4, 0xf7, 0x46, 0x5a, 0x05, 0x00, 0x00,
+	// 781 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x54, 0xcd, 0x8e, 0xe3, 0x44,
+	0x10, 0xc6, 0xc9, 0x30, 0x19, 0x57, 0x26, 0xbb, 0xa6, 0x61, 0x36, 0x9e, 0x0c, 0xa3, 0x8d, 0xc2,
+	0x0a, 0x45, 0x23, 0x61, 0x2b, 0x41, 0x62, 0x85, 0xb8, 0xb0, 0xc9, 0x06, 0x08, 0x8c, 0x3c, 0x21,
+	0x99, 0x80, 0x40, 0x2b, 0x45, 0x8e, 0xdd, 0x89, 0x1b, 0x1c, 0xb7, 0xe5, 0xee, 0x44, 0x0a, 0xc7,
+	0x7d, 0x01, 0x90, 0x78, 0x0b, 0xde, 0x80, 0xff, 0xff, 0x0b, 0x37, 0xe0, 0x15, 0xb8, 0xc0, 0x99,
+	0x07, 0x40, 0xed, 0xf6, 0x4f, 0xc2, 0x24, 0x7b, 0xeb, 0xfa, 0xea, 0xfb, 0xaa, 0xbe, 0xb6, 0xab,
+	0x0b, 0xaa, 0x98, 0x7b, 0xe6, 0xaa, 0x65, 0xfb, 0xa1, 0x67, 0xb7, 0xcc, 0x80, 0xba, 0xd8, 0x08,
+	0x23, 0xca, 0x29, 0x3a, 0xc1, 0xdc, 0xc3, 0x11, 0x5e, 0x2e, 0x0c, 0xcc, 0x3d, 0x23, 0x65, 0xd4,
+	0x9e, 0x9f, 0x53, 0x3a, 0xf7, 0xb1, 0x69, 0x87, 0xc4, 0xb4, 0x83, 0x80, 0x72, 0x9b, 0x13, 0x1a,
+	0x30, 0x29, 0xaa, 0x9d, 0x25, 0xd9, 0x38, 0x9a, 0x2e, 0x67, 0x26, 0x5e, 0x84, 0x7c, 0x2d, 0x93,
+	0x8d, 0x4f, 0x0f, 0xe1, 0xc8, 0xa2, 0x2e, 0xee, 0x07, 0x33, 0x8a, 0x74, 0x28, 0x89, 0x66, 0x13,
+	0xe2, 0xea, 0x7f, 0x97, 0xea, 0x4a, 0x53, 0x1d, 0x1e, 0x8a, 0xb8, 0xef, 0xa2, 0x53, 0x28, 0xad,
+	0x70, 0xc4, 0x08, 0x0d, 0xf4, 0x7f, 0x64, 0x26, 0x8d, 0xd1, 0x39, 0xa8, 0xb6, 0xeb, 0x46, 0x98,
+	0x31, 0xcc, 0xf4, 0xdf, 0x6f, 0xd7, 0x8b, 0x4d, 0x75, 0x98, 0x23, 0xa8, 0x0d, 0x4f, 0x87, 0x18,
+	0x47, 0x4c, 0xff, 0x43, 0xa4, 0xca, 0xed, 0x33, 0x63, 0xe7, 0x1d, 0x8c, 0x01, 0xc6, 0xd1, 0x50,
+	0x52, 0xd1, 0xeb, 0x00, 0x6c, 0x1d, 0x38, 0x13, 0xc6, 0x6d, 0x8e, 0xf5, 0x2f, 0xab, 0x75, 0xa5,
+	0x79, 0xab, 0x5d, 0xdf, 0x23, 0x1c, 0xad, 0x03, 0x67, 0x24, 0x88, 0x43, 0x95, 0xa5, 0x47, 0x74,
+	0x0f, 0x2a, 0xce, 0x32, 0x8a, 0x70, 0xc0, 0x27, 0x38, 0xa4, 0x8e, 0xa7, 0x7f, 0x25, 0x8a, 0x1c,
+	0x0c, 0x8f, 0x13, 0xb4, 0x27, 0x40, 0xd4, 0x80, 0x34, 0x9e, 0x30, 0x9f, 0x72, 0xfd, 0x6b, 0x49,
+	0x2a, 0x27, 0xe0, 0xc8, 0xa7, 0x1c, 0xbd, 0x04, 0x28, 0xe5, 0x4c, 0x7d, 0xea, 0x7c, 0x3c, 0x89,
+	0x28, 0xe5, 0xfa, 0x37, 0x92, 0xa9, 0x25, 0xa9, 0x8e, 0xc8, 0x0c, 0x29, 0xe5, 0xa8, 0x09, 0xb7,
+	0x67, 0x24, 0xb0, 0x7d, 0xf2, 0x09, 0x76, 0x93, 0xd6, 0xdf, 0x4a, 0xee, 0xad, 0x0c, 0x97, 0xcd,
+	0x5f, 0x84, 0x1c, 0x91, 0xed, 0xbf, 0x93, 0xc4, 0x4a, 0x06, 0xc7, 0x06, 0x5a, 0xf0, 0x5c, 0xce,
+	0xdb, 0xb0, 0xf0, 0xbd, 0x64, 0xa3, 0x2c, 0xb9, 0x65, 0xe2, 0xa3, 0x25, 0xe3, 0x64, 0x46, 0x32,
+	0x13, 0x3f, 0x24, 0x26, 0x32, 0x3c, 0x33, 0x91, 0x33, 0x63, 0x13, 0x3f, 0x26, 0x26, 0x32, 0x38,
+	0x35, 0x91, 0xf3, 0x36, 0x4c, 0xfc, 0x94, 0x98, 0xc8, 0x92, 0xb9, 0x89, 0x57, 0x41, 0x0f, 0x23,
+	0xbc, 0x22, 0x74, 0xc9, 0x26, 0xff, 0x77, 0xf3, 0xb3, 0x94, 0xdd, 0x49, 0x09, 0x6f, 0x6f, 0xbb,
+	0xba, 0x0f, 0xd5, 0x1d, 0xd2, 0xd8, 0xde, 0x2f, 0x52, 0x79, 0x72, 0x43, 0x19, 0xdb, 0xec, 0xc0,
+	0xf9, 0x0e, 0xe1, 0x86, 0xdf, 0x5f, 0xa5, 0xbc, 0x76, 0x43, 0x9e, 0xf9, 0x6e, 0xac, 0xe0, 0x40,
+	0xcc, 0x22, 0xd2, 0xa0, 0x88, 0x83, 0x48, 0x57, 0xe2, 0x69, 0x17, 0x47, 0xf1, 0x3c, 0x92, 0xb9,
+	0xd6, 0x0b, 0xf2, 0x0d, 0x24, 0x21, 0xea, 0x80, 0xea, 0x92, 0x08, 0x3b, 0xe2, 0xd9, 0xe9, 0xc5,
+	0x78, 0x5c, 0xef, 0x3d, 0x61, 0xce, 0x1f, 0xa6, 0xdc, 0x61, 0x2e, 0x6b, 0xb4, 0xe0, 0xd9, 0xfe,
+	0x22, 0xf4, 0xf1, 0x02, 0x07, 0x1c, 0xbb, 0x23, 0x1c, 0xad, 0x88, 0x83, 0x19, 0xaa, 0xc1, 0x11,
+	0x4b, 0xce, 0xba, 0x12, 0x3f, 0xae, 0x2c, 0xbe, 0x78, 0x17, 0xd4, 0x6c, 0xfa, 0x91, 0x06, 0xc7,
+	0xa3, 0x0f, 0xac, 0xee, 0x64, 0x6c, 0xbd, 0x63, 0x5d, 0xbd, 0x6f, 0x69, 0x4f, 0xa1, 0x67, 0xa0,
+	0x12, 0x23, 0x7d, 0xeb, 0x41, 0xf7, 0xba, 0xff, 0x5e, 0x4f, 0x53, 0x32, 0x52, 0xf7, 0xc1, 0x75,
+	0xf7, 0xad, 0xf1, 0x40, 0x2b, 0xa0, 0x0a, 0xa8, 0x31, 0xf2, 0xc6, 0xf8, 0xf2, 0x52, 0x2b, 0x5e,
+	0xdc, 0x87, 0xca, 0x96, 0x43, 0x54, 0x86, 0x52, 0x5e, 0xb1, 0x0c, 0xa5, 0xbe, 0xd5, 0xb9, 0x1a,
+	0x5b, 0x0f, 0x35, 0x05, 0x1d, 0xc3, 0xd1, 0xd5, 0xf8, 0x5a, 0x46, 0x85, 0xf6, 0xbf, 0x0a, 0x1c,
+	0x88, 0x45, 0x82, 0xe6, 0x50, 0x7e, 0x13, 0xf3, 0x6c, 0xa7, 0xdc, 0x31, 0xe4, 0xfa, 0x31, 0xd2,
+	0xf5, 0x63, 0xf4, 0xc4, 0xfa, 0xa9, 0xdd, 0xdd, 0xf3, 0x7d, 0x52, 0x61, 0xe3, 0xee, 0xe3, 0x3f,
+	0xff, 0xfa, 0xbc, 0x70, 0x8a, 0xaa, 0xe6, 0x8d, 0x6d, 0x68, 0x12, 0x51, 0xf9, 0xb1, 0x02, 0xd5,
+	0x4b, 0xc2, 0xf8, 0xae, 0xaf, 0xb6, 0xaf, 0xeb, 0xc5, 0x9e, 0xae, 0x3b, 0x6a, 0x34, 0x5e, 0x88,
+	0x0d, 0x9c, 0xa3, 0xb3, 0x1d, 0x06, 0xd2, 0x5f, 0xd0, 0xf9, 0x4c, 0x81, 0x53, 0x1a, 0xcd, 0x77,
+	0x97, 0xed, 0xa8, 0xe2, 0x36, 0x03, 0x61, 0x61, 0xa0, 0x7c, 0xf8, 0xca, 0x9c, 0x70, 0x6f, 0x39,
+	0x35, 0x1c, 0xba, 0x30, 0xc3, 0x68, 0xcd, 0x16, 0x36, 0x27, 0x8e, 0x6f, 0x4f, 0x99, 0x99, 0x8a,
+	0xed, 0x90, 0xb0, 0xad, 0x66, 0xaf, 0x61, 0xee, 0x7d, 0x51, 0x38, 0xe9, 0xa5, 0xc5, 0x7b, 0x1b,
+	0xc5, 0x7f, 0xcb, 0xf1, 0x47, 0x3d, 0xee, 0x3d, 0x4a, 0xf1, 0xe9, 0x61, 0x7c, 0xe7, 0x97, 0xff,
+	0x0b, 0x00, 0x00, 0xff, 0xff, 0x80, 0x7c, 0xd3, 0x5a, 0x46, 0x06, 0x00, 0x00,
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -377,11 +419,8 @@ const _ = grpc.SupportPackageIsVersion4
 //
 // For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
 type NodeClient interface {
-	GetSyncStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SyncStatus, error)
-	GetGenesis(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Genesis, error)
-	GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error)
+	GetNodeInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeInfo, error)
 	ListImplementedServices(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*ImplementedServices, error)
-	ListPeers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Peers, error)
 }
 
 type nodeClient struct {
@@ -392,27 +431,9 @@ func NewNodeClient(cc *grpc.ClientConn) NodeClient {
 	return &nodeClient{cc}
 }
 
-func (c *nodeClient) GetSyncStatus(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*SyncStatus, error) {
-	out := new(SyncStatus)
-	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.Node/GetSyncStatus", in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-func (c *nodeClient) GetGenesis(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Genesis, error) {
-	out := new(Genesis)
-	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.Node/GetGenesis", in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
-func (c *nodeClient) GetVersion(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Version, error) {
-	out := new(Version)
-	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.Node/GetVersion", in, out, opts...)
+func (c *nodeClient) GetNodeInfo(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*NodeInfo, error) {
+	out := new(NodeInfo)
+	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.Node/GetNodeInfo", in, out, opts...)
 	if err != nil {
 		return nil, err
 	}
@@ -428,78 +449,30 @@ func (c *nodeClient) ListImplementedServices(ctx context.Context, in *empty.Empt
 	return out, nil
 }
 
-func (c *nodeClient) ListPeers(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*Peers, error) {
-	out := new(Peers)
-	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.Node/ListPeers", in, out, opts...)
-	if err != nil {
-		return nil, err
-	}
-	return out, nil
-}
-
 // NodeServer is the server API for Node service.
 type NodeServer interface {
-	GetSyncStatus(context.Context, *empty.Empty) (*SyncStatus, error)
-	GetGenesis(context.Context, *empty.Empty) (*Genesis, error)
-	GetVersion(context.Context, *empty.Empty) (*Version, error)
+	GetNodeInfo(context.Context, *empty.Empty) (*NodeInfo, error)
 	ListImplementedServices(context.Context, *empty.Empty) (*ImplementedServices, error)
-	ListPeers(context.Context, *empty.Empty) (*Peers, error)
 }
 
 func RegisterNodeServer(s *grpc.Server, srv NodeServer) {
 	s.RegisterService(&_Node_serviceDesc, srv)
 }
 
-func _Node_GetSyncStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(empty.Empty)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(NodeServer).GetSyncStatus(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: "/ethereum.eth.v1alpha1.Node/GetSyncStatus",
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(NodeServer).GetSyncStatus(ctx, req.(*empty.Empty))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-func _Node_GetGenesis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(empty.Empty)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(NodeServer).GetGenesis(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: "/ethereum.eth.v1alpha1.Node/GetGenesis",
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(NodeServer).GetGenesis(ctx, req.(*empty.Empty))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
-func _Node_GetVersion_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+func _Node_GetNodeInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
 	in := new(empty.Empty)
 	if err := dec(in); err != nil {
 		return nil, err
 	}
 	if interceptor == nil {
-		return srv.(NodeServer).GetVersion(ctx, in)
+		return srv.(NodeServer).GetNodeInfo(ctx, in)
 	}
 	info := &grpc.UnaryServerInfo{
 		Server:     srv,
-		FullMethod: "/ethereum.eth.v1alpha1.Node/GetVersion",
+		FullMethod: "/ethereum.eth.v1alpha1.Node/GetNodeInfo",
 	}
 	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(NodeServer).GetVersion(ctx, req.(*empty.Empty))
+		return srv.(NodeServer).GetNodeInfo(ctx, req.(*empty.Empty))
 	}
 	return interceptor(ctx, in, info, handler)
 }
@@ -522,48 +495,18 @@ func _Node_ListImplementedServices_Handler(srv interface{}, ctx context.Context,
 	return interceptor(ctx, in, info, handler)
 }
 
-func _Node_ListPeers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(empty.Empty)
-	if err := dec(in); err != nil {
-		return nil, err
-	}
-	if interceptor == nil {
-		return srv.(NodeServer).ListPeers(ctx, in)
-	}
-	info := &grpc.UnaryServerInfo{
-		Server:     srv,
-		FullMethod: "/ethereum.eth.v1alpha1.Node/ListPeers",
-	}
-	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(NodeServer).ListPeers(ctx, req.(*empty.Empty))
-	}
-	return interceptor(ctx, in, info, handler)
-}
-
 var _Node_serviceDesc = grpc.ServiceDesc{
 	ServiceName: "ethereum.eth.v1alpha1.Node",
 	HandlerType: (*NodeServer)(nil),
 	Methods: []grpc.MethodDesc{
 		{
-			MethodName: "GetSyncStatus",
-			Handler:    _Node_GetSyncStatus_Handler,
-		},
-		{
-			MethodName: "GetGenesis",
-			Handler:    _Node_GetGenesis_Handler,
-		},
-		{
-			MethodName: "GetVersion",
-			Handler:    _Node_GetVersion_Handler,
+			MethodName: "GetNodeInfo",
+			Handler:    _Node_GetNodeInfo_Handler,
 		},
 		{
 			MethodName: "ListImplementedServices",
 			Handler:    _Node_ListImplementedServices_Handler,
 		},
-		{
-			MethodName: "ListPeers",
-			Handler:    _Node_ListPeers_Handler,
-		},
 	},
 	Streams:  []grpc.StreamDesc{},
 	Metadata: "eth/v1alpha1/node.proto",
diff --git a/eth/v1alpha1/node.proto b/eth/v1alpha1/node.proto
index 6deb8de..710ac78 100644
--- a/eth/v1alpha1/node.proto
+++ b/eth/v1alpha1/node.proto
@@ -17,7 +17,6 @@ package ethereum.eth.v1alpha1;
 
 import "google/api/annotations.proto";
 import "google/protobuf/empty.proto";
-import "google/protobuf/timestamp.proto";
 
 option csharp_namespace = "Ethereum.Eth.v1alpha1";
 option go_package = "github.com/prysmaticlabs/ethereumapis/eth/v1alpha1;eth";
@@ -31,24 +30,10 @@ option php_namespace = "Ethereum\\Eth\\v1alpha1";
 // Node service provides general information about the node itself, the services
 // it supports, chain information and node version.
 service Node {
-    // Retrieve the current network sync status of the node.
-	rpc GetSyncStatus(google.protobuf.Empty) returns (SyncStatus) {
+    // Retrieve information about the node.
+	rpc GetNodeInfo(google.protobuf.Empty) returns (NodeInfo) {
         option (google.api.http) = {
-            get: "/eth/v1alpha1/node/syncing"
-        };
-    }
-
-    // Retrieve information about the genesis of Ethereum 2.0.
-    rpc GetGenesis(google.protobuf.Empty) returns (Genesis) {
-        option (google.api.http) = {
-            get: "/eth/v1alpha1/node/genesis"
-        };
-    }
-
-    // Retrieve information about the running Ethereum 2.0 node.
-    rpc GetVersion(google.protobuf.Empty) returns (Version) {
-        option (google.api.http) = {
-            get: "/eth/v1alpha1/node/version"
+            get: "/eth/v1alpha1/node/info"
         };
     }
 
@@ -62,56 +47,70 @@ service Node {
             get: "/eth/v1alpha1/node/services"
         };
     }
-
-    // Retrieve the list of peers currently connected to this node.
-    rpc ListPeers(google.protobuf.Empty) returns (Peers) {
-        option (google.api.http) = {
-            get: "/eth/v1alpha1/node/peers"
-        };
-    }
-}
-
-// Information about the current network sync status of the node.
-message SyncStatus {
-    // Whether or not the node is currently syncing.
-    bool syncing = 1;
 }
 
-// Information about the genesis of Ethereum 2.0.
-message Genesis {
-    // UTC time specified in the chain start event in the deposit contract.
-    google.protobuf.Timestamp genesis_time = 1;
-
-    // Address of the deposit contract in the Ethereum 1 chain.
-    bytes deposit_contract_address = 2;
+message NodeInfo {
+    // Node identification [1001-2000]
+    // A unique identifier for the node, derived from the node's network key.
+    string node_id = 1001;
+    // The version of the currently-running node software.
+    string version = 1002;
+
+    // Network [2001-3000]
+    // The address(es) where the node is listening for incoming libp2p connections.
+    repeated string addresses = 2001;
+    // Information about nodes to which this peer is connected.
+    repeated Peer peers = 2002;
+
+    // Node state [3001-4000]
+    // State of the node's interaction with its peers.
+    SyncState sync_state = 3001;
+    // The current epoch as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 current_epoch = 3002;
+    // The current slot as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 current_slot = 3003;
+    // The current block root as far as the node is concerned; this is dependent on its current view of the chain.
+    bytes current_block_root = 3004;
+    // The finalized epoch as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 finalized_epoch = 3005;
+    // The finalized slot as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 finalized_slot = 3006;
+    // The finalized block root as far as the node is concerned; this is dependent on its current view of the chain.
+    bytes finalized_block_root = 3007;
+    // The justified epoch as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 justified_epoch = 3008;
+    // The justified slot as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 justified_slot = 3009;
+    // The justified block root as far as the node is concerned; this is dependent on its current view of the chain.
+    bytes justified_block_root = 3010;
+    // The previous justified epoch as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 previous_justified_epoch = 3011;
+    // The previous justified slot as far as the node is concerned; this is dependent on its current view of the chain.
+    uint64 previous_justified_slot = 3012;
+    // The previous justified block root as far as the node is concerned; this is dependent on its current view of the chain.
+    bytes previous_justified_block_root = 3013;
 }
 
-// Information about the node version.
-message Version {
-    // A string that uniquely identifies the node and its version.
-    string version = 1;
-
-    // Additional metadata that the node would like to provide. This field may
-    // be used to list any meaningful data to the client.
-    string metadata = 2;
-}
-
-message ImplementedServices {
-    repeated string services = 1;
-}
-
-// Peers is a list of peer messages.
-message Peers {
-    repeated Peer peers = 1;
+enum SyncState {
+  // UNDEFINED means no status is available.
+  SYNC_UNKNOWN = 0;
+  // INACTIVE means the node is not currently syncing with its peers.
+  SYNC_INACTIVE = 1;
+  // CATCHUP means the node is in catchup mode; skipping full verification of information from peers in return for processing speed.
+  SYNC_CATCHUP = 2;
+  // FULL means the node is actively syncing with its peers, carrying out full verification of information received.
+  SYNC_FULL = 3;
 }
 
 // Peer provides details of a peer on the network.
 message Peer {
-    // The address of the peer, as a full multiaddr, for example:
+    // The Ethereum Name Record (ENR) of the peer.
+    string enr = 1;
+    // The libp2p listen address of the peer, as a full multiaddr, for example:
     // /ip4/37.221.192.134/tcp/13000/p2p/16Uiu2HAm8maLMjag1TAUM52zPfmLbVMGFdwUAWgoHu1HDQLR6e17
-    string address = 1;
+    string address = 2;
     // The direction of the connection (inbound/outbound).
-    PeerDirection direction = 2;
+    PeerDirection direction = 3;
 }
 
 // PeerDirection states the direction of the connection to a peer.
@@ -120,3 +119,7 @@ enum PeerDirection {
   INBOUND = 1;
   OUTBOUND = 2;
 }
+
+message ImplementedServices {
+    repeated string services = 1;
+}
diff --git a/eth/v1alpha1/validator.pb.go b/eth/v1alpha1/validator.pb.go
index e9043b6..955db49 100755
--- a/eth/v1alpha1/validator.pb.go
+++ b/eth/v1alpha1/validator.pb.go
@@ -1043,59 +1043,59 @@ func (m *SignedAggregateSubmitResponse) GetAttestationDataRoot() []byte {
 	return nil
 }
 
-type CommitteeSubnetsSubscribeRequest struct {
-	Slots                []uint64 `protobuf:"varint,1,rep,packed,name=slots,proto3" json:"slots,omitempty"`
-	CommitteeIds         []uint64 `protobuf:"varint,2,rep,packed,name=committee_ids,json=committeeIds,proto3" json:"committee_ids,omitempty"`
-	IsAggregator         []bool   `protobuf:"varint,3,rep,packed,name=is_aggregator,json=isAggregator,proto3" json:"is_aggregator,omitempty"`
+type CommitteeSubnetSubscribeRequest struct {
+	Slot                 uint64   `protobuf:"varint,1,opt,name=slot,proto3" json:"slot,omitempty"`
+	CommitteeId          uint64   `protobuf:"varint,2,opt,name=committee_id,json=committeeId,proto3" json:"committee_id,omitempty"`
+	IsAggregator         bool     `protobuf:"varint,3,opt,name=is_aggregator,json=isAggregator,proto3" json:"is_aggregator,omitempty"`
 	XXX_NoUnkeyedLiteral struct{} `json:"-"`
 	XXX_unrecognized     []byte   `json:"-"`
 	XXX_sizecache        int32    `json:"-"`
 }
 
-func (m *CommitteeSubnetsSubscribeRequest) Reset()         { *m = CommitteeSubnetsSubscribeRequest{} }
-func (m *CommitteeSubnetsSubscribeRequest) String() string { return proto.CompactTextString(m) }
-func (*CommitteeSubnetsSubscribeRequest) ProtoMessage()    {}
-func (*CommitteeSubnetsSubscribeRequest) Descriptor() ([]byte, []int) {
+func (m *CommitteeSubnetSubscribeRequest) Reset()         { *m = CommitteeSubnetSubscribeRequest{} }
+func (m *CommitteeSubnetSubscribeRequest) String() string { return proto.CompactTextString(m) }
+func (*CommitteeSubnetSubscribeRequest) ProtoMessage()    {}
+func (*CommitteeSubnetSubscribeRequest) Descriptor() ([]byte, []int) {
 	return fileDescriptor_f8ef4b6a7db76675, []int{19}
 }
 
-func (m *CommitteeSubnetsSubscribeRequest) XXX_Unmarshal(b []byte) error {
-	return xxx_messageInfo_CommitteeSubnetsSubscribeRequest.Unmarshal(m, b)
+func (m *CommitteeSubnetSubscribeRequest) XXX_Unmarshal(b []byte) error {
+	return xxx_messageInfo_CommitteeSubnetSubscribeRequest.Unmarshal(m, b)
 }
-func (m *CommitteeSubnetsSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
-	return xxx_messageInfo_CommitteeSubnetsSubscribeRequest.Marshal(b, m, deterministic)
+func (m *CommitteeSubnetSubscribeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
+	return xxx_messageInfo_CommitteeSubnetSubscribeRequest.Marshal(b, m, deterministic)
 }
-func (m *CommitteeSubnetsSubscribeRequest) XXX_Merge(src proto.Message) {
-	xxx_messageInfo_CommitteeSubnetsSubscribeRequest.Merge(m, src)
+func (m *CommitteeSubnetSubscribeRequest) XXX_Merge(src proto.Message) {
+	xxx_messageInfo_CommitteeSubnetSubscribeRequest.Merge(m, src)
 }
-func (m *CommitteeSubnetsSubscribeRequest) XXX_Size() int {
-	return xxx_messageInfo_CommitteeSubnetsSubscribeRequest.Size(m)
+func (m *CommitteeSubnetSubscribeRequest) XXX_Size() int {
+	return xxx_messageInfo_CommitteeSubnetSubscribeRequest.Size(m)
 }
-func (m *CommitteeSubnetsSubscribeRequest) XXX_DiscardUnknown() {
-	xxx_messageInfo_CommitteeSubnetsSubscribeRequest.DiscardUnknown(m)
+func (m *CommitteeSubnetSubscribeRequest) XXX_DiscardUnknown() {
+	xxx_messageInfo_CommitteeSubnetSubscribeRequest.DiscardUnknown(m)
 }
 
-var xxx_messageInfo_CommitteeSubnetsSubscribeRequest proto.InternalMessageInfo
+var xxx_messageInfo_CommitteeSubnetSubscribeRequest proto.InternalMessageInfo
 
-func (m *CommitteeSubnetsSubscribeRequest) GetSlots() []uint64 {
+func (m *CommitteeSubnetSubscribeRequest) GetSlot() uint64 {
 	if m != nil {
-		return m.Slots
+		return m.Slot
 	}
-	return nil
+	return 0
 }
 
-func (m *CommitteeSubnetsSubscribeRequest) GetCommitteeIds() []uint64 {
+func (m *CommitteeSubnetSubscribeRequest) GetCommitteeId() uint64 {
 	if m != nil {
-		return m.CommitteeIds
+		return m.CommitteeId
 	}
-	return nil
+	return 0
 }
 
-func (m *CommitteeSubnetsSubscribeRequest) GetIsAggregator() []bool {
+func (m *CommitteeSubnetSubscribeRequest) GetIsAggregator() bool {
 	if m != nil {
 		return m.IsAggregator
 	}
-	return nil
+	return false
 }
 
 type Validator struct {
@@ -1358,7 +1358,7 @@ func init() {
 	proto.RegisterType((*AggregateSelectionResponse)(nil), "ethereum.eth.v1alpha1.AggregateSelectionResponse")
 	proto.RegisterType((*SignedAggregateSubmitRequest)(nil), "ethereum.eth.v1alpha1.SignedAggregateSubmitRequest")
 	proto.RegisterType((*SignedAggregateSubmitResponse)(nil), "ethereum.eth.v1alpha1.SignedAggregateSubmitResponse")
-	proto.RegisterType((*CommitteeSubnetsSubscribeRequest)(nil), "ethereum.eth.v1alpha1.CommitteeSubnetsSubscribeRequest")
+	proto.RegisterType((*CommitteeSubnetSubscribeRequest)(nil), "ethereum.eth.v1alpha1.CommitteeSubnetSubscribeRequest")
 	proto.RegisterType((*Validator)(nil), "ethereum.eth.v1alpha1.Validator")
 	proto.RegisterType((*ValidatorParticipation)(nil), "ethereum.eth.v1alpha1.ValidatorParticipation")
 	proto.RegisterType((*ValidatorInfo)(nil), "ethereum.eth.v1alpha1.ValidatorInfo")
@@ -1367,124 +1367,124 @@ func init() {
 func init() { proto.RegisterFile("eth/v1alpha1/validator.proto", fileDescriptor_f8ef4b6a7db76675) }
 
 var fileDescriptor_f8ef4b6a7db76675 = []byte{
-	// 1870 bytes of a gzipped FileDescriptorProto
-	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x73, 0xdb, 0xc6,
-	0x15, 0x2f, 0x28, 0x4a, 0x96, 0x9e, 0xa8, 0x0f, 0xaf, 0x2d, 0x59, 0x42, 0x24, 0x5b, 0x81, 0xe2,
-	0x44, 0xb6, 0x6b, 0xd2, 0x92, 0xd3, 0x64, 0xd2, 0x4c, 0xda, 0x4a, 0x26, 0xed, 0x6a, 0xd2, 0x51,
-	0x14, 0x50, 0x76, 0x3a, 0x9d, 0xcc, 0x60, 0x96, 0xc0, 0x8a, 0xdc, 0x09, 0x88, 0x65, 0x80, 0xa5,
-	0x6c, 0xf5, 0xd4, 0xe4, 0xd2, 0x43, 0x7b, 0x6b, 0xda, 0xc9, 0xa1, 0xd3, 0xde, 0x7b, 0xc9, 0xad,
-	0x97, 0xfe, 0x03, 0x9d, 0x5e, 0xfb, 0x27, 0xb4, 0xfd, 0x17, 0x7a, 0xce, 0xec, 0x17, 0x00, 0x52,
-	0x84, 0x48, 0x25, 0x27, 0x12, 0xef, 0x63, 0xdf, 0x6f, 0xdf, 0xbe, 0x4f, 0xd8, 0x20, 0xbc, 0x53,
-	0x3b, 0xdb, 0xc5, 0x61, 0xaf, 0x83, 0x77, 0x6b, 0x67, 0x38, 0xa4, 0x01, 0xe6, 0x2c, 0xae, 0xf6,
-	0x62, 0xc6, 0x19, 0x5a, 0x21, 0xbc, 0x43, 0x62, 0xd2, 0xef, 0x56, 0x09, 0xef, 0x54, 0x8d, 0x98,
-	0xbd, 0xd1, 0x66, 0xac, 0x1d, 0x92, 0x1a, 0xee, 0xd1, 0x1a, 0x8e, 0x22, 0xc6, 0x31, 0xa7, 0x2c,
-	0x4a, 0x94, 0x92, 0xfd, 0x9a, 0xe6, 0xca, 0xaf, 0x56, 0xff, 0xb4, 0x46, 0xba, 0x3d, 0x7e, 0xae,
-	0x99, 0x77, 0x06, 0xec, 0xb5, 0x08, 0xf6, 0x59, 0xe4, 0xb5, 0x42, 0xe6, 0x7f, 0xa6, 0x05, 0x6e,
-	0x0f, 0x08, 0x60, 0xce, 0x49, 0xa2, 0x8e, 0x57, 0x7c, 0xe7, 0x03, 0x58, 0xa8, 0xb3, 0x2e, 0xa6,
-	0x91, 0x4b, 0x3e, 0xef, 0x93, 0x84, 0xa3, 0x9b, 0x30, 0x4d, 0x7a, 0xcc, 0xef, 0xac, 0x59, 0x5b,
-	0xd6, 0x4e, 0xd9, 0x55, 0x1f, 0x68, 0x15, 0x66, 0x02, 0x29, 0xb6, 0x56, 0xda, 0xb2, 0x76, 0x2a,
-	0xae, 0xfe, 0x72, 0xde, 0x87, 0x45, 0xa3, 0x9e, 0xf4, 0x58, 0x94, 0x10, 0x74, 0x0f, 0x96, 0x13,
-	0xda, 0x8e, 0x30, 0xef, 0xc7, 0xc4, 0xd3, 0x3a, 0x96, 0xd4, 0x59, 0x4a, 0xe9, 0x4a, 0xc5, 0xf9,
-	0x00, 0xec, 0x17, 0xc6, 0x43, 0xfb, 0x3e, 0xa7, 0x67, 0x12, 0x98, 0x01, 0x72, 0x07, 0xe6, 0x7b,
-	0xfd, 0x56, 0x48, 0x7d, 0xef, 0x33, 0x72, 0x9e, 0xac, 0x59, 0x5b, 0x53, 0x3b, 0x15, 0x17, 0x14,
-	0xe9, 0x43, 0x72, 0x9e, 0x38, 0xff, 0xb3, 0xe0, 0xb5, 0x91, 0xfa, 0x1a, 0xc9, 0x73, 0x98, 0x15,
-	0x77, 0xed, 0x27, 0x44, 0x69, 0xcf, 0xef, 0xbd, 0x57, 0x1d, 0xf9, 0x00, 0xd5, 0x4b, 0x4e, 0xa9,
-	0x36, 0xe5, 0x11, 0x6e, 0x7a, 0x94, 0xcd, 0x60, 0x46, 0xd1, 0xd0, 0x26, 0x40, 0x86, 0x50, 0x5f,
-	0x72, 0x2e, 0x05, 0x88, 0x9e, 0xc2, 0x8c, 0x52, 0x92, 0x3e, 0x9b, 0xdf, 0xab, 0x8e, 0xb3, 0xae,
-	0x4d, 0x69, 0xcb, 0xae, 0xd6, 0x76, 0x3e, 0x06, 0xf4, 0xa4, 0x83, 0x69, 0xd4, 0xe4, 0x38, 0xe6,
-	0xe9, 0xed, 0xd6, 0xe0, 0x5a, 0x22, 0x08, 0x24, 0x90, 0x96, 0x67, 0x5d, 0xf3, 0x89, 0x5e, 0x87,
-	0x4a, 0x9b, 0x44, 0x24, 0xa1, 0x89, 0xc7, 0x69, 0x97, 0x48, 0xeb, 0x65, 0x77, 0x5e, 0xd3, 0x4e,
-	0x68, 0x97, 0x38, 0xef, 0xc0, 0x4a, 0x6a, 0xf5, 0x30, 0x0a, 0xc8, 0x2b, 0xe3, 0xf4, 0xcb, 0xaf,
-	0xe4, 0x54, 0x61, 0x75, 0x58, 0x4f, 0xc3, 0xb9, 0x09, 0xd3, 0x54, 0x10, 0x4c, 0xd8, 0xc8, 0x0f,
-	0xe7, 0xdd, 0x9c, 0xbc, 0xb9, 0xdd, 0x44, 0x86, 0xfe, 0x5e, 0x82, 0x5b, 0x05, 0x7e, 0x41, 0x3f,
-	0x49, 0xfd, 0x2a, 0xd4, 0x16, 0xf7, 0xde, 0x9c, 0xd0, 0xaf, 0x5a, 0x0b, 0xbd, 0x07, 0xeb, 0x84,
-	0x77, 0x76, 0xbd, 0x80, 0xf4, 0x58, 0x42, 0xb9, 0x4a, 0x17, 0x2f, 0xea, 0x77, 0x5b, 0x24, 0xd6,
-	0xce, 0x5a, 0x15, 0x02, 0x75, 0xc5, 0x3f, 0x10, 0xec, 0x23, 0xc9, 0x45, 0x6f, 0xc3, 0xaa, 0xd1,
-	0xa2, 0x91, 0x1f, 0xf6, 0x13, 0xca, 0x22, 0x2f, 0x09, 0x19, 0x5f, 0x9b, 0xda, 0xb2, 0x76, 0xa6,
-	0xdc, 0x9b, 0x9a, 0x7b, 0x68, 0x98, 0xcd, 0x90, 0x71, 0x91, 0x12, 0x38, 0x0d, 0x2c, 0x4f, 0x65,
-	0x57, 0x59, 0xca, 0x2f, 0x65, 0xf4, 0x86, 0xcc, 0xb3, 0x9f, 0xc2, 0x86, 0x3c, 0x40, 0x08, 0xd2,
-	0xc8, 0xcb, 0xa9, 0x7d, 0xde, 0x27, 0x7d, 0xb2, 0x36, 0x2d, 0xd5, 0xd6, 0x8d, 0xcc, 0x61, 0x94,
-	0x45, 0xec, 0xc7, 0x42, 0xc0, 0x79, 0x0a, 0x0b, 0xf5, 0x3e, 0xa7, 0x24, 0xb9, 0x3c, 0x9f, 0x87,
-	0x92, 0xab, 0x74, 0x21, 0xb9, 0xfe, 0x5f, 0x82, 0x45, 0x73, 0x90, 0xf6, 0xfb, 0x01, 0xcc, 0x04,
-	0x92, 0xa2, 0xb3, 0xe9, 0x7e, 0x81, 0xdf, 0x07, 0xd5, 0xc4, 0xe7, 0xb9, 0xab, 0x35, 0xed, 0xbf,
-	0x96, 0xa0, 0x2c, 0x08, 0x68, 0x03, 0xe6, 0x7c, 0xd6, 0xed, 0x52, 0xce, 0x09, 0x91, 0xe7, 0x95,
-	0xdd, 0x8c, 0x80, 0xde, 0x82, 0xa5, 0xf4, 0xc3, 0x53, 0x71, 0xa5, 0x1e, 0x66, 0x31, 0x25, 0xcb,
-	0xf0, 0x43, 0xdb, 0xb0, 0xa0, 0x6a, 0x1a, 0x89, 0xb3, 0x77, 0x28, 0xbb, 0x15, 0x43, 0x94, 0xfe,
-	0xdf, 0x86, 0x85, 0x5e, 0xcc, 0x7a, 0x2c, 0x31, 0x42, 0x65, 0x25, 0x64, 0x88, 0x52, 0x68, 0x30,
-	0x20, 0xa7, 0x87, 0x93, 0x39, 0x0b, 0xba, 0x99, 0xef, 0x14, 0x74, 0x6f, 0xc1, 0x52, 0xda, 0x0d,
-	0xf4, 0x8d, 0xae, 0xa9, 0x1b, 0x9d, 0x0d, 0x24, 0x94, 0xe3, 0x43, 0x45, 0x46, 0x9c, 0x79, 0x3f,
-	0x04, 0x65, 0x89, 0x59, 0x3d, 0x9f, 0xfc, 0x2f, 0x2e, 0x14, 0xe3, 0x28, 0xc0, 0xcc, 0x8b, 0xc9,
-	0x19, 0xc1, 0xa1, 0x2e, 0xca, 0x15, 0x45, 0x74, 0x25, 0x0d, 0xd9, 0x30, 0xdb, 0x8e, 0xf1, 0xe9,
-	0x29, 0xe5, 0x54, 0x7a, 0xa5, 0xe2, 0xa6, 0xdf, 0xce, 0x23, 0x58, 0x3a, 0x56, 0x97, 0x4f, 0x5f,
-	0x77, 0x13, 0x40, 0x25, 0x42, 0xcc, 0xb4, 0xb5, 0x8a, 0x3b, 0x27, 0x29, 0x2e, 0x63, 0xdc, 0x79,
-	0x0e, 0xab, 0xfb, 0x59, 0xf3, 0xa8, 0x63, 0x8e, 0x2f, 0x03, 0x38, 0xe9, 0xfb, 0x39, 0x75, 0x58,
-	0x54, 0xc7, 0xa6, 0x38, 0xf6, 0x60, 0x25, 0xd7, 0xa5, 0xbc, 0x00, 0x73, 0x9c, 0x87, 0x74, 0x03,
-	0x0f, 0xa1, 0x10, 0xe0, 0xfe, 0x62, 0xc1, 0xfa, 0x7e, 0xbb, 0x1d, 0x93, 0x36, 0xe6, 0xa4, 0x49,
-	0x42, 0xe2, 0xe7, 0x1b, 0xc9, 0xf7, 0x01, 0x38, 0x14, 0x16, 0x53, 0xc3, 0x61, 0x71, 0x17, 0x16,
-	0xc5, 0x79, 0x5e, 0xda, 0xda, 0x64, 0x6c, 0x55, 0xdc, 0x05, 0x41, 0x6d, 0x1a, 0xa2, 0xf3, 0x85,
-	0x05, 0xf6, 0x28, 0x80, 0xfa, 0xce, 0x3e, 0xdc, 0xc0, 0x86, 0xeb, 0xe1, 0x28, 0xf0, 0x7a, 0x31,
-	0x63, 0xa7, 0x12, 0xf0, 0xfc, 0xde, 0xe3, 0x82, 0x48, 0x4b, 0xcf, 0xcb, 0xbd, 0xcb, 0x7e, 0x14,
-	0x1c, 0x0b, 0x55, 0xf7, 0x7a, 0x7a, 0x9e, 0x21, 0x39, 0x7f, 0xb2, 0x60, 0x43, 0x20, 0x22, 0x41,
-	0x86, 0xa4, 0xdf, 0xea, 0x52, 0x6e, 0xfc, 0x74, 0x06, 0x76, 0x22, 0xf9, 0x5e, 0x31, 0x98, 0xa2,
-	0x0e, 0x3a, 0x74, 0xf0, 0x28, 0x48, 0xb7, 0x92, 0x21, 0x19, 0x03, 0xac, 0x09, 0x9b, 0x05, 0xb8,
-	0xbe, 0x47, 0x48, 0x7c, 0x69, 0xc1, 0xd6, 0x13, 0xf3, 0x94, 0xcd, 0x7e, 0x2b, 0x22, 0x3c, 0x69,
-	0xf6, 0x5b, 0x89, 0x1f, 0xd3, 0x16, 0xc9, 0xd5, 0x46, 0xf1, 0x4e, 0x89, 0x2e, 0x40, 0xea, 0x43,
-	0x64, 0x57, 0x2e, 0x36, 0x02, 0x55, 0x1d, 0xcb, 0x6e, 0x25, 0x8b, 0x8c, 0x40, 0x0a, 0xd1, 0x24,
-	0x75, 0x14, 0x8b, 0xd7, 0xa6, 0xb6, 0xa6, 0x76, 0x66, 0xdd, 0x0a, 0x4d, 0xf6, 0x53, 0x9a, 0xf3,
-	0x9f, 0x12, 0xcc, 0xa5, 0x05, 0x61, 0xdc, 0xb8, 0xf0, 0x23, 0x58, 0x7d, 0x49, 0x79, 0x27, 0x88,
-	0xf1, 0x4b, 0x1c, 0x7a, 0x7e, 0x4c, 0x02, 0x12, 0x71, 0x8a, 0xc3, 0x44, 0x67, 0xf7, 0x4a, 0xc6,
-	0x7d, 0x92, 0x31, 0xd1, 0x03, 0xb8, 0x4e, 0x4e, 0x4f, 0x45, 0x40, 0x9d, 0x11, 0xaf, 0x85, 0x43,
-	0x1c, 0xf9, 0x44, 0x57, 0xc1, 0xe5, 0x94, 0x71, 0xa0, 0xe8, 0x72, 0x68, 0x08, 0x71, 0xd2, 0x21,
-	0x81, 0x8c, 0x53, 0x31, 0x34, 0xa8, 0x4f, 0xf4, 0x33, 0xd8, 0xc8, 0xf7, 0xa8, 0x90, 0xb6, 0x69,
-	0x8b, 0x86, 0x94, 0x9f, 0xeb, 0x7e, 0x35, 0x2d, 0x4f, 0xb4, 0x73, 0xfd, 0x2a, 0x13, 0x51, 0xad,
-	0x6b, 0x54, 0x97, 0x9b, 0x91, 0x5a, 0x17, 0xba, 0xdc, 0x26, 0x00, 0x79, 0x45, 0xb9, 0x16, 0x52,
-	0x75, 0x70, 0x4e, 0x50, 0x14, 0xfb, 0x21, 0xa0, 0xf4, 0xae, 0xad, 0x90, 0x68, 0xb1, 0x59, 0x29,
-	0x76, 0x3d, 0xcf, 0x91, 0xe2, 0xce, 0x9f, 0xad, 0xdc, 0x94, 0x71, 0x8c, 0x63, 0x4e, 0x7d, 0xda,
-	0x93, 0xd6, 0xd0, 0x8f, 0x61, 0xbd, 0x1d, 0xb2, 0x16, 0x0e, 0xbd, 0x5e, 0x9e, 0xee, 0xc5, 0x98,
-	0x13, 0xf9, 0x02, 0x25, 0xf7, 0x96, 0x12, 0x18, 0xd0, 0x73, 0x31, 0x27, 0xa2, 0x45, 0x9e, 0x31,
-	0x4e, 0x02, 0x4f, 0x46, 0xbc, 0x2e, 0x0f, 0x20, 0x49, 0x0d, 0x41, 0x11, 0xb9, 0xaf, 0xfc, 0x24,
-	0x20, 0x4a, 0x19, 0xe5, 0xf6, 0x05, 0x43, 0x95, 0x62, 0xce, 0x57, 0x25, 0x58, 0xc8, 0x0d, 0x4d,
-	0xa7, 0x6c, 0x5c, 0x20, 0xa4, 0xa3, 0x54, 0x29, 0x37, 0x4a, 0x65, 0x7d, 0x7c, 0x2a, 0xdf, 0xc7,
-	0xb3, 0xb6, 0x54, 0xfe, 0x4e, 0x6d, 0x69, 0x17, 0x6e, 0xf2, 0x18, 0x47, 0x7a, 0xe2, 0x10, 0xe3,
-	0x62, 0xc2, 0x71, 0xb7, 0xa7, 0x9f, 0xfb, 0x46, 0xc6, 0x3b, 0x31, 0x2c, 0x11, 0x43, 0x26, 0xcc,
-	0xd4, 0xf3, 0x9a, 0xcf, 0xd1, 0xa1, 0x78, 0x6d, 0x74, 0x28, 0xde, 0xe7, 0xb0, 0x34, 0x04, 0x0a,
-	0x21, 0x58, 0x7c, 0x7e, 0xf4, 0xe1, 0xd1, 0x47, 0x9f, 0x1c, 0x79, 0xcd, 0x93, 0xfd, 0x93, 0xe7,
-	0xcd, 0xe5, 0x1f, 0xa0, 0x05, 0x98, 0xab, 0x37, 0x8e, 0x3f, 0x6a, 0x1e, 0x9e, 0x34, 0xea, 0xcb,
-	0x16, 0x9a, 0x87, 0x6b, 0xc7, 0x8d, 0xa3, 0xfa, 0xe1, 0xd1, 0xb3, 0xe5, 0x12, 0x02, 0x98, 0xd9,
-	0x7f, 0x72, 0x72, 0xf8, 0xa2, 0xb1, 0x3c, 0x25, 0x18, 0x8d, 0x5f, 0x1e, 0x9e, 0x08, 0x46, 0x19,
-	0x55, 0x60, 0xb6, 0xf9, 0x8b, 0xfd, 0xe6, 0xcf, 0xc5, 0xd7, 0xb4, 0x10, 0x13, 0xac, 0x46, 0x7d,
-	0x79, 0x66, 0xef, 0x9f, 0xcb, 0x70, 0xe3, 0x40, 0x6e, 0x49, 0x47, 0x2c, 0x20, 0x59, 0x6e, 0xfe,
-	0xc6, 0x82, 0xb9, 0x67, 0x84, 0xab, 0xd1, 0x05, 0xbd, 0x31, 0x66, 0xb2, 0x91, 0xd5, 0xc3, 0xbe,
-	0x3b, 0xd1, 0xfc, 0xe3, 0xbc, 0xf9, 0xe5, 0xbf, 0xff, 0xfb, 0x87, 0xd2, 0x16, 0xba, 0x5d, 0x1b,
-	0xbd, 0x1b, 0xd6, 0xd4, 0x68, 0x84, 0xbe, 0xb0, 0x00, 0xd4, 0x62, 0x24, 0x8a, 0x58, 0x31, 0x86,
-	0xfc, 0xb6, 0x56, 0x8c, 0x61, 0x60, 0x29, 0x9b, 0x00, 0x83, 0x94, 0x47, 0xdf, 0x58, 0x70, 0xfd,
-	0x13, 0x4c, 0xf9, 0xd3, 0xfc, 0x2a, 0x84, 0x76, 0xaf, 0xb2, 0x36, 0x29, 0x5c, 0x7b, 0x57, 0xdf,
-	0xb4, 0x9c, 0x5d, 0x09, 0xf2, 0x01, 0xba, 0x57, 0x04, 0x32, 0x2b, 0x23, 0xb5, 0x84, 0xc7, 0x04,
-	0x77, 0x1f, 0x59, 0xe8, 0x77, 0x19, 0xe2, 0x6c, 0x49, 0x42, 0xab, 0x55, 0xb5, 0x34, 0x57, 0xcd,
-	0xd2, 0x5c, 0x6d, 0x88, 0xa5, 0xd9, 0xbe, 0x57, 0x00, 0xeb, 0xe2, 0x7e, 0x35, 0x1e, 0x8d, 0x2f,
-	0x74, 0xe4, 0xce, 0x95, 0xa1, 0xf9, 0xca, 0x82, 0xc5, 0xc1, 0x05, 0x09, 0xfd, 0x70, 0x9c, 0x27,
-	0xf2, 0xfb, 0x97, 0xfd, 0x70, 0x42, 0x69, 0x0d, 0xf2, 0xae, 0x04, 0x79, 0x07, 0x6d, 0x16, 0x81,
-	0x54, 0xb5, 0xe3, 0x6b, 0xeb, 0x62, 0xb2, 0x3d, 0x9c, 0x74, 0x1b, 0x55, 0xc0, 0xae, 0xb8, 0xbc,
-	0x8e, 0x8f, 0x38, 0x5d, 0x80, 0x7e, 0x0d, 0xb3, 0xcf, 0x88, 0xda, 0xb1, 0xd0, 0x76, 0x81, 0x8d,
-	0xfc, 0x3c, 0x6c, 0x3b, 0x45, 0x42, 0x32, 0xab, 0xa5, 0xe8, 0x78, 0xb7, 0xc8, 0xb9, 0x16, 0xfd,
-	0xd6, 0x82, 0x8a, 0x1e, 0x83, 0x15, 0x80, 0x9d, 0x4b, 0xa7, 0x9b, 0x9c, 0x05, 0xbb, 0xa8, 0xce,
-	0x0e, 0x4d, 0xd5, 0x06, 0x89, 0x33, 0x06, 0xc9, 0xd7, 0x16, 0xa0, 0x67, 0x84, 0x0f, 0x4d, 0xd8,
-	0x85, 0x6f, 0x34, 0x7a, 0x12, 0x2f, 0x04, 0x35, 0x24, 0xee, 0x3c, 0x90, 0xa0, 0xee, 0xa2, 0xed,
-	0xc2, 0x44, 0xcb, 0x14, 0xd0, 0xef, 0x2d, 0x40, 0xfa, 0x56, 0xb9, 0x73, 0x90, 0x33, 0xde, 0x56,
-	0x61, 0x71, 0x1a, 0x9c, 0xf8, 0x0d, 0x1c, 0x67, 0x22, 0x38, 0xdf, 0x58, 0xb0, 0xa9, 0xc6, 0xc3,
-	0x8b, 0xf3, 0xb4, 0x1c, 0x27, 0xd1, 0xa3, 0x71, 0xf3, 0xf2, 0xf0, 0x82, 0x60, 0xef, 0x5e, 0x41,
-	0x43, 0x63, 0xbe, 0x27, 0x31, 0x6f, 0x3b, 0xaf, 0x17, 0x62, 0x36, 0xba, 0xe8, 0x1f, 0x16, 0x6c,
-	0x2b, 0xc4, 0xc3, 0x53, 0xee, 0x20, 0xee, 0xc7, 0x93, 0x8d, 0xd6, 0x03, 0x33, 0xbb, 0xfd, 0xf6,
-	0xd5, 0x94, 0xae, 0x8e, 0xfe, 0x25, 0xcc, 0xeb, 0xd7, 0x6f, 0xbc, 0xa2, 0x1c, 0xdd, 0xbf, 0xd4,
-	0xde, 0x0b, 0x16, 0xf6, 0x23, 0x8e, 0xe3, 0x73, 0x21, 0x6b, 0x17, 0x14, 0x61, 0xe7, 0x0d, 0x69,
-	0xfd, 0xb6, 0xb3, 0x51, 0x64, 0x5d, 0x4c, 0x82, 0x48, 0xec, 0x74, 0xe9, 0xc0, 0x3e, 0x3c, 0xc9,
-	0xa3, 0x77, 0x8b, 0x0a, 0xf9, 0x98, 0x91, 0xbf, 0x10, 0xd4, 0x23, 0x09, 0xea, 0xbe, 0xb3, 0x53,
-	0x58, 0xaf, 0xe4, 0x81, 0xe2, 0x47, 0x1d, 0x78, 0xf0, 0x47, 0x0b, 0xd6, 0x59, 0xdc, 0x1e, 0x0d,
-	0xe4, 0x20, 0x6b, 0x03, 0xc7, 0xc2, 0xd0, 0xb1, 0xf5, 0xab, 0x77, 0xda, 0x94, 0x77, 0xfa, 0xad,
-	0xaa, 0xcf, 0xba, 0xb5, 0x5e, 0x7c, 0x9e, 0x74, 0x31, 0xa7, 0x7e, 0x88, 0x5b, 0x49, 0xcd, 0x9c,
-	0x80, 0x7b, 0x34, 0x19, 0x30, 0xff, 0x3e, 0xe1, 0x9d, 0xbf, 0x95, 0x56, 0x1a, 0xc6, 0x42, 0x23,
-	0x67, 0xe1, 0x5f, 0x19, 0xfd, 0xd3, 0x06, 0xef, 0x7c, 0x6a, 0xe8, 0xad, 0x19, 0x79, 0xb3, 0xc7,
-	0xdf, 0x06, 0x00, 0x00, 0xff, 0xff, 0xb9, 0x65, 0xec, 0xd6, 0x8b, 0x16, 0x00, 0x00,
+	// 1860 bytes of a gzipped FileDescriptorProto
+	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x57, 0xcd, 0x6f, 0x1b, 0xc7,
+	0x15, 0xef, 0x52, 0x14, 0x2d, 0x3d, 0x51, 0x1f, 0x1e, 0x5b, 0xb2, 0xc4, 0x48, 0xb6, 0xbc, 0x8a,
+	0x13, 0xd9, 0xae, 0x49, 0x4b, 0x4e, 0x5d, 0xa4, 0x41, 0xda, 0x4a, 0x26, 0xed, 0x0a, 0x29, 0x14,
+	0x65, 0x29, 0x39, 0x45, 0x11, 0x60, 0x31, 0xdc, 0x1d, 0x91, 0x83, 0x2c, 0x77, 0x98, 0xdd, 0xa1,
+	0x6c, 0x15, 0x28, 0xd0, 0xf4, 0xd2, 0x43, 0x7b, 0x6b, 0x5a, 0xe4, 0x10, 0xb4, 0xf7, 0x5e, 0x72,
+	0xeb, 0xa5, 0xf7, 0x1e, 0x7a, 0xed, 0x9f, 0xd0, 0xf6, 0x5f, 0xe8, 0x39, 0x98, 0xaf, 0xdd, 0x25,
+	0xc5, 0x15, 0xa9, 0xe4, 0x44, 0xee, 0xfb, 0xfc, 0xcd, 0x9b, 0xf7, 0xe6, 0xbd, 0x07, 0xeb, 0x84,
+	0x77, 0x6a, 0x67, 0x3b, 0x38, 0xe8, 0x75, 0xf0, 0x4e, 0xed, 0x0c, 0x07, 0xd4, 0xc7, 0x9c, 0x45,
+	0xd5, 0x5e, 0xc4, 0x38, 0x43, 0xcb, 0x84, 0x77, 0x48, 0x44, 0xfa, 0xdd, 0x2a, 0xe1, 0x9d, 0xaa,
+	0x11, 0xab, 0xac, 0xb7, 0x19, 0x6b, 0x07, 0xa4, 0x86, 0x7b, 0xb4, 0x86, 0xc3, 0x90, 0x71, 0xcc,
+	0x29, 0x0b, 0x63, 0xa5, 0x54, 0x79, 0x43, 0x73, 0xe5, 0x57, 0xab, 0x7f, 0x5a, 0x23, 0xdd, 0x1e,
+	0x3f, 0xd7, 0xcc, 0x3b, 0x03, 0xfe, 0x5a, 0x04, 0x7b, 0x2c, 0x74, 0x5b, 0x01, 0xf3, 0x3e, 0xd5,
+	0x02, 0xb7, 0x07, 0x04, 0x30, 0xe7, 0x24, 0x56, 0xe6, 0x15, 0xdf, 0x7e, 0x1f, 0xe6, 0xeb, 0xac,
+	0x8b, 0x69, 0xe8, 0x90, 0xcf, 0xfa, 0x24, 0xe6, 0xe8, 0x26, 0x4c, 0x93, 0x1e, 0xf3, 0x3a, 0xab,
+	0xd6, 0xa6, 0xb5, 0x5d, 0x74, 0xd4, 0x07, 0x5a, 0x81, 0x92, 0x2f, 0xc5, 0x56, 0x0b, 0x9b, 0xd6,
+	0x76, 0xd9, 0xd1, 0x5f, 0xf6, 0x7b, 0xb0, 0x60, 0xd4, 0xe3, 0x1e, 0x0b, 0x63, 0x82, 0xee, 0xc3,
+	0x52, 0x4c, 0xdb, 0x21, 0xe6, 0xfd, 0x88, 0xb8, 0x5a, 0xc7, 0x92, 0x3a, 0x8b, 0x09, 0x5d, 0xa9,
+	0xd8, 0xef, 0x43, 0xe5, 0xa5, 0x89, 0xd0, 0x9e, 0xc7, 0xe9, 0x99, 0x04, 0x66, 0x80, 0xdc, 0x81,
+	0xb9, 0x5e, 0xbf, 0x15, 0x50, 0xcf, 0xfd, 0x94, 0x9c, 0xc7, 0xab, 0xd6, 0xe6, 0xd4, 0x76, 0xd9,
+	0x01, 0x45, 0xfa, 0x80, 0x9c, 0xc7, 0xf6, 0xff, 0x2c, 0x78, 0x63, 0xa4, 0xbe, 0x46, 0x72, 0x02,
+	0x33, 0xe2, 0xac, 0xfd, 0x98, 0x28, 0xed, 0xb9, 0xdd, 0x77, 0xab, 0x23, 0x2f, 0xa0, 0x7a, 0x89,
+	0x95, 0x6a, 0x53, 0x9a, 0x70, 0x12, 0x53, 0x15, 0x06, 0x25, 0x45, 0x43, 0x1b, 0x00, 0x29, 0x42,
+	0x7d, 0xc8, 0xd9, 0x04, 0x20, 0x7a, 0x0e, 0x25, 0xa5, 0x24, 0x63, 0x36, 0xb7, 0x5b, 0x1d, 0xe7,
+	0x5d, 0xbb, 0xd2, 0x9e, 0x1d, 0xad, 0x6d, 0x7f, 0x04, 0xe8, 0x59, 0x07, 0xd3, 0xb0, 0xc9, 0x71,
+	0xc4, 0x93, 0xd3, 0xad, 0xc2, 0xb5, 0x58, 0x10, 0x88, 0x2f, 0x3d, 0xcf, 0x38, 0xe6, 0x13, 0xdd,
+	0x85, 0x72, 0x9b, 0x84, 0x24, 0xa6, 0xb1, 0xcb, 0x69, 0x97, 0x48, 0xef, 0x45, 0x67, 0x4e, 0xd3,
+	0x8e, 0x69, 0x97, 0xd8, 0x4f, 0x61, 0x39, 0xf1, 0x7a, 0x10, 0xfa, 0xe4, 0xb5, 0x09, 0xfa, 0xe5,
+	0x47, 0xb2, 0xab, 0xb0, 0x32, 0xac, 0xa7, 0xe1, 0xdc, 0x84, 0x69, 0x2a, 0x08, 0x26, 0x6d, 0xe4,
+	0x87, 0xfd, 0xc3, 0x8c, 0xbc, 0x39, 0xdd, 0x44, 0x8e, 0xfe, 0x5e, 0x80, 0x5b, 0x39, 0x71, 0x41,
+	0x3f, 0x4e, 0xe2, 0x2a, 0xd4, 0x16, 0x76, 0xdf, 0x9a, 0x30, 0xae, 0x5a, 0x0b, 0xbd, 0x0b, 0x6b,
+	0x84, 0x77, 0x76, 0x5c, 0x9f, 0xf4, 0x58, 0x4c, 0xb9, 0x2a, 0x17, 0x37, 0xec, 0x77, 0x5b, 0x24,
+	0xd2, 0xc1, 0x5a, 0x11, 0x02, 0x75, 0xc5, 0xdf, 0x17, 0xec, 0x43, 0xc9, 0x45, 0xef, 0xc0, 0x8a,
+	0xd1, 0xa2, 0xa1, 0x17, 0xf4, 0x63, 0xca, 0x42, 0x37, 0x0e, 0x18, 0x5f, 0x9d, 0xda, 0xb4, 0xb6,
+	0xa7, 0x9c, 0x9b, 0x9a, 0x7b, 0x60, 0x98, 0xcd, 0x80, 0x71, 0x51, 0x12, 0x38, 0x49, 0x2c, 0x57,
+	0x55, 0x57, 0x51, 0xca, 0x2f, 0xa6, 0xf4, 0x86, 0xac, 0xb3, 0x9f, 0xc0, 0xba, 0x34, 0x20, 0x04,
+	0x69, 0xe8, 0x66, 0xd4, 0x3e, 0xeb, 0x93, 0x3e, 0x59, 0x9d, 0x96, 0x6a, 0x6b, 0x46, 0xe6, 0x20,
+	0x4c, 0x33, 0xf6, 0x23, 0x21, 0x60, 0x3f, 0x87, 0xf9, 0x7a, 0x9f, 0x53, 0x12, 0x5f, 0x5e, 0xcf,
+	0x43, 0xc5, 0x55, 0xb8, 0x50, 0x5c, 0xff, 0x2f, 0xc0, 0x82, 0x31, 0xa4, 0xe3, 0xbe, 0x0f, 0x25,
+	0x5f, 0x52, 0x74, 0x35, 0x3d, 0xc8, 0x89, 0xfb, 0xa0, 0x9a, 0xf8, 0x3c, 0x77, 0xb4, 0x66, 0xe5,
+	0xaf, 0x05, 0x28, 0x0a, 0x02, 0x5a, 0x87, 0x59, 0x8f, 0x75, 0xbb, 0x94, 0x73, 0x42, 0xa4, 0xbd,
+	0xa2, 0x93, 0x12, 0xd0, 0xdb, 0xb0, 0x98, 0x7c, 0xb8, 0x2a, 0xaf, 0xd4, 0xc5, 0x2c, 0x24, 0x64,
+	0x99, 0x7e, 0x68, 0x0b, 0xe6, 0xd5, 0x9b, 0x46, 0xa2, 0xf4, 0x1e, 0x8a, 0x4e, 0xd9, 0x10, 0x65,
+	0xfc, 0xb7, 0x60, 0xbe, 0x17, 0xb1, 0x1e, 0x8b, 0x8d, 0x50, 0x51, 0x09, 0x19, 0xa2, 0x14, 0x1a,
+	0x4c, 0xc8, 0xe9, 0xe1, 0x62, 0x4e, 0x93, 0xae, 0xf4, 0xad, 0x92, 0xee, 0x6d, 0x58, 0x4c, 0xba,
+	0x81, 0x3e, 0xd1, 0x35, 0x75, 0xa2, 0xb3, 0x81, 0x82, 0xb2, 0x3d, 0x28, 0xcb, 0x8c, 0x33, 0xf7,
+	0x87, 0xa0, 0x28, 0x31, 0xab, 0xeb, 0x93, 0xff, 0xc5, 0x81, 0x22, 0x1c, 0xfa, 0x98, 0xb9, 0x11,
+	0x39, 0x23, 0x38, 0xd0, 0x8f, 0x72, 0x59, 0x11, 0x1d, 0x49, 0x43, 0x15, 0x98, 0x69, 0x47, 0xf8,
+	0xf4, 0x94, 0x72, 0x2a, 0xa3, 0x52, 0x76, 0x92, 0x6f, 0xfb, 0x31, 0x2c, 0x1e, 0xa9, 0xc3, 0x27,
+	0xb7, 0xbb, 0x01, 0xa0, 0x0a, 0x21, 0x62, 0xda, 0x5b, 0xd9, 0x99, 0x95, 0x14, 0x87, 0x31, 0x6e,
+	0x9f, 0xc0, 0xca, 0x5e, 0xda, 0x3c, 0xea, 0x98, 0xe3, 0xcb, 0x00, 0x4e, 0x7a, 0x7f, 0x76, 0x1d,
+	0x16, 0x94, 0xd9, 0x04, 0xc7, 0x2e, 0x2c, 0x67, 0xba, 0x94, 0xeb, 0x63, 0x8e, 0xb3, 0x90, 0x6e,
+	0xe0, 0x21, 0x14, 0x02, 0xdc, 0x5f, 0x2c, 0x58, 0xdb, 0x6b, 0xb7, 0x23, 0xd2, 0xc6, 0x9c, 0x34,
+	0x49, 0x40, 0xbc, 0x6c, 0x23, 0xf9, 0x2e, 0x00, 0x87, 0xd2, 0x62, 0x6a, 0x38, 0x2d, 0xee, 0xc1,
+	0x82, 0xb0, 0xe7, 0x26, 0xad, 0x4d, 0xe6, 0x56, 0xd9, 0x99, 0x17, 0xd4, 0xa6, 0x21, 0xda, 0x9f,
+	0x5b, 0x50, 0x19, 0x05, 0x50, 0x9f, 0xd9, 0x83, 0x1b, 0xd8, 0x70, 0x5d, 0x1c, 0xfa, 0x6e, 0x2f,
+	0x62, 0xec, 0x54, 0x02, 0x9e, 0xdb, 0x7d, 0x92, 0x93, 0x69, 0x89, 0xbd, 0xcc, 0xbd, 0xec, 0x85,
+	0xfe, 0x91, 0x50, 0x75, 0xae, 0x27, 0xf6, 0x0c, 0xc9, 0xfe, 0xb3, 0x05, 0xeb, 0x02, 0x11, 0xf1,
+	0x53, 0x24, 0xfd, 0x56, 0x97, 0x72, 0x13, 0xa7, 0x33, 0xa8, 0xc4, 0x92, 0xef, 0xe6, 0x83, 0xc9,
+	0xeb, 0xa0, 0x43, 0x86, 0x47, 0x41, 0xba, 0x15, 0x0f, 0xc9, 0x18, 0x60, 0x4d, 0xd8, 0xc8, 0xc1,
+	0xf5, 0x1d, 0x52, 0xe2, 0xd7, 0x70, 0xe7, 0x99, 0xb9, 0xc9, 0x66, 0xbf, 0x15, 0x12, 0xde, 0xec,
+	0xb7, 0x62, 0x2f, 0xa2, 0x2d, 0x72, 0x59, 0x5e, 0xdc, 0x85, 0x72, 0x26, 0x2f, 0x7c, 0xd3, 0x3b,
+	0xd3, 0xa4, 0xf0, 0x45, 0xf1, 0xd1, 0x38, 0x09, 0x11, 0x8b, 0x64, 0x52, 0xcc, 0x38, 0x65, 0x1a,
+	0xef, 0x25, 0x34, 0xfb, 0x3f, 0x05, 0x98, 0x4d, 0x9e, 0x82, 0x71, 0x83, 0xc2, 0x0f, 0x60, 0xe5,
+	0x15, 0xe5, 0x1d, 0x3f, 0xc2, 0xaf, 0x70, 0xe0, 0x7a, 0x11, 0xf1, 0x49, 0xc8, 0x29, 0x0e, 0x62,
+	0x5d, 0xd7, 0xcb, 0x29, 0xf7, 0x59, 0xca, 0x44, 0x0f, 0xe1, 0x3a, 0x39, 0x3d, 0x15, 0xa9, 0x74,
+	0x46, 0xdc, 0x16, 0x0e, 0x70, 0xe8, 0x11, 0xfd, 0xfe, 0x2d, 0x25, 0x8c, 0x7d, 0x45, 0x97, 0xe3,
+	0x42, 0x80, 0xe3, 0x0e, 0xf1, 0x65, 0x86, 0x8a, 0x71, 0x41, 0x7d, 0xa2, 0x9f, 0xc2, 0x7a, 0xb6,
+	0x3b, 0x05, 0xb4, 0x4d, 0x5b, 0x34, 0xa0, 0xfc, 0x5c, 0x77, 0xaa, 0x69, 0x69, 0xb1, 0x92, 0xe9,
+	0x54, 0xa9, 0x88, 0x6a, 0x5a, 0xa3, 0xfa, 0x5b, 0x49, 0x6a, 0x5d, 0xe8, 0x6f, 0x1b, 0x00, 0xe4,
+	0x35, 0xe5, 0x5a, 0x48, 0xbd, 0x80, 0xb3, 0x82, 0xa2, 0xd8, 0x8f, 0x00, 0x25, 0x67, 0x6d, 0x05,
+	0x44, 0x8b, 0xcd, 0x48, 0xb1, 0xeb, 0x59, 0x8e, 0x14, 0xb7, 0xbf, 0xb2, 0x32, 0xf3, 0xc5, 0x11,
+	0x8e, 0x38, 0xf5, 0x68, 0x4f, 0x7a, 0x43, 0x3f, 0x82, 0xb5, 0x76, 0xc0, 0x5a, 0x38, 0x70, 0x7b,
+	0x59, 0xba, 0x1b, 0x61, 0x4e, 0xe4, 0x0d, 0x14, 0x9c, 0x5b, 0x4a, 0x60, 0x40, 0xcf, 0xc1, 0x9c,
+	0x88, 0xe6, 0x78, 0xc6, 0x38, 0xf1, 0x5d, 0x99, 0xeb, 0x3a, 0x07, 0x40, 0x92, 0x1a, 0x82, 0x22,
+	0xaa, 0x5e, 0xc5, 0x49, 0x40, 0x94, 0x32, 0x2a, 0xec, 0xf3, 0x86, 0x2a, 0xc5, 0xec, 0x2f, 0x0a,
+	0x30, 0x9f, 0x19, 0x97, 0x4e, 0xd9, 0xb8, 0x44, 0x48, 0x86, 0xa8, 0x42, 0x66, 0x88, 0x4a, 0x3b,
+	0xf8, 0x54, 0xb6, 0x83, 0xa7, 0x0d, 0xa9, 0xf8, 0xad, 0x1a, 0xd2, 0x0e, 0xdc, 0xe4, 0x11, 0x0e,
+	0xf5, 0xac, 0x21, 0x06, 0xc5, 0x98, 0xe3, 0x6e, 0x4f, 0x5f, 0xf7, 0x8d, 0x94, 0x77, 0x6c, 0x58,
+	0x22, 0x87, 0x4c, 0x9a, 0xa9, 0xeb, 0x35, 0x9f, 0xa3, 0x53, 0xf1, 0xda, 0xe8, 0x54, 0x7c, 0xc0,
+	0x61, 0x71, 0x08, 0x14, 0x42, 0xb0, 0x70, 0x72, 0xf8, 0xc1, 0xe1, 0x87, 0x1f, 0x1f, 0xba, 0xcd,
+	0xe3, 0xbd, 0xe3, 0x93, 0xe6, 0xd2, 0xf7, 0xd0, 0x3c, 0xcc, 0xd6, 0x1b, 0x47, 0x1f, 0x36, 0x0f,
+	0x8e, 0x1b, 0xf5, 0x25, 0x0b, 0xcd, 0xc1, 0xb5, 0xa3, 0xc6, 0x61, 0xfd, 0xe0, 0xf0, 0xc5, 0x52,
+	0x01, 0x01, 0x94, 0xf6, 0x9e, 0x1d, 0x1f, 0xbc, 0x6c, 0x2c, 0x4d, 0x09, 0x46, 0xe3, 0x17, 0x07,
+	0xc7, 0x82, 0x51, 0x44, 0x65, 0x98, 0x69, 0xfe, 0x7c, 0xaf, 0xf9, 0x33, 0xf1, 0x35, 0x2d, 0xc4,
+	0x04, 0xab, 0x51, 0x5f, 0x2a, 0xed, 0xfe, 0x73, 0x09, 0x6e, 0xec, 0xcb, 0xfd, 0xe8, 0x90, 0xf9,
+	0x24, 0xad, 0xcd, 0xdf, 0x58, 0x30, 0xfb, 0x82, 0x70, 0x35, 0xb4, 0xa0, 0x37, 0xc7, 0xcc, 0x34,
+	0xf2, 0xe5, 0xa8, 0xdc, 0x9b, 0x68, 0xf2, 0xb1, 0xdf, 0xfa, 0xed, 0xbf, 0xff, 0xfb, 0xc7, 0xc2,
+	0x26, 0xba, 0x5d, 0x1b, 0xbd, 0x15, 0xd6, 0xd4, 0x50, 0x84, 0x3e, 0xb7, 0x00, 0xd4, 0x4a, 0x24,
+	0x9e, 0xaf, 0x7c, 0x0c, 0xd9, 0x3d, 0x2d, 0x1f, 0xc3, 0xc0, 0x3a, 0x36, 0x01, 0x06, 0x29, 0x8f,
+	0xbe, 0xb6, 0xe0, 0xfa, 0xc7, 0x98, 0xf2, 0xe7, 0xd9, 0x25, 0x08, 0xed, 0x5c, 0x65, 0x61, 0x52,
+	0xb8, 0x76, 0xaf, 0xbe, 0x63, 0xd9, 0x3b, 0x12, 0xe4, 0x43, 0x74, 0x3f, 0x0f, 0x64, 0xfa, 0x8c,
+	0xd4, 0x62, 0x1e, 0x11, 0xdc, 0x7d, 0x6c, 0xa1, 0xdf, 0xa7, 0x88, 0xd3, 0xf5, 0x08, 0xad, 0x54,
+	0xd5, 0xba, 0x5c, 0x35, 0xeb, 0x72, 0xb5, 0x21, 0xd6, 0xe5, 0xca, 0xfd, 0x1c, 0x58, 0x17, 0x37,
+	0xab, 0xf1, 0x68, 0x3c, 0xa1, 0x23, 0xb7, 0xad, 0x14, 0xcd, 0x17, 0x16, 0x2c, 0x0c, 0xae, 0x46,
+	0xe8, 0xfb, 0xe3, 0x22, 0x91, 0xdd, 0xbc, 0x2a, 0x8f, 0x26, 0x94, 0xd6, 0x20, 0xef, 0x49, 0x90,
+	0x77, 0xd0, 0x46, 0x1e, 0x48, 0xf5, 0x76, 0x7c, 0x69, 0x5d, 0x2c, 0xb6, 0x47, 0x93, 0xee, 0xa1,
+	0x0a, 0xd8, 0x15, 0xd7, 0xd6, 0xf1, 0x19, 0xa7, 0x1f, 0xa0, 0x5f, 0xc1, 0xcc, 0x0b, 0xa2, 0xb6,
+	0x2b, 0xb4, 0x95, 0xe3, 0x23, 0x3b, 0x09, 0x57, 0xec, 0x3c, 0x21, 0x59, 0xd5, 0x52, 0x74, 0x7c,
+	0x58, 0xe4, 0x44, 0x8b, 0x7e, 0x67, 0x41, 0x59, 0x0f, 0xc0, 0x0a, 0xc0, 0xf6, 0xa5, 0x73, 0x4d,
+	0xc6, 0x43, 0x25, 0xef, 0x9d, 0x1d, 0x9a, 0xa7, 0x0d, 0x12, 0x7b, 0x0c, 0x92, 0x2f, 0x2d, 0x40,
+	0x2f, 0x08, 0x1f, 0x9a, 0xad, 0x73, 0xef, 0x68, 0xf4, 0x0c, 0x9e, 0x0b, 0x6a, 0x48, 0xdc, 0x7e,
+	0x28, 0x41, 0xdd, 0x43, 0x5b, 0xb9, 0x85, 0x96, 0x2a, 0xa0, 0x3f, 0x58, 0x80, 0xf4, 0xa9, 0x32,
+	0x76, 0x90, 0x3d, 0xde, 0x57, 0xee, 0xe3, 0x34, 0x38, 0xeb, 0x1b, 0x38, 0xf6, 0x44, 0x70, 0xbe,
+	0xb6, 0x60, 0x43, 0x0d, 0x86, 0x17, 0x27, 0x69, 0x39, 0x48, 0xa2, 0xc7, 0xe3, 0x26, 0xe5, 0xe1,
+	0xd5, 0xa0, 0xb2, 0x73, 0x05, 0x0d, 0x8d, 0xf9, 0xbe, 0xc4, 0xbc, 0x65, 0xdf, 0xcd, 0xc5, 0x6c,
+	0x74, 0xd1, 0x3f, 0x2c, 0xd8, 0x52, 0x88, 0x87, 0xe7, 0xdb, 0x41, 0xdc, 0x4f, 0x26, 0x1b, 0xaa,
+	0x07, 0xa6, 0xf5, 0xca, 0x3b, 0x57, 0x53, 0xba, 0x3a, 0xfa, 0x57, 0x30, 0xa7, 0x6f, 0xbf, 0xf1,
+	0x9a, 0x72, 0xf4, 0xe0, 0x52, 0x7f, 0x2f, 0x59, 0xd0, 0x0f, 0x39, 0x8e, 0xce, 0x85, 0x6c, 0x25,
+	0xe7, 0x11, 0xb6, 0xdf, 0x94, 0xde, 0x6f, 0xdb, 0xeb, 0x79, 0xde, 0xc5, 0x24, 0x88, 0xbe, 0xb2,
+	0x60, 0x35, 0x19, 0xd6, 0x87, 0x86, 0x78, 0xf4, 0x34, 0xef, 0x1d, 0xbf, 0x7c, 0xd8, 0xcf, 0x85,
+	0xf4, 0x58, 0x42, 0x7a, 0x60, 0x6f, 0xe7, 0xbe, 0x56, 0xd2, 0x9e, 0xf8, 0x51, 0x06, 0xf7, 0xff,
+	0x64, 0xc1, 0x1a, 0x8b, 0xda, 0xa3, 0x71, 0xec, 0xa7, 0x4d, 0xe0, 0x48, 0x38, 0x3a, 0xb2, 0x7e,
+	0xf9, 0xb4, 0x4d, 0x79, 0xa7, 0xdf, 0xaa, 0x7a, 0xac, 0x5b, 0xeb, 0x45, 0xe7, 0x71, 0x17, 0x73,
+	0xea, 0x05, 0xb8, 0x15, 0xd7, 0x8c, 0x05, 0xdc, 0xa3, 0xf1, 0x80, 0xfb, 0xf7, 0x08, 0xef, 0xfc,
+	0xad, 0xb0, 0xdc, 0x30, 0x1e, 0x1a, 0x19, 0x0f, 0xff, 0x4a, 0xe9, 0x9f, 0x34, 0x78, 0xe7, 0x13,
+	0x43, 0x6f, 0x95, 0xe4, 0xc9, 0x9e, 0x7c, 0x13, 0x00, 0x00, 0xff, 0xff, 0x80, 0xff, 0x0f, 0xc9,
+	0x83, 0x16, 0x00, 0x00,
 }
 
 // Reference imports to suppress errors if they are not otherwise used.
@@ -1512,7 +1512,7 @@ type BeaconNodeValidatorClient interface {
 	SubmitAggregateSelectionProof(ctx context.Context, in *AggregateSelectionRequest, opts ...grpc.CallOption) (*AggregateSelectionResponse, error)
 	SubmitSignedAggregateSelectionProof(ctx context.Context, in *SignedAggregateSubmitRequest, opts ...grpc.CallOption) (*SignedAggregateSubmitResponse, error)
 	ProposeExit(ctx context.Context, in *SignedVoluntaryExit, opts ...grpc.CallOption) (*empty.Empty, error)
-	SubscribeCommitteeSubnets(ctx context.Context, in *CommitteeSubnetsSubscribeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
+	SubscribeCommitteeSubnet(ctx context.Context, in *CommitteeSubnetSubscribeRequest, opts ...grpc.CallOption) (*empty.Empty, error)
 }
 
 type beaconNodeValidatorClient struct {
@@ -1686,9 +1686,9 @@ func (c *beaconNodeValidatorClient) ProposeExit(ctx context.Context, in *SignedV
 	return out, nil
 }
 
-func (c *beaconNodeValidatorClient) SubscribeCommitteeSubnets(ctx context.Context, in *CommitteeSubnetsSubscribeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
+func (c *beaconNodeValidatorClient) SubscribeCommitteeSubnet(ctx context.Context, in *CommitteeSubnetSubscribeRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
 	out := new(empty.Empty)
-	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.BeaconNodeValidator/SubscribeCommitteeSubnets", in, out, opts...)
+	err := c.cc.Invoke(ctx, "/ethereum.eth.v1alpha1.BeaconNodeValidator/SubscribeCommitteeSubnet", in, out, opts...)
 	if err != nil {
 		return nil, err
 	}
@@ -1710,7 +1710,7 @@ type BeaconNodeValidatorServer interface {
 	SubmitAggregateSelectionProof(context.Context, *AggregateSelectionRequest) (*AggregateSelectionResponse, error)
 	SubmitSignedAggregateSelectionProof(context.Context, *SignedAggregateSubmitRequest) (*SignedAggregateSubmitResponse, error)
 	ProposeExit(context.Context, *SignedVoluntaryExit) (*empty.Empty, error)
-	SubscribeCommitteeSubnets(context.Context, *CommitteeSubnetsSubscribeRequest) (*empty.Empty, error)
+	SubscribeCommitteeSubnet(context.Context, *CommitteeSubnetSubscribeRequest) (*empty.Empty, error)
 }
 
 func RegisterBeaconNodeValidatorServer(s *grpc.Server, srv BeaconNodeValidatorServer) {
@@ -1957,20 +1957,20 @@ func _BeaconNodeValidator_ProposeExit_Handler(srv interface{}, ctx context.Conte
 	return interceptor(ctx, in, info, handler)
 }
 
-func _BeaconNodeValidator_SubscribeCommitteeSubnets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
-	in := new(CommitteeSubnetsSubscribeRequest)
+func _BeaconNodeValidator_SubscribeCommitteeSubnet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
+	in := new(CommitteeSubnetSubscribeRequest)
 	if err := dec(in); err != nil {
 		return nil, err
 	}
 	if interceptor == nil {
-		return srv.(BeaconNodeValidatorServer).SubscribeCommitteeSubnets(ctx, in)
+		return srv.(BeaconNodeValidatorServer).SubscribeCommitteeSubnet(ctx, in)
 	}
 	info := &grpc.UnaryServerInfo{
 		Server:     srv,
-		FullMethod: "/ethereum.eth.v1alpha1.BeaconNodeValidator/SubscribeCommitteeSubnets",
+		FullMethod: "/ethereum.eth.v1alpha1.BeaconNodeValidator/SubscribeCommitteeSubnet",
 	}
 	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
-		return srv.(BeaconNodeValidatorServer).SubscribeCommitteeSubnets(ctx, req.(*CommitteeSubnetsSubscribeRequest))
+		return srv.(BeaconNodeValidatorServer).SubscribeCommitteeSubnet(ctx, req.(*CommitteeSubnetSubscribeRequest))
 	}
 	return interceptor(ctx, in, info, handler)
 }
@@ -2024,8 +2024,8 @@ var _BeaconNodeValidator_serviceDesc = grpc.ServiceDesc{
 			Handler:    _BeaconNodeValidator_ProposeExit_Handler,
 		},
 		{
-			MethodName: "SubscribeCommitteeSubnets",
-			Handler:    _BeaconNodeValidator_SubscribeCommitteeSubnets_Handler,
+			MethodName: "SubscribeCommitteeSubnet",
+			Handler:    _BeaconNodeValidator_SubscribeCommitteeSubnet_Handler,
 		},
 	},
 	Streams: []grpc.StreamDesc{
diff --git a/eth/v1alpha1/validator.proto b/eth/v1alpha1/validator.proto
index 3bc824b..53cd49b 100644
--- a/eth/v1alpha1/validator.proto
+++ b/eth/v1alpha1/validator.proto
@@ -15,6 +15,7 @@ syntax = "proto3";
 
 package ethereum.eth.v1alpha1;
 
+import "github.com/gogo/protobuf/gogoproto/gogo.proto";
 import "google/api/annotations.proto";
 import "google/protobuf/empty.proto";
 import "eth/v1alpha1/beacon_block.proto";
@@ -208,7 +209,7 @@ message DomainResponse {
 
 message ValidatorActivationRequest {
     // A list of 48 byte validator public keys.
-    repeated bytes public_keys = 1;
+    repeated bytes public_keys = 1 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message ValidatorActivationResponse {
@@ -234,7 +235,7 @@ message ChainStartResponse {
 
 message ValidatorIndexRequest {
     // A 48 byte validator public key.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 }
 
 message ValidatorIndexResponse {
@@ -244,7 +245,7 @@ message ValidatorIndexResponse {
 
 message ValidatorStatusRequest {
     // A 48 byte validator public key.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\""];
 }
 
 enum ValidatorStatus {
@@ -282,7 +283,7 @@ message DutiesRequest {
     uint64 epoch = 1;
 
     // Array of byte encoded BLS public keys.
-    repeated bytes public_keys = 2;
+    repeated bytes public_keys = 2 [(gogoproto.moretags) = "ssz-size:\"?,48\""];
 }
 
 message DutiesResponse {
@@ -301,7 +302,7 @@ message DutiesResponse {
         uint64 proposer_slot = 4;
 
         // 48 byte BLS public key for the validator who's assigned to perform a duty.
-        bytes public_key = 5;
+        bytes public_key = 5 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
         // The current status of the validator assigned to perform the duty.
         ValidatorStatus status = 6;
@@ -316,15 +317,16 @@ message BlockRequest {
     uint64 slot = 1;
 
     // Validator's 32 byte randao reveal secret of the current epoch.
-    bytes randao_reveal = 2;
+    bytes randao_reveal = 2 [(gogoproto.moretags) = "ssz-size:\"48\""];
 
     // Validator's 32 byte graffiti message for the new block.
-    bytes graffiti = 3;
+    bytes graffiti = 3 [(gogoproto.moretags) = "ssz-size:\"32\""];
+
 }
 
 message ProposeResponse {
     // The block root of the successfully proposed beacon block.
-    bytes block_root = 1;
+    bytes block_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message AttestationDataRequest {
@@ -337,7 +339,7 @@ message AttestationDataRequest {
 
 message AttestResponse {
     // The root of the attestation data successfully submitted to the beacon node.
-    bytes attestation_data_root = 1;
+    bytes attestation_data_root = 1 [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message AggregateSelectionRequest {
@@ -346,10 +348,10 @@ message AggregateSelectionRequest {
     // Committee index of the validator at the given slot.
     uint64 committee_index = 2;
     // 48 byte public key of the validator.
-    bytes public_key = 3;
+    bytes public_key = 3 [(gogoproto.moretags) = "ssz-size:\"48\" spec-name:\"pubkey\""];
     // 96 byte signature of the validator on the slot. This is used as proof that the validator is
     // an aggregator for the given slot.
-    bytes slot_signature = 4;
+    bytes slot_signature = 4 [(gogoproto.moretags) = "ssz-size:\"96\""];
 }
 
 message AggregateSelectionResponse {
@@ -364,7 +366,7 @@ message SignedAggregateSubmitRequest {
 
 message SignedAggregateSubmitResponse {
     // The 32 byte hash tree root of the aggregated attestation data.
-    bytes attestation_data_root = 1;
+    bytes attestation_data_root = 1  [(gogoproto.moretags) = "ssz-size:\"32\""];
 }
 
 message CommitteeSubnetsSubscribeRequest {
@@ -382,10 +384,10 @@ message CommitteeSubnetsSubscribeRequest {
 // An Ethereum 2.0 validator.
 message Validator {
     // 48 byte BLS public key used for the validator's activities.
-    bytes public_key = 1;
+    bytes public_key = 1 [(gogoproto.moretags) = "ssz-size:\"48\" spec-name:\"pubkey\""];
 
     // 32 byte hash of the withdrawal destination public key.
-    bytes withdrawal_credentials = 2;
+    bytes withdrawal_credentials = 2 [(gogoproto.moretags) = "ssz-size:\"32\""];
 
     // The validators current effective balance in gwei.
     uint64 effective_balance = 3;
